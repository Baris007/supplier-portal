{
  "version": 3,
  "sources": ["external-global:Serenity.Extensions", "../../../Modules/ServerTypes/Market/OfferColumns.ts", "../../../Modules/ServerTypes/Market/OfferDetailColumns.ts", "../../../Modules/ServerTypes/Market/OfferDetailRow.ts", "../../../Modules/ServerTypes/Market/OfferDetailService.ts", "../../../Modules/ServerTypes/Market/OfferDetailForm.ts", "../../../Modules/Market/OfferDetail/OfferDetailEditor.ts", "../../../Modules/Market/Supplier/SupplierEditor.ts", "../../../Modules/Market/Supplier/SupplierDialog.ts", "../../../Modules/ServerTypes/Market/OfferForm.ts", "../../../Modules/ServerTypes/Market/OfferRow.ts", "../../../Modules/ServerTypes/Market/OfferService.ts", "../../../Modules/ServerTypes/Market/OfferSupplierColumns.ts", "../../../Modules/ServerTypes/Market/OfferSupplierForm.ts", "../../../Modules/ServerTypes/Market/OfferSupplierRow.ts", "../../../Modules/ServerTypes/Market/OfferSupplierService.ts", "../../../Modules/ServerTypes/Market/SupplierColumns.ts", "../../../Modules/ServerTypes/Market/SupplierForm.ts", "../../../Modules/ServerTypes/Market/SupplierRow.ts", "../../../Modules/ServerTypes/Market/SupplierService.ts", "../../../Modules/Market/OfferDetail/OfferDetailDialog.ts"],
  "sourcesContent": ["module.exports = Serenity.Extensions;", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\r\nimport { Column } from \"@serenity-is/sleekgrid\";\r\nimport { OfferRow } from \"./OfferRow\";\r\n\r\nexport interface OfferColumns {\r\n    Id: Column<OfferRow>;\r\n    State: Column<OfferRow>;\r\n}\r\n\r\nexport class OfferColumns extends ColumnsBase<OfferRow> {\r\n    static readonly columnsKey = 'Market.Offer';\r\n    static readonly Fields = fieldsProxy<OfferColumns>();\r\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\r\nimport { Column } from \"@serenity-is/sleekgrid\";\r\nimport { OfferDetailRow } from \"./OfferDetailRow\";\r\n\r\nexport interface OfferDetailColumns {\r\n    Id: Column<OfferDetailRow>;\r\n    OfferId: Column<OfferDetailRow>;\r\n    Quantity: Column<OfferDetailRow>;\r\n    Description: Column<OfferDetailRow>;\r\n    Price: Column<OfferDetailRow>;\r\n    ItemId: Column<OfferDetailRow>;\r\n    Curency: Column<OfferDetailRow>;\r\n}\r\n\r\nexport class OfferDetailColumns extends ColumnsBase<OfferDetailRow> {\r\n    static readonly columnsKey = 'Market.OfferDetail';\r\n    static readonly Fields = fieldsProxy<OfferDetailColumns>();\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\r\n\r\nexport interface OfferDetailRow {\r\n    Id?: number;\r\n    OfferId?: number;\r\n    Quantity?: number;\r\n    Description?: string;\r\n    Price?: number;\r\n    ItemId?: number;\r\n    Curency?: string;\r\n}\r\n\r\nexport abstract class OfferDetailRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly nameProperty = 'Description';\r\n    static readonly localTextPrefix = 'Market.OfferDetail';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<OfferDetailRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\r\nimport { OfferDetailRow } from \"./OfferDetailRow\";\r\n\r\nexport namespace OfferDetailService {\r\n    export const baseUrl = 'Market/OfferDetail';\r\n\r\n    export declare function Create(request: SaveRequest<OfferDetailRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\r\n    export declare function Update(request: SaveRequest<OfferDetailRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<OfferDetailRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<OfferDetailRow>>;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<OfferDetailRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<OfferDetailRow>>;\r\n\r\n    export const Methods = {\r\n        Create: \"Market/OfferDetail/Create\",\r\n        Update: \"Market/OfferDetail/Update\",\r\n        Delete: \"Market/OfferDetail/Delete\",\r\n        Retrieve: \"Market/OfferDetail/Retrieve\",\r\n        List: \"Market/OfferDetail/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>OfferDetailService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFimport { IntegerEditor, DecimalEditor, StringEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\r\n\r\nexport interface OfferDetailForm {\r\n    OfferId: IntegerEditor;\r\n    Quantity: DecimalEditor;\r\n    Description: StringEditor;\r\n    Price: DecimalEditor;\r\n    ItemId: IntegerEditor;\r\n    Curency: StringEditor;\r\n}\r\n\r\nexport class OfferDetailForm extends PrefixedContext {\r\n    static readonly formKey = 'Market.OfferDetail';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!OfferDetailForm.init)  {\r\n            OfferDetailForm.init = true;\r\n\r\n            var w0 = IntegerEditor;\r\n            var w1 = DecimalEditor;\r\n            var w2 = StringEditor;\r\n\r\n            initFormType(OfferDetailForm, [\r\n                'OfferId', w0,\r\n                'Quantity', w1,\r\n                'Description', w2,\r\n                'Price', w1,\r\n                'ItemId', w0,\r\n                'Curency', w2\r\n            ]);\r\n        }\r\n    }\r\n}", "import { Decorators } from \"@serenity-is/corelib\";\r\nimport { GridEditorBase } from \"@serenity-is/extensions\";\r\nimport { OfferDetailColumns, OfferDetailRow } from \"../../ServerTypes/Market\";\r\nimport { OfferDetailDialog } from \"./OfferDetailDialog\";\r\n\r\n@Decorators.registerEditor(\"SupplierPortal.Market.OfferDetailEditor\")\r\nexport class OfferDetailEditor extends GridEditorBase<OfferDetailRow> {\r\n    protected getColumnsKey() { return OfferDetailColumns.columnsKey }\r\n    protected getLocalTextPrefix() { return OfferDetailRow.localTextPrefix; }\r\n    getDialogType() { return OfferDetailDialog; }\r\n\r\n    constructor(container) {\r\n        super(container);\r\n    }\r\n}", "import { Decorators } from \"@serenity-is/corelib\";\r\nimport { GridEditorBase } from \"@serenity-is/extensions\";\r\nimport { SupplierColumns, SupplierRow } from \"../../ServerTypes/Market\";\r\nimport { SupplierDialog } from \"./SupplierDialog\";\r\n\r\n@Decorators.registerEditor(\"SupplierPortal.Market.SupplierEditor\")\r\nexport class SupplierEditor extends GridEditorBase<SupplierRow> {\r\n    protected getColumnsKey() { return SupplierColumns.columnsKey }\r\n    protected getLocalTextPrefix() { return SupplierRow.localTextPrefix; }\r\n    getDialogType() { return SupplierDialog; }\r\n\r\n    constructor(container) {\r\n        super(container);\r\n    }\r\n}", "import { SupplierForm, SupplierRow, SupplierService } from '@/ServerTypes/Market';\r\nimport { Decorators } from '@serenity-is/corelib';\r\nimport { GridEditorDialog } from '@serenity-is/extensions';\r\n\r\n@Decorators.registerClass('SupplierPortal.Market.SupplierDialog')\r\nexport class SupplierDialog extends GridEditorDialog<SupplierRow> {\r\n    protected getFormKey() { return SupplierForm.formKey; }\r\n    protected getRowDefinition() { return SupplierRow; }\r\n    //protected getService() { return SupplierService.baseUrl; }\r\n\r\n    protected form = new SupplierForm(this.idPrefix);\r\n}", "\uFEFFimport { OfferDetailEditor } from \"@/Market/OfferDetail/OfferDetailEditor\";\r\nimport { SupplierEditor } from \"@/Market/Supplier/SupplierEditor\";\r\nimport { IntegerEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\r\n\r\nexport interface OfferForm {\r\n    Supplier: SupplierEditor;\r\n    State: IntegerEditor;\r\n    Detail: OfferDetailEditor;\r\n}\r\n\r\nexport class OfferForm extends PrefixedContext {\r\n    static readonly formKey = 'Market.Offer';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!OfferForm.init)  {\r\n            OfferForm.init = true;\r\n\r\n            var w0 = SupplierEditor;\r\n            var w1 = IntegerEditor;\r\n            var w2 = OfferDetailEditor;\r\n\r\n            initFormType(OfferForm, [\r\n                'Supplier', w0,\r\n                'State', w1,\r\n                'Detail', w2\r\n            ]);\r\n        }\r\n    }\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\r\nimport { OfferDetailRow } from \"./OfferDetailRow\";\r\nimport { SupplierRow } from \"./SupplierRow\";\r\n\r\nexport interface OfferRow {\r\n    Id?: number;\r\n    Supplier?: SupplierRow[];\r\n    State?: number;\r\n    Detail?: OfferDetailRow[];\r\n}\r\n\r\nexport abstract class OfferRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly localTextPrefix = 'Market.Offer';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<OfferRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\r\nimport { OfferRow } from \"./OfferRow\";\r\n\r\nexport namespace OfferService {\r\n    export const baseUrl = 'Market/Offer';\r\n\r\n    export declare function Create(request: SaveRequest<OfferRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\r\n    export declare function Update(request: SaveRequest<OfferRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<OfferRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<OfferRow>>;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<OfferRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<OfferRow>>;\r\n\r\n    export const Methods = {\r\n        Create: \"Market/Offer/Create\",\r\n        Update: \"Market/Offer/Update\",\r\n        Delete: \"Market/Offer/Delete\",\r\n        Retrieve: \"Market/Offer/Retrieve\",\r\n        List: \"Market/Offer/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>OfferService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\r\nimport { Column } from \"@serenity-is/sleekgrid\";\r\nimport { OfferSupplierRow } from \"./OfferSupplierRow\";\r\n\r\nexport interface OfferSupplierColumns {\r\n    Id: Column<OfferSupplierRow>;\r\n    SupplierId: Column<OfferSupplierRow>;\r\n    OfferId: Column<OfferSupplierRow>;\r\n}\r\n\r\nexport class OfferSupplierColumns extends ColumnsBase<OfferSupplierRow> {\r\n    static readonly columnsKey = 'Market.OfferSupplier';\r\n    static readonly Fields = fieldsProxy<OfferSupplierColumns>();\r\n}", "\uFEFFimport { IntegerEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\r\n\r\nexport interface OfferSupplierForm {\r\n    SupplierId: IntegerEditor;\r\n    OfferId: IntegerEditor;\r\n}\r\n\r\nexport class OfferSupplierForm extends PrefixedContext {\r\n    static readonly formKey = 'Market.OfferSupplier';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!OfferSupplierForm.init)  {\r\n            OfferSupplierForm.init = true;\r\n\r\n            var w0 = IntegerEditor;\r\n\r\n            initFormType(OfferSupplierForm, [\r\n                'SupplierId', w0,\r\n                'OfferId', w0\r\n            ]);\r\n        }\r\n    }\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\r\n\r\nexport interface OfferSupplierRow {\r\n    Id?: number;\r\n    SupplierId?: number;\r\n    OfferId?: number;\r\n}\r\n\r\nexport abstract class OfferSupplierRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly localTextPrefix = 'Market.OfferSupplier';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<OfferSupplierRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\r\nimport { OfferSupplierRow } from \"./OfferSupplierRow\";\r\n\r\nexport namespace OfferSupplierService {\r\n    export const baseUrl = 'Market/OfferSupplier';\r\n\r\n    export declare function Create(request: SaveRequest<OfferSupplierRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\r\n    export declare function Update(request: SaveRequest<OfferSupplierRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<OfferSupplierRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<OfferSupplierRow>>;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<OfferSupplierRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<OfferSupplierRow>>;\r\n\r\n    export const Methods = {\r\n        Create: \"Market/OfferSupplier/Create\",\r\n        Update: \"Market/OfferSupplier/Update\",\r\n        Delete: \"Market/OfferSupplier/Delete\",\r\n        Retrieve: \"Market/OfferSupplier/Retrieve\",\r\n        List: \"Market/OfferSupplier/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>OfferSupplierService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\r\nimport { Column } from \"@serenity-is/sleekgrid\";\r\nimport { SupplierRow } from \"./SupplierRow\";\r\n\r\nexport interface SupplierColumns {\r\n    Id: Column<SupplierRow>;\r\n    CompanyName: Column<SupplierRow>;\r\n    Email: Column<SupplierRow>;\r\n}\r\n\r\nexport class SupplierColumns extends ColumnsBase<SupplierRow> {\r\n    static readonly columnsKey = 'Market.Supplier';\r\n    static readonly Fields = fieldsProxy<SupplierColumns>();\r\n}", "\uFEFFimport { StringEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\r\n\r\nexport interface SupplierForm {\r\n    CompanyName: StringEditor;\r\n    Email: StringEditor;\r\n}\r\n\r\nexport class SupplierForm extends PrefixedContext {\r\n    static readonly formKey = 'Market.Supplier';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!SupplierForm.init)  {\r\n            SupplierForm.init = true;\r\n\r\n            var w0 = StringEditor;\r\n\r\n            initFormType(SupplierForm, [\r\n                'CompanyName', w0,\r\n                'Email', w0\r\n            ]);\r\n        }\r\n    }\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\r\n\r\nexport interface SupplierRow {\r\n    Id?: number;\r\n    CompanyName?: string;\r\n    Email?: string;\r\n}\r\n\r\nexport abstract class SupplierRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly nameProperty = 'CompanyName';\r\n    static readonly localTextPrefix = 'Market.Supplier';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<SupplierRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\r\nimport { SupplierRow } from \"./SupplierRow\";\r\n\r\nexport namespace SupplierService {\r\n    export const baseUrl = 'Market/Supplier';\r\n\r\n    export declare function Create(request: SaveRequest<SupplierRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\r\n    export declare function Update(request: SaveRequest<SupplierRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<SupplierRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<SupplierRow>>;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<SupplierRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<SupplierRow>>;\r\n\r\n    export const Methods = {\r\n        Create: \"Market/Supplier/Create\",\r\n        Update: \"Market/Supplier/Update\",\r\n        Delete: \"Market/Supplier/Delete\",\r\n        Retrieve: \"Market/Supplier/Retrieve\",\r\n        List: \"Market/Supplier/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>SupplierService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "import { OfferDetailForm, OfferDetailRow, OfferDetailService } from '@/ServerTypes/Market';\r\nimport { Decorators } from '@serenity-is/corelib';\r\nimport { GridEditorDialog } from '@serenity-is/extensions';\r\n\r\n@Decorators.registerClass('SupplierPortal.Market.OfferDetailDialog')\r\nexport class OfferDetailDialog extends GridEditorDialog<OfferDetailRow> {\r\n    protected getFormKey() { return OfferDetailForm.formKey; }\r\n    protected getRowDefinition() { return OfferDetailRow; }\r\n    //protected getService() { return OfferDetailService.baseUrl; }\r\n\r\n    protected form = new OfferDetailForm(this.idPrefix);\r\n}"],
  "mappings": "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",
  "names": ["require_Serenity", "__commonJSMin", "exports", "module", "import_corelib", "_OfferColumns", "__name", "OfferColumns", "import_corelib", "_OfferDetailColumns", "__name", "OfferDetailColumns", "import_corelib", "_OfferDetailRow", "__name", "OfferDetailRow", "import_corelib", "OfferDetailService", "x", "r", "s", "o", "import_corelib", "_OfferDetailForm", "prefix", "w0", "w1", "w2", "__name", "OfferDetailForm", "import_corelib", "import_extensions", "_OfferDetailEditor_decorators", "_init", "_a", "_OfferDetailEditor", "OfferDetailColumns", "OfferDetailRow", "OfferDetailDialog", "container", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "OfferDetailEditor", "import_corelib", "import_extensions", "import_corelib", "import_extensions", "_SupplierDialog_decorators", "_init", "_a", "_SupplierDialog", "SupplierForm", "SupplierRow", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "SupplierDialog", "_SupplierEditor_decorators", "_init", "_a", "_SupplierEditor", "SupplierColumns", "SupplierRow", "SupplierDialog", "container", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "SupplierEditor", "import_corelib", "_OfferForm", "prefix", "w0", "SupplierEditor", "w1", "w2", "OfferDetailEditor", "__name", "OfferForm", "import_corelib", "_OfferRow", "__name", "OfferRow", "import_corelib", "OfferService", "x", "r", "s", "o", "import_corelib", "_OfferSupplierColumns", "__name", "OfferSupplierColumns", "import_corelib", "_OfferSupplierForm", "prefix", "w0", "__name", "OfferSupplierForm", "import_corelib", "_OfferSupplierRow", "__name", "OfferSupplierRow", "import_corelib", "OfferSupplierService", "x", "r", "s", "o", "import_corelib", "_SupplierColumns", "__name", "SupplierColumns", "import_corelib", "_SupplierForm", "prefix", "w0", "__name", "SupplierForm", "import_corelib", "_SupplierRow", "__name", "SupplierRow", "import_corelib", "SupplierService", "x", "r", "s", "o", "import_corelib", "import_extensions", "_OfferDetailDialog_decorators", "_init", "_a", "_OfferDetailDialog", "OfferDetailForm", "OfferDetailRow", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "OfferDetailDialog"]
}
