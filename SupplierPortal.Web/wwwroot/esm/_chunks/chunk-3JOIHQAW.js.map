{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/Market/ItemColumns.ts", "../../../Modules/ServerTypes/Market/ItemRow.ts", "../../../Modules/ServerTypes/Market/ItemService.ts", "../../../Modules/ServerTypes/Market/OfferColumns.ts", "../../../Modules/ServerTypes/Market/OfferDetailColumns.ts", "../../../Modules/ServerTypes/Market/OfferDetailRow.ts", "../../../Modules/ServerTypes/Market/OfferDetailService.ts", "../../../Modules/ServerTypes/Market/OfferRow.ts", "../../../Modules/ServerTypes/Market/OfferService.ts", "../../../Modules/ServerTypes/Market/SupplierColumns.ts", "../../../Modules/ServerTypes/Market/SupplierRow.ts", "../../../Modules/ServerTypes/Market/SupplierService.ts", "../../../Modules/ServerTypes/Market/ItemForm.ts", "../../../Modules/ServerTypes/Market/OfferDetailForm.ts", "../../../Modules/ServerTypes/Market/OfferForm.ts", "../../../Modules/ServerTypes/Market/SupplierForm.ts"],
  "sourcesContent": ["\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { ItemRow } from \"./ItemRow\";\n\nexport interface ItemColumns {\n    Id: Column<ItemRow>;\n    ItemCode: Column<ItemRow>;\n    ItemName: Column<ItemRow>;\n}\n\nexport class ItemColumns extends ColumnsBase<ItemRow> {\n    static readonly columnsKey = 'Market.Item';\n    static readonly Fields = fieldsProxy<ItemColumns>();\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface ItemRow {\n    Id?: number;\n    ItemCode?: number;\n    ItemName?: string;\n}\n\nexport abstract class ItemRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'ItemName';\n    static readonly localTextPrefix = 'Market.Item';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<ItemRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { ItemRow } from \"./ItemRow\";\n\nexport namespace ItemService {\n    export const baseUrl = 'Market/Item';\n\n    export declare function Create(request: SaveRequest<ItemRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<ItemRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<ItemRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<ItemRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<ItemRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<ItemRow>>;\n\n    export const Methods = {\n        Create: \"Market/Item/Create\",\n        Update: \"Market/Item/Update\",\n        Delete: \"Market/Item/Delete\",\n        Retrieve: \"Market/Item/Retrieve\",\n        List: \"Market/Item/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>ItemService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { OfferRow } from \"./OfferRow\";\n\nexport interface OfferColumns {\n    Id: Column<OfferRow>;\n    ItemName: Column<OfferRow>;\n    SupplierCompanyName: Column<OfferRow>;\n    Email: Column<OfferRow>;\n    State: Column<OfferRow>;\n}\n\nexport class OfferColumns extends ColumnsBase<OfferRow> {\n    static readonly columnsKey = 'Market.Offer';\n    static readonly Fields = fieldsProxy<OfferColumns>();\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { OfferDetailRow } from \"./OfferDetailRow\";\n\nexport interface OfferDetailColumns {\n    Id: Column<OfferDetailRow>;\n    OfferEmail: Column<OfferDetailRow>;\n    Quantity: Column<OfferDetailRow>;\n    Description: Column<OfferDetailRow>;\n    StatusDate: Column<OfferDetailRow>;\n    Price: Column<OfferDetailRow>;\n}\n\nexport class OfferDetailColumns extends ColumnsBase<OfferDetailRow> {\n    static readonly columnsKey = 'Market.OfferDetail';\n    static readonly Fields = fieldsProxy<OfferDetailColumns>();\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface OfferDetailRow {\n    Id?: number;\n    OfferId?: number;\n    Quantity?: number;\n    Description?: string;\n    StatusDate?: string;\n    Price?: number;\n    OfferEmail?: string;\n}\n\nexport abstract class OfferDetailRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'Description';\n    static readonly localTextPrefix = 'Market.OfferDetail';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<OfferDetailRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { OfferDetailRow } from \"./OfferDetailRow\";\n\nexport namespace OfferDetailService {\n    export const baseUrl = 'Market/OfferDetail';\n\n    export declare function Create(request: SaveRequest<OfferDetailRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<OfferDetailRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<OfferDetailRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<OfferDetailRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<OfferDetailRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<OfferDetailRow>>;\n\n    export const Methods = {\n        Create: \"Market/OfferDetail/Create\",\n        Update: \"Market/OfferDetail/Update\",\n        Delete: \"Market/OfferDetail/Delete\",\n        Retrieve: \"Market/OfferDetail/Retrieve\",\n        List: \"Market/OfferDetail/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>OfferDetailService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface OfferRow {\n    Id?: number;\n    ItemId?: number;\n    SupplierId?: number;\n    Email?: string;\n    State?: number;\n    ItemName?: string;\n    SupplierCompanyName?: string;\n}\n\nexport abstract class OfferRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'Email';\n    static readonly localTextPrefix = 'Market.Offer';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<OfferRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { OfferRow } from \"./OfferRow\";\n\nexport namespace OfferService {\n    export const baseUrl = 'Market/Offer';\n\n    export declare function Create(request: SaveRequest<OfferRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<OfferRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<OfferRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<OfferRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<OfferRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<OfferRow>>;\n\n    export const Methods = {\n        Create: \"Market/Offer/Create\",\n        Update: \"Market/Offer/Update\",\n        Delete: \"Market/Offer/Delete\",\n        Retrieve: \"Market/Offer/Retrieve\",\n        List: \"Market/Offer/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>OfferService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { SupplierRow } from \"./SupplierRow\";\n\nexport interface SupplierColumns {\n    Id: Column<SupplierRow>;\n    CompanyName: Column<SupplierRow>;\n    Email: Column<SupplierRow>;\n}\n\nexport class SupplierColumns extends ColumnsBase<SupplierRow> {\n    static readonly columnsKey = 'Market.Supplier';\n    static readonly Fields = fieldsProxy<SupplierColumns>();\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface SupplierRow {\n    Id?: number;\n    CompanyName?: string;\n    Email?: string;\n}\n\nexport abstract class SupplierRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'CompanyName';\n    static readonly localTextPrefix = 'Market.Supplier';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<SupplierRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { SupplierRow } from \"./SupplierRow\";\n\nexport namespace SupplierService {\n    export const baseUrl = 'Market/Supplier';\n\n    export declare function Create(request: SaveRequest<SupplierRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<SupplierRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<SupplierRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<SupplierRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<SupplierRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<SupplierRow>>;\n\n    export const Methods = {\n        Create: \"Market/Supplier/Create\",\n        Update: \"Market/Supplier/Update\",\n        Delete: \"Market/Supplier/Delete\",\n        Retrieve: \"Market/Supplier/Retrieve\",\n        List: \"Market/Supplier/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>SupplierService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { IntegerEditor, StringEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface ItemForm {\n    ItemCode: IntegerEditor;\n    ItemName: StringEditor;\n}\n\nexport class ItemForm extends PrefixedContext {\n    static readonly formKey = 'Market.Item';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!ItemForm.init)  {\n            ItemForm.init = true;\n\n            var w0 = IntegerEditor;\n            var w1 = StringEditor;\n\n            initFormType(ItemForm, [\n                'ItemCode', w0,\n                'ItemName', w1\n            ]);\n        }\n    }\n}", "\uFEFFimport { ServiceLookupEditor, DecimalEditor, StringEditor, DateEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface OfferDetailForm {\n    OfferId: ServiceLookupEditor;\n    Quantity: DecimalEditor;\n    Description: StringEditor;\n    StatusDate: DateEditor;\n    Price: DecimalEditor;\n}\n\nexport class OfferDetailForm extends PrefixedContext {\n    static readonly formKey = 'Market.OfferDetail';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!OfferDetailForm.init)  {\n            OfferDetailForm.init = true;\n\n            var w0 = ServiceLookupEditor;\n            var w1 = DecimalEditor;\n            var w2 = StringEditor;\n            var w3 = DateEditor;\n\n            initFormType(OfferDetailForm, [\n                'OfferId', w0,\n                'Quantity', w1,\n                'Description', w2,\n                'StatusDate', w3,\n                'Price', w1\n            ]);\n        }\n    }\n}", "\uFEFFimport { ServiceLookupEditor, StringEditor, IntegerEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface OfferForm {\n    ItemId: ServiceLookupEditor;\n    SupplierId: ServiceLookupEditor;\n    Email: StringEditor;\n    State: IntegerEditor;\n}\n\nexport class OfferForm extends PrefixedContext {\n    static readonly formKey = 'Market.Offer';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!OfferForm.init)  {\n            OfferForm.init = true;\n\n            var w0 = ServiceLookupEditor;\n            var w1 = StringEditor;\n            var w2 = IntegerEditor;\n\n            initFormType(OfferForm, [\n                'ItemId', w0,\n                'SupplierId', w0,\n                'Email', w1,\n                'State', w2\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface SupplierForm {\n    CompanyName: StringEditor;\n    Email: StringEditor;\n}\n\nexport class SupplierForm extends PrefixedContext {\n    static readonly formKey = 'Market.Supplier';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!SupplierForm.init)  {\n            SupplierForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(SupplierForm, [\n                'CompanyName', w0,\n                'Email', w0\n            ]);\n        }\n    }\n}"],
  "mappings": "sDAAC,IAAAA,EAAyC,SAUnC,IAAMC,EAAN,MAAMA,UAAoB,aAAqB,CAGtD,EAHsDC,EAAAD,EAAA,eAAzCA,EACO,WAAa,cADpBA,EAEO,UAAS,eAAyB,EAF/C,IAAME,EAANF,ECVN,IAAAG,EAA4B,SAQtB,IAAeC,EAAf,MAAeA,CAAQ,CAU9B,EAV8BC,EAAAD,EAAA,WAARA,EACF,WAAa,KADXA,EAEF,aAAe,WAFbA,EAGF,gBAAkB,cAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,eAAqB,EAT3C,IAAeE,EAAfF,ECRN,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,cAQVA,EAAA,QAAU,CACnB,OAAQ,qBACR,OAAQ,qBACR,OAAQ,qBACR,SAAU,uBACV,KAAM,kBACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAaC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACvC,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHhB,IAAAK,EAAyC,SAYnC,IAAMC,EAAN,MAAMA,UAAqB,aAAsB,CAGxD,EAHwDC,EAAAD,EAAA,gBAA3CA,EACO,WAAa,eADpBA,EAEO,UAAS,eAA0B,EAFhD,IAAME,EAANF,ECZN,IAAAG,EAAyC,SAanC,IAAMC,EAAN,MAAMA,UAA2B,aAA4B,CAGpE,EAHoEC,EAAAD,EAAA,sBAAvDA,EACO,WAAa,qBADpBA,EAEO,UAAS,eAAgC,EAFtD,IAAME,EAANF,ECbN,IAAAG,EAA4B,SAYtB,IAAeC,EAAf,MAAeA,CAAe,CAUrC,EAVqCC,EAAAD,EAAA,kBAAfA,EACF,WAAa,KADXA,EAEF,aAAe,cAFbA,EAGF,gBAAkB,qBAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,eAA4B,EATlD,IAAeE,EAAfF,ECZN,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,qBAQVA,EAAA,QAAU,CACnB,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,SAAU,8BACV,KAAM,yBACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAoBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAC9C,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHhB,IAAAK,EAA4B,SAYtB,IAAeC,EAAf,MAAeA,CAAS,CAU/B,EAV+BC,EAAAD,EAAA,YAATA,EACF,WAAa,KADXA,EAEF,aAAe,QAFbA,EAGF,gBAAkB,eAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,eAAsB,EAT5C,IAAeE,EAAfF,ECZN,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,eAQVA,EAAA,QAAU,CACnB,OAAQ,sBACR,OAAQ,sBACR,OAAQ,sBACR,SAAU,wBACV,KAAM,mBACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAcC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACxC,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHhB,IAAAK,EAAyC,SAUnC,IAAMC,EAAN,MAAMA,UAAwB,aAAyB,CAG9D,EAH8DC,EAAAD,EAAA,mBAAjDA,EACO,WAAa,kBADpBA,EAEO,UAAS,eAA6B,EAFnD,IAAME,EAANF,ECVN,IAAAG,EAA4B,SAQtB,IAAeC,EAAf,MAAeA,CAAY,CAUlC,EAVkCC,EAAAD,EAAA,eAAZA,EACF,WAAa,KADXA,EAEF,aAAe,cAFbA,EAGF,gBAAkB,kBAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,eAAyB,EAT/C,IAAeE,EAAfF,ECRN,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,kBAQVA,EAAA,QAAU,CACnB,OAAQ,yBACR,OAAQ,yBACR,OAAQ,yBACR,SAAU,2BACV,KAAM,sBACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAiBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAC3C,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHhB,IAAAK,EAA2E,SAOrE,IAAMC,EAAN,MAAMA,UAAiB,iBAAgB,CAI1C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAS,KAAO,CACjBA,EAAS,KAAO,GAEhB,IAAIE,EAAK,gBACLC,EAAK,kBAET,gBAAaH,EAAU,CACnB,WAAYE,EACZ,WAAYC,CAChB,CAAC,CACL,CACJ,CACJ,EAnB8CC,EAAAJ,EAAA,YAAjCA,EACO,QAAU,cADvB,IAAMK,EAANL,ECPN,IAAAM,EAA4G,SAUtG,IAAMC,EAAN,MAAMA,UAAwB,iBAAgB,CAIjD,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAgB,KAAO,CACxBA,EAAgB,KAAO,GAEvB,IAAIE,EAAK,sBACLC,EAAK,gBACLC,EAAK,eACLC,EAAK,gBAET,gBAAaL,EAAiB,CAC1B,UAAWE,EACX,WAAYC,EACZ,cAAeC,EACf,aAAcC,EACd,QAASF,CACb,CAAC,CACL,CACJ,CACJ,EAxBqDG,EAAAN,EAAA,mBAAxCA,EACO,QAAU,qBADvB,IAAMO,EAANP,ECVN,IAAAQ,EAAgG,SAS1F,IAAMC,EAAN,MAAMA,UAAkB,iBAAgB,CAI3C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAU,KAAO,CAClBA,EAAU,KAAO,GAEjB,IAAIE,EAAK,sBACLC,EAAK,eACLC,EAAK,mBAET,gBAAaJ,EAAW,CACpB,SAAUE,EACV,aAAcA,EACd,QAASC,EACT,QAASC,CACb,CAAC,CACL,CACJ,CACJ,EAtB+CC,EAAAL,EAAA,aAAlCA,EACO,QAAU,eADvB,IAAMM,EAANN,ECTN,IAAAO,EAA4D,SAOtD,IAAMC,EAAN,MAAMA,UAAqB,iBAAgB,CAI9C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAa,KAAO,CACrBA,EAAa,KAAO,GAEpB,IAAIE,EAAK,kBAET,gBAAaF,EAAc,CACvB,cAAeE,EACf,QAASA,CACb,CAAC,CACL,CACJ,CACJ,EAlBkDC,EAAAH,EAAA,gBAArCA,EACO,QAAU,kBADvB,IAAMI,EAANJ",
  "names": ["import_corelib", "_ItemColumns", "__name", "ItemColumns", "import_corelib", "_ItemRow", "__name", "ItemRow", "import_corelib", "ItemService", "x", "r", "s", "o", "import_corelib", "_OfferColumns", "__name", "OfferColumns", "import_corelib", "_OfferDetailColumns", "__name", "OfferDetailColumns", "import_corelib", "_OfferDetailRow", "__name", "OfferDetailRow", "import_corelib", "OfferDetailService", "x", "r", "s", "o", "import_corelib", "_OfferRow", "__name", "OfferRow", "import_corelib", "OfferService", "x", "r", "s", "o", "import_corelib", "_SupplierColumns", "__name", "SupplierColumns", "import_corelib", "_SupplierRow", "__name", "SupplierRow", "import_corelib", "SupplierService", "x", "r", "s", "o", "import_corelib", "_ItemForm", "prefix", "w0", "w1", "__name", "ItemForm", "import_corelib", "_OfferDetailForm", "prefix", "w0", "w1", "w2", "w3", "__name", "OfferDetailForm", "import_corelib", "_OfferForm", "prefix", "w0", "w1", "w2", "__name", "OfferForm", "import_corelib", "_SupplierForm", "prefix", "w0", "__name", "SupplierForm"]
}
