{
  "version": 3,
  "sources": ["external-global:Serenity.Extensions", "../../../Modules/ServerTypes/Market/OfferColumns.ts", "../../../Modules/ServerTypes/Market/OfferDetailColumns.ts", "../../../Modules/ServerTypes/Market/OfferDetailRow.ts", "../../../Modules/ServerTypes/Market/OfferDetailService.ts", "../../../Modules/ServerTypes/Market/OfferDetailForm.ts", "../../../Modules/Market/OfferDetail/OfferDetailEditor.ts", "../../../Modules/ServerTypes/Market/OfferForm.ts", "../../../Modules/ServerTypes/Market/OfferRow.ts", "../../../Modules/ServerTypes/Market/OfferService.ts", "../../../Modules/ServerTypes/Market/SupplierColumns.ts", "../../../Modules/ServerTypes/Market/SupplierForm.ts", "../../../Modules/ServerTypes/Market/SupplierRow.ts", "../../../Modules/ServerTypes/Market/SupplierService.ts", "../../../Modules/Market/OfferDetail/OfferDetailDialog.ts"],
  "sourcesContent": ["module.exports = Serenity.Extensions;", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { OfferRow } from \"./OfferRow\";\n\nexport interface OfferColumns {\n    Id: Column<OfferRow>;\n    ItemId: Column<OfferRow>;\n    SupplierId: Column<OfferRow>;\n    Email: Column<OfferRow>;\n    State: Column<OfferRow>;\n}\n\nexport class OfferColumns extends ColumnsBase<OfferRow> {\n    static readonly columnsKey = 'Market.Offer';\n    static readonly Fields = fieldsProxy<OfferColumns>();\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\r\nimport { Column } from \"@serenity-is/sleekgrid\";\r\nimport { OfferDetailRow } from \"./OfferDetailRow\";\r\n\r\nexport interface OfferDetailColumns {\r\n    Id: Column<OfferDetailRow>;\r\n    OfferEmail: Column<OfferDetailRow>;\r\n    Quantity: Column<OfferDetailRow>;\r\n    Description: Column<OfferDetailRow>;\r\n    StatusDate: Column<OfferDetailRow>;\r\n    Price: Column<OfferDetailRow>;\r\n}\r\n\r\nexport class OfferDetailColumns extends ColumnsBase<OfferDetailRow> {\r\n    static readonly columnsKey = 'Market.OfferDetail';\r\n    static readonly Fields = fieldsProxy<OfferDetailColumns>();\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\r\n\r\nexport interface OfferDetailRow {\r\n    Id?: number;\r\n    OfferId?: number;\r\n    Quantity?: number;\r\n    Description?: string;\r\n    StatusDate?: string;\r\n    Price?: number;\r\n    OfferEmail?: string;\r\n}\r\n\r\nexport abstract class OfferDetailRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly nameProperty = 'Description';\r\n    static readonly localTextPrefix = 'Market.OfferDetail';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<OfferDetailRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\r\nimport { OfferDetailRow } from \"./OfferDetailRow\";\r\n\r\nexport namespace OfferDetailService {\r\n    export const baseUrl = 'Market/OfferDetail';\r\n\r\n    export declare function Create(request: SaveRequest<OfferDetailRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\r\n    export declare function Update(request: SaveRequest<OfferDetailRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<OfferDetailRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<OfferDetailRow>>;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<OfferDetailRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<OfferDetailRow>>;\r\n\r\n    export const Methods = {\r\n        Create: \"Market/OfferDetail/Create\",\r\n        Update: \"Market/OfferDetail/Update\",\r\n        Delete: \"Market/OfferDetail/Delete\",\r\n        Retrieve: \"Market/OfferDetail/Retrieve\",\r\n        List: \"Market/OfferDetail/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>OfferDetailService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFimport { ServiceLookupEditor, DecimalEditor, StringEditor, DateEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\r\n\r\nexport interface OfferDetailForm {\r\n    OfferId: ServiceLookupEditor;\r\n    Quantity: DecimalEditor;\r\n    Description: StringEditor;\r\n    StatusDate: DateEditor;\r\n    Price: DecimalEditor;\r\n}\r\n\r\nexport class OfferDetailForm extends PrefixedContext {\r\n    static readonly formKey = 'Market.OfferDetail';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!OfferDetailForm.init)  {\r\n            OfferDetailForm.init = true;\r\n\r\n            var w0 = ServiceLookupEditor;\r\n            var w1 = DecimalEditor;\r\n            var w2 = StringEditor;\r\n            var w3 = DateEditor;\r\n\r\n            initFormType(OfferDetailForm, [\r\n                'OfferId', w0,\r\n                'Quantity', w1,\r\n                'Description', w2,\r\n                'StatusDate', w3,\r\n                'Price', w1\r\n            ]);\r\n        }\r\n    }\r\n}", "import { Decorators } from \"@serenity-is/corelib\";\r\nimport { GridEditorBase } from \"@serenity-is/extensions\";\r\nimport { OfferDetailColumns, OfferDetailRow } from \"../../ServerTypes/Market\";\r\nimport { OfferDetailDialog } from \"./OfferDetailDialog\";\r\n\r\n@Decorators.registerEditor(\"SupplierPortal.Market.OfferDetailEditor\")\r\nexport class OfferDetailEditor extends GridEditorBase<OfferDetailRow> {\r\n    protected getColumnsKey() { return OfferDetailColumns.columnsKey }\r\n    protected getLocalTextPrefix() { return OfferDetailRow.localTextPrefix; }\r\n    getDialogType() { return OfferDetailDialog; }\r\n\r\n    constructor(container) {\r\n        super(container);\r\n    }\r\n}", "\uFEFFimport { OfferDetailEditor } from \"@/Market/OfferDetail/OfferDetailEditor\";\r\nimport { IntegerEditor, StringEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\r\n\r\nexport interface OfferForm {\r\n    ItemId: IntegerEditor;\r\n    SupplierId: IntegerEditor;\r\n    Email: StringEditor;\r\n    State: IntegerEditor;\r\n    Detail: OfferDetailEditor;\r\n    Id: IntegerEditor;\r\n}\r\n\r\nexport class OfferForm extends PrefixedContext {\r\n    static readonly formKey = 'Market.Offer';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!OfferForm.init)  {\r\n            OfferForm.init = true;\r\n\r\n            var w0 = IntegerEditor;\r\n            var w1 = StringEditor;\r\n            var w2 = OfferDetailEditor;\r\n\r\n            initFormType(OfferForm, [\r\n                'ItemId', w0,\r\n                'SupplierId', w0,\r\n                'Email', w1,\r\n                'State', w0,\r\n                'Detail', w2,\r\n                'Id', w0\r\n            ]);\r\n        }\r\n    }\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\r\nimport { OfferDetailRow } from \"./OfferDetailRow\";\r\n\r\nexport interface OfferRow {\r\n    Id?: number;\r\n    ItemId?: number;\r\n    SupplierId?: number;\r\n    Email?: string;\r\n    State?: number;\r\n    Detail?: OfferDetailRow[];\r\n}\r\n\r\nexport abstract class OfferRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly nameProperty = 'Email';\r\n    static readonly localTextPrefix = 'Market.Offer';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<OfferRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { OfferRow } from \"./OfferRow\";\n\nexport namespace OfferService {\n    export const baseUrl = 'Market/Offer';\n\n    export declare function Create(request: SaveRequest<OfferRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<OfferRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<OfferRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<OfferRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<OfferRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<OfferRow>>;\n\n    export const Methods = {\n        Create: \"Market/Offer/Create\",\n        Update: \"Market/Offer/Update\",\n        Delete: \"Market/Offer/Delete\",\n        Retrieve: \"Market/Offer/Retrieve\",\n        List: \"Market/Offer/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>OfferService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { SupplierRow } from \"./SupplierRow\";\n\nexport interface SupplierColumns {\n    Id: Column<SupplierRow>;\n    CompanyName: Column<SupplierRow>;\n    Email: Column<SupplierRow>;\n}\n\nexport class SupplierColumns extends ColumnsBase<SupplierRow> {\n    static readonly columnsKey = 'Market.Supplier';\n    static readonly Fields = fieldsProxy<SupplierColumns>();\n}", "\uFEFFimport { StringEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface SupplierForm {\n    CompanyName: StringEditor;\n    Email: StringEditor;\n}\n\nexport class SupplierForm extends PrefixedContext {\n    static readonly formKey = 'Market.Supplier';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!SupplierForm.init)  {\n            SupplierForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(SupplierForm, [\n                'CompanyName', w0,\n                'Email', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface SupplierRow {\n    Id?: number;\n    CompanyName?: string;\n    Email?: string;\n}\n\nexport abstract class SupplierRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'CompanyName';\n    static readonly localTextPrefix = 'Market.Supplier';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<SupplierRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { SupplierRow } from \"./SupplierRow\";\n\nexport namespace SupplierService {\n    export const baseUrl = 'Market/Supplier';\n\n    export declare function Create(request: SaveRequest<SupplierRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<SupplierRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<SupplierRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<SupplierRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<SupplierRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<SupplierRow>>;\n\n    export const Methods = {\n        Create: \"Market/Supplier/Create\",\n        Update: \"Market/Supplier/Update\",\n        Delete: \"Market/Supplier/Delete\",\n        Retrieve: \"Market/Supplier/Retrieve\",\n        List: \"Market/Supplier/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>SupplierService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "import { OfferDetailForm, OfferDetailRow, OfferDetailService } from '@/ServerTypes/Market';\r\nimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\n\r\n@Decorators.registerClass('SupplierPortal.Market.OfferDetailDialog')\r\nexport class OfferDetailDialog extends EntityDialog<OfferDetailRow, any> {\r\n    protected getFormKey() { return OfferDetailForm.formKey; }\r\n    protected getRowDefinition() { return OfferDetailRow; }\r\n    protected getService() { return OfferDetailService.baseUrl; }\r\n\r\n    protected form = new OfferDetailForm(this.idPrefix);\r\n}"],
  "mappings": "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",
  "names": ["require_Serenity", "__commonJSMin", "exports", "module", "import_corelib", "_OfferColumns", "__name", "OfferColumns", "import_corelib", "_OfferDetailColumns", "__name", "OfferDetailColumns", "import_corelib", "_OfferDetailRow", "__name", "OfferDetailRow", "import_corelib", "OfferDetailService", "x", "r", "s", "o", "import_corelib", "_OfferDetailForm", "prefix", "w0", "w1", "w2", "w3", "__name", "OfferDetailForm", "import_corelib", "import_extensions", "_OfferDetailEditor_decorators", "_init", "_a", "_OfferDetailEditor", "OfferDetailColumns", "OfferDetailRow", "OfferDetailDialog", "container", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "OfferDetailEditor", "import_corelib", "_OfferForm", "prefix", "w0", "w1", "w2", "OfferDetailEditor", "__name", "OfferForm", "import_corelib", "_OfferRow", "__name", "OfferRow", "import_corelib", "OfferService", "x", "r", "s", "o", "import_corelib", "_SupplierColumns", "__name", "SupplierColumns", "import_corelib", "_SupplierForm", "prefix", "w0", "__name", "SupplierForm", "import_corelib", "_SupplierRow", "__name", "SupplierRow", "import_corelib", "SupplierService", "x", "r", "s", "o", "import_corelib", "_OfferDetailDialog_decorators", "_init", "_a", "_OfferDetailDialog", "OfferDetailForm", "OfferDetailRow", "OfferDetailService", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "OfferDetailDialog"]
}
