{
  "version": 3,
  "sources": ["../../../src/layouts/frozenlayout.ts", "global-externals:_"],
  "sourcesContent": ["import { Column, disableSelection, H, parsePx, spacerDiv } from \"../core\";\nimport { GridOptions, LayoutEngine, LayoutHost, ViewRange } from \"../grid\";\n\nexport const FrozenLayout: { new(): LayoutEngine } = function(): LayoutEngine {\n    var canvasWidth: number;\n    var canvasWidthL: number;\n    var canvasWidthR: number;\n    var frozenBottom: boolean;\n    var frozenRowIdx: number;\n    var frozenCols: number;\n    var frozenRows: number;\n    var headersWidthL: number;\n    var headersWidthR: number;\n    var viewportTopH: number;\n\n    var canvasBottomL: HTMLDivElement;\n    var canvasBottomR: HTMLDivElement;\n    var canvasTopL: HTMLDivElement;\n    var canvasTopR: HTMLDivElement;\n    var headerColsL: HTMLDivElement;\n    var headerColsR: HTMLDivElement;\n    var headerRowColsL: HTMLDivElement;\n    var headerRowColsR: HTMLDivElement;\n    var headerRowSpacerL: HTMLDivElement;\n    var headerRowSpacerR: HTMLDivElement;\n    var footerRowColsL: HTMLDivElement;\n    var footerRowColsR: HTMLDivElement;\n    var footerRowSpacerL: HTMLDivElement;\n    var footerRowSpacerR: HTMLDivElement;\n    var paneBottomL: HTMLDivElement;\n    var paneBottomR: HTMLDivElement;\n    var paneHeaderL: HTMLDivElement;\n    var paneHeaderR: HTMLDivElement;\n    var paneTopL: HTMLDivElement;\n    var paneTopR: HTMLDivElement;\n    var scrollContainerX: HTMLDivElement;\n    var scrollContainerY: HTMLDivElement;\n    var topPanelL: HTMLDivElement;\n    var topPanelR: HTMLDivElement;\n    var viewportBottomL: HTMLDivElement;\n    var viewportBottomR: HTMLDivElement;\n    var viewportTopL: HTMLDivElement;\n    var viewportTopR: HTMLDivElement;\n\n    function appendCachedRow(row: number, rowNodeL: HTMLDivElement, rowNodeR: HTMLDivElement): void {\n        var bottom = frozenRows && row >= frozenRowIdx + (frozenBottom ? 0 : 1);\n        if (bottom) {\n            rowNodeL && canvasBottomL.appendChild(rowNodeL);\n            frozenCols && rowNodeR && canvasBottomR.appendChild(rowNodeR);\n        }\n        else {\n            rowNodeL && canvasTopL.appendChild(rowNodeL);\n            frozenCols && rowNodeR && canvasTopR.appendChild(rowNodeR);\n        }\n    }\n\n    const calcCanvasWidth = () => {\n        var cols = host.getColumns(), i = cols.length;\n\n        canvasWidthL = canvasWidthR = 0;\n\n        while (i--) {\n            if (frozenCols > 0 && i >= frozenCols) {\n                canvasWidthR += cols[i].width;\n            } else {\n                canvasWidthL += cols[i].width;\n            }\n        }\n\n        var totalRowWidth = canvasWidthL + canvasWidthR;\n        return host.getOptions().fullWidthRows ? Math.max(totalRowWidth, host.getAvailableWidth()) : totalRowWidth;\n    }\n\n    var host: LayoutHost;\n\n    function init(hostGrid: LayoutHost) {\n        host = hostGrid;\n        const spacerW = calcCanvasWidth() + host.getScrollDims().width + 'px';\n        const options = host.getOptions();\n        const uisd = options.useLegacyUI ? ' ui-state-default' : '';\n\n        // -- PANE HEADER LEFT\n        headerColsL = H('div', { class: 'slick-header-columns slick-header-columns-left', style: (options.rtl ? \"right\" : \"left\") + ':-1000px' });\n        paneHeaderL = H('div', { class: \"slick-pane slick-pane-header slick-pane-left\", tabIndex: '0' },\n            H('div', { class: 'slick-header slick-header-left' + uisd, style: !options.showColumnHeader && 'display: none' }, headerColsL));\n\n        // -- PANE HEADER RIGHT\n        headerColsR = H('div', { class: 'slick-header-columns slick-header-columns-right', style: (options.rtl ? \"right\" : \"left\") + ':-1000px' });\n        paneHeaderR = H('div', { class: \"slick-pane slick-pane-header slick-pane-right\", tabIndex: '0' },\n            H('div', { class: 'slick-header slick-header-right' + uisd, style: !options.showColumnHeader && 'display: none' }, headerColsR));\n\n        // -- PANE TOP LEFT (headerrow left + top panel left + viewport top left + footer row right)\n        headerRowColsL = H('div', { class: 'slick-headerrow-columns slick-headerrow-columns-left' });\n        headerRowSpacerL = spacerDiv(spacerW);\n        var headerRowL = H('div', { class: 'slick-headerrow' + uisd, style: !options.showHeaderRow && 'display: none' }, headerRowColsL, headerRowSpacerL);\n\n        topPanelL = H('div', { class: 'slick-top-panel', style: 'width: 10000px' })\n        var topPanelLS = H('div', { class: 'slick-top-panel-scroller' + uisd, style: !options.showTopPanel && 'display: none' }, topPanelL);\n\n        canvasTopL = H('div', { class: \"grid-canvas grid-canvas-top grid-canvas-left\", tabIndex: \"0\", hideFocus: '' });\n        viewportTopL = H('div', { class: \"slick-viewport slick-viewport-top slick-viewport-left\", tabIndex: \"0\", hideFocus: '' }, canvasTopL);\n\n        footerRowColsL = H('div', { class: 'slick-footerrow-columns slick-footerrow-columns-left' });\n        footerRowSpacerL = spacerDiv(spacerW);\n        var footerRowL = H('div', { class: 'slick-footerrow' + uisd, style: !options.showFooterRow && 'display: none' }, footerRowColsL, footerRowSpacerL);\n\n        paneTopL = H('div', { class: \"slick-pane slick-pane-top slick-pane-left\", tabIndex: \"0\" }, headerRowL, topPanelLS, viewportTopL, footerRowL);\n\n        // -- PANE TOP RIGHT (headerrow right + top panel right + viewport top right + footer row right)\n        headerRowColsR = H('div', { class: 'slick-headerrow-columns slick-headerrow-columns-right' });\n        headerRowSpacerR = spacerDiv(spacerW);\n        var headerRowR = H('div', { class: 'slick-headerrow' + uisd, style: !options.showHeaderRow && 'display: none' }, headerRowColsR, headerRowSpacerR);\n\n        topPanelR = H('div', { class: 'slick-top-panel', style: 'width: 10000px' });\n        var topPanelRS = H('div', { class: 'slick-top-panel-scroller' + uisd, style: !options.showTopPanel && 'display: none' }, topPanelR);\n\n        canvasTopR = H('div', { class: \"grid-canvas grid-canvas-top grid-canvas-right\", tabIndex: \"0\", hideFocus: '' })\n        viewportTopR = H('div', { class: \"slick-viewport slick-viewport-top slick-viewport-right\", tabIndex: \"0\", hideFocus: '' }, canvasTopR);\n\n        footerRowColsR = H('div', { class: 'slick-footerrow-columns slick-footerrow-columns-right' });\n        footerRowSpacerR = H('div', { style: 'display:block;height:1px;position:absolute;top:0;left:0;', width: spacerW });\n        var footerRowR = H('div', { class: 'slick-footer-row' + uisd, style: !options.showFooterRow && 'display: none' }, footerRowColsR, footerRowSpacerR);\n\n        paneTopR = H('div', { class: \"slick-pane slick-pane-top slick-pane-right\", tabIndex: \"0\" }, headerRowR, topPanelRS, viewportTopR, footerRowR);\n\n        // -- PANE BOTTOM LEFT\n        canvasBottomL = H('div', { class: \"grid-canvas grid-canvas-bottom grid-canvas-left\", tabIndex: \"0\", hideFocus: '' });\n        viewportBottomL = H('div', { class: \"slick-viewport slick-viewport-bottom slick-viewport-left\", tabIndex: \"0\", hideFocus: '' }, canvasBottomL);\n        paneBottomL = H('div', { class: \"slick-pane slick-pane-bottom slick-pane-left\", tabIndex: \"0\" }, viewportBottomL);\n\n        canvasBottomR = H('div', { class: \"grid-canvas grid-canvas-bottom grid-canvas-right\", tabIndex: \"0\", hideFocus: '' });\n        viewportBottomR = H('div', { class: \"slick-viewport slick-viewport-bottom slick-viewport-right\", tabIndex: \"0\", hideFocus: '' });\n        paneBottomR = H('div', { class: \"slick-pane slick-pane-bottom slick-pane-right\", tabIndex: \"0\" }, viewportBottomR);\n\n        host.getContainerNode().append(\n            paneHeaderL,\n            paneHeaderR,\n            paneTopL,\n            paneTopR,\n            paneBottomL,\n            paneBottomR);\n\n        // disable all text selection in header (including input and textarea)\n        disableSelection(headerColsL);\n        disableSelection(headerColsR);\n\n        adjustFrozenRowOption();\n    }\n\n    function getHeaderCols() {\n        return [headerColsL, headerColsR];\n    }\n\n    function getHeaderRowCols() {\n        return [headerRowColsL, headerRowColsR];\n    }\n\n    function getFooterRowCols() {\n        return [footerRowColsL, footerRowColsR];\n    }\n\n    const getCanvasNodeFor = (cell: number, row: number) => {\n        if (row == null && cell == null)\n            return canvasTopL;\n\n        var rightSide = cell >= frozenCols;\n\n        if (frozenRows > 0 && (row >= frozenRowIdx + (frozenBottom ? 0 : 1)))\n            return rightSide ? canvasBottomR : canvasBottomL;\n\n        return rightSide ? canvasTopR : canvasTopL;\n    }\n\n    function getCanvasWidth() {\n        return canvasWidth;\n    }\n\n    function getCanvasNodes() {\n        return [canvasTopL, canvasTopR, canvasBottomL, canvasBottomR];\n    }\n\n    function getScrollContainerX() {\n        return scrollContainerX;\n    }\n\n    function getScrollContainerY() {\n        return scrollContainerY;\n    }\n\n    function getViewportNodeFor(cell: number, row: number) {\n        if (row == null && cell == null)\n            return canvasTopL;\n\n        var rightSide = cell >= frozenCols;\n\n        if (frozenRows > 0 && (row >= frozenRowIdx + (frozenBottom ? 0 : 1)))\n            return rightSide ? canvasBottomR : canvasBottomL;\n\n        return rightSide ? canvasTopR : canvasTopL;\n    }\n\n    function getViewportNodes() {\n        return [viewportTopL, viewportTopR, viewportBottomL, viewportBottomR];\n    }\n\n    const updateCanvasWidth = () => {\n        var oldCanvasWidth = canvasWidth;\n        var oldCanvasWidthL = canvasWidthL;\n        var oldCanvasWidthR = canvasWidthR;\n        var widthChanged;\n        canvasWidth = calcCanvasWidth();\n        var scrollWidth = host.getScrollDims().width;\n\n        widthChanged = canvasWidth !== oldCanvasWidth || canvasWidthL !== oldCanvasWidthL || canvasWidthR !== oldCanvasWidthR;\n        var vpi = host.getViewportInfo();\n\n        if (widthChanged || frozenCols || frozenRows) {\n            var cwlPX = canvasWidthL + 'px'\n            var cwrPX = canvasWidthR + 'px';\n\n            canvasTopL.style.width = cwlPX;\n\n            calcHeaderWidths();\n\n            if (frozenCols) {\n                var vpminusPX = (vpi.width - canvasWidthL) + 'px';\n                const rtl = host.getOptions().rtl;\n\n                canvasTopR.style.width = cwrPX;\n                paneHeaderL.style.width = cwlPX;\n                paneHeaderR.style[rtl ? \"right\" : \"left\"] = cwlPX;\n                paneHeaderR.style.width = vpminusPX;\n\n                paneTopL.style.width = cwlPX;\n                paneTopR.style[rtl ? \"right\" : \"left\"] = cwlPX;\n                paneTopR.style.width = vpminusPX;\n\n                headerRowColsL.style.width = cwlPX;\n                headerRowColsL.parentElement.style.width = cwlPX;\n                headerRowColsR.style.width = cwrPX;\n                headerRowColsR.parentElement.style.width = vpminusPX;\n\n                footerRowColsL.style.width = cwlPX;\n                footerRowColsL.parentElement.style.width = cwlPX;\n                footerRowColsR.style.width = cwrPX;\n                footerRowColsR.parentElement.style.width = vpminusPX;\n\n                viewportTopL.style.width = cwlPX;\n                viewportTopR.style.width = vpminusPX;\n\n                if (frozenRows) {\n                    paneBottomL.style.width = cwlPX;\n                    paneBottomR.style[rtl ? \"right\" : \"left\"] = cwlPX;\n\n                    viewportBottomL.style.width = cwlPX;\n                    viewportBottomR.style.width = vpminusPX;\n\n                    canvasBottomL.style.width = cwlPX;\n                    canvasBottomR.style.width = cwrPX;\n                }\n            } else {\n                paneHeaderL.style.width = '100%';\n                paneTopL.style.width = '100%';\n                headerRowColsL.parentElement.style.width = '100%';\n                headerRowColsL.style.width = canvasWidth + 'px';\n                footerRowColsL.parentElement.style.width = '100%';\n                footerRowColsL.style.width = canvasWidth + 'px';\n                viewportTopL.style.width = '100%';\n\n                if (frozenRows) {\n                    viewportBottomL.style.width = '100%';\n                    canvasBottomL.style.width = cwlPX;\n                }\n            }\n\n            vpi.hasHScroll = (canvasWidth > vpi.width - scrollWidth);\n        }\n\n        var w = (canvasWidth + (vpi.hasHScroll ? scrollWidth : 0)) + 'px';\n\n        headerRowSpacerL.style.width = w;\n        headerRowSpacerR.style.width = w;\n        footerRowSpacerL.style.width = w;\n        footerRowSpacerR.style.width = w;\n\n        return widthChanged;\n    }\n\n    const getHeaderColumn = (cell: number) => {\n        return (frozenCols > 0 && cell >= frozenCols ?\n            headerColsR.children.item(cell - frozenCols) : headerColsL.children.item(cell)) as HTMLDivElement;\n    }\n\n    const getHeaderRowColumn = (cell: number) => {\n        var target: HTMLDivElement;\n\n        if (frozenCols <= 0 || cell < frozenCols) {\n            target = headerRowColsL;\n        }\n        else {\n            target = headerRowColsR;\n            cell -= frozenCols;\n        }\n\n        return target.childNodes.item(cell) as HTMLDivElement;\n    }\n\n    const getFooterRowColumn = (cell: number) => {\n        var target: HTMLDivElement;\n\n        if (frozenCols <= 0 || cell < frozenCols) {\n            target = footerRowColsL;\n        }\n        else {\n            target = footerRowColsR;\n            cell -= frozenCols;\n        }\n\n        return target.childNodes.item(cell) as HTMLDivElement;\n    }\n\n    const getHeaderRowColsFor = (cell: number) => {\n        return frozenCols > 0 && cell >= frozenCols ? headerRowColsR : headerRowColsL;\n    }\n\n    const getFooterRowColsFor = (cell: number) => {\n        return frozenCols > 0 && cell >= frozenCols ? footerRowColsR : footerRowColsL;\n    }\n\n    const calcHeaderWidths = () => {\n        headersWidthL = headersWidthR = 0;\n\n        var scrollWidth = host.getScrollDims().width;\n        var cols = host.getColumns();\n        for (var i = 0, ii = cols.length; i < ii; i++) {\n            var width = cols[i].width;\n\n            if (frozenCols > 0 && i >= frozenCols) {\n                headersWidthR += width;\n            } else {\n                headersWidthL += width;\n            }\n        }\n\n        const vs = host.getViewportInfo();\n\n        if (frozenCols > 0) {\n            headersWidthL = headersWidthL + 1000;\n            headersWidthR = Math.max(headersWidthR, vs.width) + headersWidthL;\n            headersWidthR += scrollWidth;\n        } else {\n            headersWidthL += scrollWidth;\n            headersWidthL = Math.max(headersWidthL, vs.width) + 1000;\n        }\n\n        headerColsL.style.width = headersWidthL + 'px';\n        headerColsR.style.width = headersWidthR + 'px';\n    }\n\n    const getHeaderColsFor = (cell: number) => {\n        return frozenCols > 0 && cell >= frozenCols ? headerColsR : headerColsL;\n    }\n\n    const handleScrollH = () => {\n        const options = host.getOptions();\n        const scrollLeft = host.getScrollLeft();\n        if (frozenCols) {\n            options.showColumnHeader && (headerColsR.parentElement.scrollLeft = scrollLeft);\n            options.showTopPanel && (topPanelR.parentElement.scrollLeft = scrollLeft);\n            options.showHeaderRow && (headerRowColsR.parentElement.scrollLeft = scrollLeft);\n            options.showFooterRow && (footerRowColsR.parentElement.scrollLeft = scrollLeft);\n            if (frozenRows) {\n                viewportTopR.scrollLeft = scrollLeft;\n            }\n        } else {\n            options.showColumnHeader && (headerColsL.parentElement.scrollLeft = scrollLeft);\n            options.showTopPanel && (topPanelL.parentElement.scrollLeft = scrollLeft);\n            options.showHeaderRow && (headerRowColsL.parentElement.scrollLeft = scrollLeft);\n            options.showFooterRow && (footerRowColsL.parentElement.scrollLeft = scrollLeft);\n            if (frozenRows) {\n                viewportTopL.scrollLeft = scrollLeft;\n            }\n        }\n    }\n\n    const handleScrollV = () => {\n        if (frozenCols) {\n            if (frozenRows && !frozenBottom) {\n                viewportBottomL.scrollTop = host.getScrollTop();\n            } else {\n                viewportTopL.scrollTop = host.getScrollTop();\n            }\n        }\n    }\n\n    const setScroller = () => {\n        if (frozenCols) {\n            if (frozenRows) {\n                if (frozenBottom) {\n                    scrollContainerX = viewportBottomR;\n                    scrollContainerY = viewportTopR;\n                } else {\n                    scrollContainerX = scrollContainerY = viewportBottomR;\n                }\n            } else {\n                scrollContainerX = scrollContainerY = viewportTopR;\n            }\n        } else {\n            if (frozenRows) {\n                if (frozenBottom) {\n                    scrollContainerX = viewportBottomL;\n                    scrollContainerY = viewportTopL;\n                } else {\n                    scrollContainerX = scrollContainerY = viewportBottomL;\n                }\n            } else {\n                scrollContainerX = scrollContainerY = viewportTopL;\n            }\n        }\n    }\n\n    const setPaneVisibility = () => {\n        paneHeaderR.style.display = paneTopR.style.display = frozenCols ? '' : 'none';\n        paneBottomL.style.display = frozenRows ? '' : 'none';\n        paneBottomR.style.display = frozenRows && frozenCols ? '' : 'none';\n    }\n\n    const setOverflow = () => {\n        const options = host.getOptions();\n        var alwaysHS = options.alwaysAllowHorizontalScroll;\n        var alwaysVS = options.alwaysShowVerticalScroll;\n\n        viewportTopL.style.overflowX = viewportTopR.style.overflowX = (frozenRows && !alwaysHS) ? 'hidden' : (frozenCols ? 'scroll' : 'auto');\n        viewportTopL.style.overflowY = viewportBottomL.style.overflowY = (!frozenCols && alwaysVS) ? 'scroll' :\n            (frozenCols ? 'hidden' : (frozenRows ? 'scroll' : (options.autoHeight ? 'hidden' : 'auto')));\n        viewportTopR.style.overflowY = (alwaysVS || frozenRows) ? 'scroll' : (options.autoHeight ? 'hidden' : 'auto');\n        viewportBottomL.style.overflowX = viewportBottomR.style.overflowX = (frozenCols && !alwaysHS) ? 'scroll' : 'auto';\n        viewportBottomR.style.overflowY = (alwaysVS) ? 'scroll' : 'auto';\n    }\n\n    const bindAncestorScrollEvents = () => {\n        var elem: HTMLElement = (frozenRows && !frozenBottom) ? canvasBottomL : canvasTopL;\n        while ((elem = elem.parentNode as HTMLElement) != document.body && elem != null) {\n            // bind to scroll containers only\n            if (elem == viewportTopL || elem.scrollWidth != elem.clientWidth || elem.scrollHeight != elem.clientHeight) {\n                host.bindAncestorScroll(elem);\n            }\n        }\n    }\n\n    const afterHeaderColumnDrag = () => {\n        const oldCanvasWidthL = canvasWidthL;\n        canvasWidth = calcCanvasWidth();\n        if (frozenCols &&  canvasWidthL != oldCanvasWidthL) {\n            headerColsL.style.width = canvasWidthL + 1000 + 'px';\n            paneHeaderR.style[host.getOptions().rtl ? 'right' : 'left'] = canvasWidthL + 'px';\n        }\n    }\n\n    const applyColumnWidths = () => {\n        var x = 0, w, rule, cols = host.getColumns(), opts = host.getOptions(), rtl = opts.rtl,\n            s = rtl ? 'right' : 'left',\n            e = rtl ? 'left' : 'right';\n\n        if (opts.useCssVars) {\n            var styles = host.getContainerNode().style;\n            for (var i = 0; i < cols.length; i++) {\n                if (frozenCols == i)\n                    x = 0;\n                w = cols[i].width;\n                var prop = \"--l\" + i;\n                var oldVal = styles.getPropertyValue(prop);\n                var newVal = x + \"px\";\n                if (oldVal !== newVal) \n                    styles.setProperty(prop, newVal);\n                prop = \"--r\" + i;\n                oldVal = styles.getPropertyValue(prop);\n                newVal = (((frozenCols > 0 && i >= frozenCols) ? canvasWidthR : canvasWidthL) - x - w) + \"px\"\n                if (oldVal !== newVal) \n                    styles.setProperty(prop, newVal);\n                x += w;\n            }\n        }\n        else {\n            for (var i = 0; i < cols.length; i++) {\n                if (frozenCols == i)\n                    x = 0;\n                w = cols[i].width;\n                rule = host.getColumnCssRules(i);\n                (rule as any)[s].style[s] = x + \"px\";\n                (rule as any)[e].style[e] = (((frozenCols > 0 && i >= frozenCols) ? canvasWidthR : canvasWidthL) - x - w) + \"px\";\n                x += w;\n            }\n        }\n    }\n\n    const getTopPanelFor = (cell: number) => {\n        return frozenCols > 0 && cell >= frozenCols ? topPanelR : topPanelL;\n    }\n\n    const getTopPanelNodes = () => [topPanelL, topPanelR];\n\n    const resizeCanvas = () => {\n        var _paneTopH = 0\n        var _paneBottomH = 0\n        const vs = host.getViewportInfo();\n        const options = host.getOptions();\n\n        // Account for Frozen Rows\n        if (frozenRows) {\n            const frozenRowsHeight = frozenRows * options.rowHeight;\n            if (frozenBottom) {\n                _paneTopH = vs.height - frozenRowsHeight;\n                _paneBottomH = frozenRowsHeight + host.getScrollDims().height;\n            } else {\n                _paneTopH = frozenRowsHeight;\n                _paneBottomH = vs.height - frozenRowsHeight;\n            }\n        } else {\n            _paneTopH = vs.height;\n        }\n\n        // The top pane includes the top panel, the header row and the footer row\n        _paneTopH += vs.topPanelHeight + vs.headerRowHeight + vs.footerRowHeight;\n\n        // The top viewport does not contain the top panel, the header row or the footer row\n        viewportTopH = _paneTopH - vs.topPanelHeight - vs.headerRowHeight - vs.footerRowHeight;\n\n        if (options.autoHeight) {\n            host.getContainerNode().style.height = (_paneTopH + vs.groupingPanelHeight +\n                parsePx(getComputedStyle(headerColsL.parentElement).height)) + 'px';\n        }\n\n        paneTopL.style.top = (vs.groupingPanelHeight + (parsePx(getComputedStyle(paneHeaderL).height) || vs.headerHeight)) + \"px\";\n        paneTopL.style.height = _paneTopH + 'px';\n\n        var paneBottomTop = paneTopL.offsetTop + _paneTopH;\n\n        if (options.autoHeight) {\n            viewportTopL.style.height = '';\n        }\n        else {\n            viewportTopL.style.height = viewportTopH + 'px'\n        }\n\n        if (frozenCols) {\n            paneTopR.style.top = paneTopL.style.top;\n            paneTopR.style.height = paneTopL.style.height;\n\n            viewportTopR.style.height = viewportTopL.style.height;\n\n            if (frozenRows) {\n                paneBottomL.style.top = paneBottomR.style.top = paneBottomTop + 'px';\n                paneBottomL.style.height = paneBottomR.style.height = viewportBottomR.style.height = _paneBottomH + 'px';\n            }\n        } else {\n            if (frozenRows) {\n                paneBottomL.style.width = '100%';\n                paneBottomL.style.height = _paneBottomH + 'px';\n                paneBottomL.style.top = paneBottomTop + 'px';\n            }\n        }\n\n        if (frozenRows) {\n            viewportBottomL.style.height = _paneBottomH + 'px';\n            const frozenRowsHeight = frozenRows * options.rowHeight;\n            if (frozenBottom) {\n                canvasBottomL.style.height = frozenRowsHeight + 'px';\n\n                if (frozenCols) {\n                    canvasBottomR.style.height = frozenRowsHeight + 'px';\n                }\n            } else {\n                canvasTopL.style.height = frozenRowsHeight + 'px';\n\n                if (frozenCols) {\n                    canvasTopR.style.height = frozenRowsHeight + 'px';\n                }\n            }\n        } else {\n            viewportTopR.style.height = viewportTopH + 'px';\n        }\n    }\n\n    function reorderViewColumns(viewCols: Column[], options?: GridOptions): Column[] {\n\n        options = options || host?.getOptions();\n        if (options?.frozenColumns == null) {\n            delete options?.frozenColumns;\n        }\n        else {\n            var toFreeze = options.frozenColumns;\n            options.frozenColumns = 0;\n            var i = 0;\n            while (i < viewCols.length) {\n                var col = viewCols[i++];\n                if (toFreeze > 0 && col.visible !== false) {\n                    col.frozen = true;\n                    options.frozenColumns++;\n                    toFreeze--;\n                }\n                else if (col.frozen !== undefined)\n                    delete col.frozen;\n            }\n        }\n\n        var frozenColumns = viewCols.filter(x => x.frozen);\n        frozenCols = frozenColumns.length;\n        if (frozenCols)\n            return frozenColumns.concat(viewCols.filter(x => !x.frozen));\n\n        return viewCols;\n    }\n\n    function afterSetOptions(arg: GridOptions) {\n        if (arg.frozenRows != null || arg.frozenBottom != null)\n            adjustFrozenRowOption();\n    }\n\n    function adjustFrozenRowOption(): void {\n        const options = host.getOptions();\n        if (options.autoHeight) {\n            frozenRows = 0;\n            return;\n        }\n\n        frozenRows = (options.frozenRows > 0 && options.frozenRows <= host.getViewportInfo().numVisibleRows) ? options.frozenRows : 0;\n\n        if (frozenRows) {\n            frozenRowIdx = options.frozenBottom ? (host.getDataLength() - frozenRows) : (frozenRows - 1);\n        }\n    }\n\n    function getScrollCanvasY() {\n        return frozenRows && !frozenBottom ? canvasBottomL : canvasTopL;\n    }\n\n    function realScrollHeightChange() {\n        const h = host.getViewportInfo().realScrollHeight;\n        if (frozenRows && !frozenBottom) {\n            canvasBottomL.style.height = h + 'px';\n\n            if (frozenCols) {\n                canvasBottomR.style.height = h + 'px';\n            }\n        } else {\n            canvasTopL.style.height = h + 'px'\n            canvasTopR.style.height = h + 'px'\n        }\n    }\n\n    function isFrozenRow(row: number) {\n        return frozenRows && ((frozenBottom && row >= frozenRowIdx) || (!frozenBottom && row <= frozenRowIdx));\n    }\n\n    function beforeCleanupAndRenderCells(rendered: ViewRange) {\n        if (frozenRows) {\n\n            var renderedFrozenRows = Object.assign({}, rendered);\n\n            if (frozenBottom) {\n                renderedFrozenRows.top = frozenRowIdx;\n                renderedFrozenRows.bottom = host.getDataLength() - 1;\n            }\n            else {\n\n                renderedFrozenRows.top = 0;\n                renderedFrozenRows.bottom = frozenRowIdx;\n            }\n\n            host.cleanUpAndRenderCells(renderedFrozenRows);\n        }\n    }\n\n    function afterRenderRows(rendered: ViewRange) {\n        // Render frozen rows\n        if (frozenRows) {\n            if (frozenBottom) {\n                host.renderRows({\n                    top: frozenRowIdx,\n                    bottom: host.getDataLength() - 1,\n                    leftPx: rendered.leftPx,\n                    rightPx: rendered.rightPx\n                });\n            }\n            else {\n                host.renderRows({\n                    top: 0,\n                    bottom: frozenRowIdx,\n                    leftPx: rendered.leftPx,\n                    rightPx: rendered.rightPx\n                });\n            }\n        }\n    }\n\n    function getRowOffset(row: number): number {\n        if (!frozenRows || (frozenBottom && row < frozenRowIdx) || (!frozenBottom && row <= frozenRowIdx))\n            return 0;\n\n        if (!frozenBottom)\n            return frozenRows * host.getOptions().rowHeight;\n\n        var realScrollHeight = host.getViewportInfo().realScrollHeight;\n        if (realScrollHeight >= viewportTopH)\n            return realScrollHeight;\n\n        return frozenRowIdx * host.getOptions().rowHeight;\n    }\n\n    function getRowFromCellNode(cellNode: HTMLElement, clientX: number, clientY: number): number {\n        var row = host.getRowFromNode(cellNode.parentNode as HTMLElement);\n\n        if (frozenRows) {\n\n            var bcr = cellNode.closest('.grid-canvas').getBoundingClientRect();\n\n            var rowOffset = 0;\n            var isBottom = cellNode.closest('.grid-canvas-bottom') != null;\n\n            if (isBottom) {\n                rowOffset = frozenBottom ? Math.round(parsePx(getComputedStyle(canvasTopL).height)) : (frozenRows * host.getOptions().rowHeight);\n            }\n\n            return host.getCellFromPoint(clientX - bcr[host.getOptions().rtl ? 'right' : 'left'] - document.body.scrollLeft, clientY - bcr.top + document.body.scrollTop + rowOffset + document.body.scrollTop).row;\n        }\n\n        return row;\n    }\n\n    function getFrozenCols() {\n        return frozenCols;\n    }\n\n    function getFrozenRows() {\n        return frozenRows;\n    }\n\n    function destroy(): void {\n        host = null;\n    }\n\n    return {\n        afterHeaderColumnDrag,\n        afterRenderRows,\n        afterSetOptions,\n        appendCachedRow,\n        applyColumnWidths,\n        bindAncestorScrollEvents,\n        beforeCleanupAndRenderCells,\n        calcCanvasWidth,\n        updateHeadersWidth: calcHeaderWidths,\n        isFrozenRow,\n        destroy,\n        getCanvasNodeFor,\n        getCanvasNodes,\n        getCanvasWidth,\n        getFooterRowCols,\n        getFooterRowColsFor,\n        getFooterRowColumn,\n        getFrozenCols,\n        getFrozenRows,\n        getHeaderCols,\n        getHeaderColsFor,\n        getHeaderColumn,\n        getHeaderRowCols,\n        getHeaderRowColsFor,\n        getHeaderRowColumn,\n        getRowFromCellNode,\n        getFrozenRowOffset: getRowOffset,\n        getScrollCanvasY,\n        getScrollContainerX,\n        getScrollContainerY,\n        getTopPanelFor,\n        getTopPanelNodes,\n        getViewportNodeFor,\n        getViewportNodes,\n        handleScrollH,\n        handleScrollV,\n        init,\n        layoutName: \"frozen\",\n        realScrollHeightChange,\n        reorderViewColumns,\n        resizeCanvas,\n        setPaneVisibility,\n        setScroller,\n        setOverflow,\n        updateCanvasWidth\n    }\n} as any;\n", "const { disableSelection, H, parsePx, spacerDiv } = Slick;export {\n     disableSelection, H, parsePx, spacerDiv\n};"],
  "mappings": "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",
  "names": []
}
