{
  "version": 3,
  "sources": ["../../src/formatters/index.ts", "global-externals:_", "../../src/formatters/formatters.ts"],
  "sourcesContent": ["import { escapeHtml } from \"../core\";\nimport { CheckboxFormatter, CheckmarkFormatter, PercentCompleteBarFormatter, PercentCompleteFormatter, YesNoFormatter } from \"./formatters\";\n\nexport * from \"./formatters\";\n\nexport namespace Formatters {\n    export function PercentComplete(_row: number, _cell: number, value: any) {\n        return PercentCompleteFormatter({ escape: escapeHtml, value });\n    }\n\n    export function PercentCompleteBar(_row: number, _cell: number, value: any) {\n        return PercentCompleteBarFormatter({ escape: escapeHtml, value });\n    }\n\n    export function YesNo(_row: number, _cell: number, value: any) {\n        return YesNoFormatter({ escape: escapeHtml, value });\n    }\n\n    export function Checkbox(_row: number, _cell: number, value: any) {\n        return CheckboxFormatter({ escape: escapeHtml, value });\n    }\n\n    export function Checkmark(_row: number, _cell: number, value: any) {\n        return CheckmarkFormatter({ escape: escapeHtml, value });\n    }\n}\n\n", "const { escapeHtml } = Slick;export {\n     escapeHtml\n};", "import { escapeHtml, FormatterContext } from \"../core\";\n\nexport function PercentCompleteFormatter(ctx: FormatterContext) {\n    if (ctx.value == null || ctx.value === \"\")\n        return \"-\";\n    if (ctx.value < 50)\n        return \"<span style='color:red; font-weight:bold;'>\" + ctx.escape() + \"%</span>\";\n\n    return \"<span style='color:green'>\" + ctx.escape() + \"%</span>\";\n}\n\nexport function PercentCompleteBarFormatter(ctx: FormatterContext) {\n    if (ctx.value == null || ctx.value === \"\")\n        return \"\";\n\n    var color;\n    if (ctx.value < 30)\n        color = \"red\";\n    else if (ctx.value < 70)\n        color = \"silver\";\n    else\n        color = \"green\";\n\n    return \"<span class='percent-complete-bar slick-percentcomplete-bar' style='background:\" + color + \";width:\" + ctx.escape() + \"%' title='\" + ctx.escape() + \"%'></span>\";\n}\n\nexport function YesNoFormatter(ctx: FormatterContext) {\n    return ctx.value ? 'Yes' : 'No';\n}\n\n\nexport function CheckboxFormatter(ctx: FormatterContext) {\n    return `<i class=\"slick-checkbox slick-edit-preclick${ctx.value ? \" checked\" : \"\"}\"></i>`;\n}\n\nexport function CheckmarkFormatter(ctx: FormatterContext) {\n    return ctx.value ? '<i class=\"slick-checkmark\"></i>' : '';\n}\n\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,MAAM,EAAE,WAAW,IAAI;;;ACEhB,WAAS,yBAAyB,KAAuB;AAC5D,QAAI,IAAI,SAAS,QAAQ,IAAI,UAAU;AACnC,aAAO;AACX,QAAI,IAAI,QAAQ;AACZ,aAAO,gDAAgD,IAAI,OAAO,IAAI;AAE1E,WAAO,+BAA+B,IAAI,OAAO,IAAI;AAAA,EACzD;AAEO,WAAS,4BAA4B,KAAuB;AAC/D,QAAI,IAAI,SAAS,QAAQ,IAAI,UAAU;AACnC,aAAO;AAEX,QAAI;AACJ,QAAI,IAAI,QAAQ;AACZ,cAAQ;AAAA,aACH,IAAI,QAAQ;AACjB,cAAQ;AAAA;AAER,cAAQ;AAEZ,WAAO,oFAAoF,QAAQ,YAAY,IAAI,OAAO,IAAI,eAAe,IAAI,OAAO,IAAI;AAAA,EAChK;AAEO,WAAS,eAAe,KAAuB;AAClD,WAAO,IAAI,QAAQ,QAAQ;AAAA,EAC/B;AAGO,WAAS,kBAAkB,KAAuB;AACrD,WAAO,+CAA+C,IAAI,QAAQ,aAAa,EAAE;AAAA,EACrF;AAEO,WAAS,mBAAmB,KAAuB;AACtD,WAAO,IAAI,QAAQ,oCAAoC;AAAA,EAC3D;;;AFhCO,MAAU;AAAV,IAAUA,gBAAV;AACI,aAAS,gBAAgB,MAAc,OAAe,OAAY;AACrE,aAAO,yBAAyB,EAAE,QAAQ,YAAY,MAAM,CAAC;AAAA,IACjE;AAFO,IAAAA,YAAS;AAIT,aAAS,mBAAmB,MAAc,OAAe,OAAY;AACxE,aAAO,4BAA4B,EAAE,QAAQ,YAAY,MAAM,CAAC;AAAA,IACpE;AAFO,IAAAA,YAAS;AAIT,aAAS,MAAM,MAAc,OAAe,OAAY;AAC3D,aAAO,eAAe,EAAE,QAAQ,YAAY,MAAM,CAAC;AAAA,IACvD;AAFO,IAAAA,YAAS;AAIT,aAAS,SAAS,MAAc,OAAe,OAAY;AAC9D,aAAO,kBAAkB,EAAE,QAAQ,YAAY,MAAM,CAAC;AAAA,IAC1D;AAFO,IAAAA,YAAS;AAIT,aAAS,UAAU,MAAc,OAAe,OAAY;AAC/D,aAAO,mBAAmB,EAAE,QAAQ,YAAY,MAAM,CAAC;AAAA,IAC3D;AAFO,IAAAA,YAAS;AAAA,KAjBH;",
  "names": ["Formatters"]
}
