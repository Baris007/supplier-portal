{
  "version": 3,
  "sources": ["../../../node_modules/.pnpm/dompurify@3.0.11/node_modules/dompurify/src/utils.js", "../../../node_modules/.pnpm/dompurify@3.0.11/node_modules/dompurify/src/tags.js", "../../../node_modules/.pnpm/dompurify@3.0.11/node_modules/dompurify/src/attrs.js", "../../../node_modules/.pnpm/dompurify@3.0.11/node_modules/dompurify/src/regexp.js", "../../../node_modules/.pnpm/dompurify@3.0.11/node_modules/dompurify/src/purify.js", "../Modules/ServerTypes/Demo/Northwind.CategoryColumns.ts", "../Modules/ServerTypes/Demo/Northwind.CategoryForm.ts", "../Modules/ServerTypes/Demo/Northwind.CategoryLangRow.ts", "../Modules/ServerTypes/Demo/Northwind.CategoryLangService.ts", "../Modules/ServerTypes/Demo/Northwind.CategoryRow.ts", "../Modules/ServerTypes/Demo/Northwind.CategoryService.ts", "../Modules/ServerTypes/Demo/Northwind.CustomerColumns.ts", "../Modules/Customer/EmployeeListFormatter.ts", "../Modules/ServerTypes/Demo/Northwind.CustomerCustomerDemoRow.ts", "../Modules/ServerTypes/Demo/Northwind.CustomerDemographicRow.ts", "../Modules/ServerTypes/Demo/Northwind.CustomerDetailsRow.ts", "../Modules/ServerTypes/Demo/Northwind.CustomerForm.ts", "../Modules/Note/NotesEditor.tsx", "../Modules/Note/NoteDialog.tsx", "../../../node_modules/.pnpm/jsx-dom@8.1.4/node_modules/jsx-dom/min/index.js", "../Modules/ServerTypes/Demo/Northwind.CustomerGrossSalesRow.ts", "../Modules/ServerTypes/Demo/Northwind.CustomerRepresentativesRow.ts", "../Modules/ServerTypes/Demo/Northwind.CustomerRow.ts", "../Modules/ServerTypes/Demo/Northwind.CustomerService.ts", "../Modules/ServerTypes/Demo/Northwind.EmployeeRow.ts", "../Modules/ServerTypes/Demo/Northwind.EmployeeTerritoryRow.ts", "../Modules/ServerTypes/Demo/Northwind.Gender.ts", "../Modules/ServerTypes/Demo/Northwind.NoteRow.ts", "../Modules/ServerTypes/Demo/Northwind.OrderColumns.ts", "../Modules/Employee/EmployeeFormatter.ts", "../Modules/Order/FreightFormatter.ts", "../Modules/Shipper/ShipperFormatter.ts", "../Modules/ServerTypes/Demo/Northwind.OrderShippingState.ts", "../Modules/ServerTypes/Demo/Northwind.OrderDetailColumns.ts", "../Modules/ServerTypes/Demo/Northwind.OrderDetailForm.ts", "../Modules/ServerTypes/Demo/Northwind.OrderDetailRow.ts", "../Modules/ServerTypes/Demo/Northwind.OrderDetailService.ts", "../Modules/ServerTypes/Demo/Northwind.OrderForm.ts", "../Modules/Customer/CustomerEditor.ts", "../Modules/OrderDetail/OrderDetailsEditor.ts", "../Modules/OrderDetail/OrderDetailDialog.ts", "../Modules/ServerTypes/Demo/Northwind.OrderRow.ts", "../Modules/ServerTypes/Demo/Northwind.OrderService.ts", "../Modules/ServerTypes/Demo/Northwind.PermissionKeys.ts", "../Modules/ServerTypes/Demo/Northwind.ProductColumns.ts", "../Modules/ServerTypes/Demo/Northwind.ProductForm.ts", "../Modules/Supplier/SupplierDialog.ts", "../Modules/ServerTypes/Demo/Northwind.ProductLangRow.ts", "../Modules/ServerTypes/Demo/Northwind.ProductLangService.ts", "../Modules/ServerTypes/Demo/Northwind.ProductLogRow.ts", "../Modules/ServerTypes/Demo/Northwind.ProductRow.ts", "../Modules/ServerTypes/Demo/Northwind.ProductService.ts", "../Modules/ServerTypes/Demo/Northwind.RegionColumns.ts", "../Modules/ServerTypes/Demo/Northwind.RegionForm.ts", "../Modules/ServerTypes/Demo/Northwind.RegionRow.ts", "../Modules/ServerTypes/Demo/Northwind.RegionService.ts", "../Modules/ServerTypes/Demo/Northwind.SalesByCategoryColumns.ts", "../Modules/ServerTypes/Demo/Northwind.SalesByCategoryRow.ts", "../Modules/ServerTypes/Demo/Northwind.SalesByCategoryService.ts", "../Modules/ServerTypes/Demo/Northwind.ShipperColumns.ts", "../Modules/ServerTypes/Demo/Northwind.ShipperForm.ts", "../Modules/Shared/PhoneEditor.ts", "../Modules/ServerTypes/Demo/Northwind.ShipperRow.ts", "../Modules/ServerTypes/Demo/Northwind.ShipperService.ts", "../Modules/ServerTypes/Demo/Northwind.SupplierColumns.ts", "../Modules/ServerTypes/Demo/Northwind.SupplierForm.ts", "../Modules/ServerTypes/Demo/Northwind.SupplierRow.ts", "../Modules/ServerTypes/Demo/Northwind.SupplierService.ts", "../Modules/ServerTypes/Demo/Northwind.TerritoryColumns.ts", "../Modules/ServerTypes/Demo/Northwind.TerritoryForm.ts", "../Modules/ServerTypes/Demo/Northwind.TerritoryRow.ts", "../Modules/ServerTypes/Demo/Northwind.TerritoryService.ts", "../Modules/Category/CategoryDialog.ts", "../Modules/Category/CategoryGrid.ts", "../Modules/Customer/CustomerDialog.tsx", "../Modules/Customer/CustomerOrdersGrid.ts", "../Modules/Order/OrderGrid.ts", "../Modules/Order/OrderDialog.ts", "../Modules/Customer/CustomerOrderDialog.ts", "../Modules/Customer/CustomerGrid.ts", "../Modules/Product/ProductDialog.ts", "../Modules/Product/ProductGrid.ts", "../Modules/Region/RegionDialog.ts", "../Modules/Region/RegionGrid.ts", "../Modules/Shipper/ShipperDialog.ts", "../Modules/Shipper/ShipperGrid.ts", "../Modules/Supplier/SupplierGrid.ts", "../Modules/Territory/TerritoryDialog.ts", "../Modules/Territory/TerritoryGrid.ts"],
  "sourcesContent": ["const {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param {Function} func - The function to be wrapped and called.\n * @returns {Function} A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param {Function} func - The constructor function to be wrapped and called.\n * @returns {Function} A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/**\n * Add properties to a lookup table\n *\n * @param {Object} set - The set to which elements will be added.\n * @param {Array} array - The array containing elements to be added to the set.\n * @param {Function} transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns {Object} The modified set with added elements.\n */\nfunction addToSet(set, array, transformCaseFunc = stringToLowerCase) {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/**\n * Clean up an array to harden against CSPP\n *\n * @param {Array} array - The array to be cleaned.\n * @returns {Array} The cleaned version of the array\n */\nfunction cleanArray(array) {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n\n  return array;\n}\n\n/**\n * Shallow clone an object\n *\n * @param {Object} object - The object to be cloned.\n * @returns {Object} A new object that copies the original.\n */\nfunction clone(object) {\n  const newObject = create(null);\n\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (\n        value &&\n        typeof value === 'object' &&\n        value.constructor === Object\n      ) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n\n  return newObject;\n}\n\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param {Object} object - The object to look up the getter function in its prototype chain.\n * @param {String} prop - The property name for which to find the getter function.\n * @returns {Function} The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue() {\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  entries,\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  clone,\n  create,\n  objectHasOwnProperty,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n  addToSet,\n  // Reflect\n  unapply,\n  unconstruct,\n};\n", "import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n\n// SVG\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n]);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n]);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n]);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n  'mprescripts',\n]);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n]);\n\nexport const text = freeze(['#text']);\n", "import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'nonce',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n  'slot',\n]);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'transform-origin',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n]);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n]);\n", "import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nexport const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nexport const DOCTYPE_NAME = seal(/^html$/i);\nexport const CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n", "import * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  entries,\n  freeze,\n  arrayForEach,\n  arrayPop,\n  arrayPush,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n  create,\n  objectHasOwnProperty,\n} from './utils.js';\n\nconst getGlobal = function () {\n  return typeof window === 'undefined' ? null : window;\n};\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {HTMLScriptElement} purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return {TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function (trustedTypes, purifyHostElement) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nfunction createDOMPurify(window = getGlobal()) {\n  const DOMPurify = (root) => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = VERSION;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  let { document } = window;\n\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof entries === 'function' &&\n    typeof getParentNode === 'function' &&\n    implementation &&\n    implementation.createHTMLDocument !== undefined;\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(\n    create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false,\n      },\n    })\n  );\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet(\n    {},\n    [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE],\n    stringToString\n  );\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function (testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg = {}) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? DEFAULT_PARSER_MEDIA_TYPE\n        : cfg.PARSER_MEDIA_TYPE;\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? stringToString\n        : stringToLowerCase;\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS')\n      ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc)\n      : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR')\n      ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc)\n      : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES')\n      ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString)\n      : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR')\n      ? addToSet(\n          clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n          cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n          transformCaseFunc // eslint-disable-line indent\n        ) // eslint-disable-line indent\n      : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS')\n      ? addToSet(\n          clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n          cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n          transformCaseFunc // eslint-disable-line indent\n        ) // eslint-disable-line indent\n      : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS')\n      ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc)\n      : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS')\n      ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc)\n      : {};\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR')\n      ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc)\n      : {};\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES')\n      ? cfg.USE_PROFILES\n      : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || EXPRESSIONS.IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements ===\n        'boolean'\n    ) {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements =\n        cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, TAGS.text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate(\n          'TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.'\n        );\n      }\n\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate(\n          'TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.'\n        );\n      }\n\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(\n          trustedTypes,\n          currentScript\n        );\n      }\n\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  const HTML_INTEGRATION_POINTS = addToSet({}, [\n    'foreignobject',\n    'desc',\n    'title',\n    'annotation-xml',\n  ]);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, [\n    'title',\n    'style',\n    'font',\n    'a',\n    'script',\n  ]);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.svgDisallowed,\n  ]);\n  const ALL_MATHML_TAGS = addToSet({}, [\n    ...TAGS.mathMl,\n    ...TAGS.mathMlDisallowed,\n  ]);\n\n  /**\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // For XHTML and XML documents that support custom namespaces\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      ALLOWED_NAMESPACES[element.namespaceURI]\n    ) {\n      return true;\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function (node) {\n    arrayPush(DOMPurify.removed, { element: node });\n\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      node.remove();\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function (name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node,\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      NAMESPACE === HTML_NAMESPACE\n    ) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT\n          ? emptyHTML\n          : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param  {Node} root The root element or node to start traversing on.\n   * @return {NodeIterator} The created NodeIterator\n   */\n  const _createNodeIterator = function (root) {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT |\n        NodeFilter.SHOW_COMMENT |\n        NodeFilter.SHOW_TEXT |\n        NodeFilter.SHOW_PROCESSING_INSTRUCTION |\n        NodeFilter.SHOW_CDATA_SECTION,\n      null\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function (elm) {\n    return (\n      elm instanceof HTMLFormElement &&\n      (typeof elm.nodeName !== 'string' ||\n        typeof elm.textContent !== 'string' ||\n        typeof elm.removeChild !== 'function' ||\n        !(elm.attributes instanceof NamedNodeMap) ||\n        typeof elm.removeAttribute !== 'function' ||\n        typeof elm.setAttribute !== 'function' ||\n        typeof elm.namespaceURI !== 'string' ||\n        typeof elm.insertBefore !== 'function' ||\n        typeof elm.hasChildNodes !== 'function')\n    );\n  };\n\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param  {Node} object object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function (object) {\n    return typeof Node === 'function' && object instanceof Node;\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function (entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode) {\n    let content = null;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      currentNode.hasChildNodes() &&\n      !_isNode(currentNode.firstElementChild) &&\n      regExpTest(/<[/\\w]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove any ocurrence of processing instructions */\n    if (currentNode.nodeType === 7) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n          regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)\n        ) {\n          return false;\n        }\n\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)\n        ) {\n          return false;\n        }\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(\n              cloneNode(childNodes[i], true),\n              getNextSibling(currentNode)\n            );\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if (\n      (tagName === 'noscript' ||\n        tagName === 'noembed' ||\n        tagName === 'noframes') &&\n      regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr) => {\n        content = stringReplace(content, expr, ' ');\n      });\n\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        (_isBasicCustomElement(lcTag) &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))) &&\n          ((CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName)) ||\n            (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)))) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        (lcName === 'is' &&\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))\n      ) {\n        // If user has supplied a regexp or function in CUSTOM_ELEMENT_HANDLING.tagNameCheck, we need to also allow derived custom elements using the same tagName test.\n        // Additionally, we need to allow attributes passing the CUSTOM_ELEMENT_HANDLING.attributeNameCheck user has configured, as custom elements can define these at their own discretion.\n      } else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n    } else if (value) {\n      return false;\n    } else {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    }\n\n    return true;\n  };\n\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param {string} tagName name of the tag of the node to sanitize\n   * @returns {boolean} Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function (tagName) {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode) {\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n    };\n    let l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const { name, namespaceURI, value: attrValue } = attr;\n      const lcName = transformCaseFunc(name);\n\n      let value = name === 'value' ? attrValue : stringTrim(attrValue);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr) => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n\n      /* Handle attributes that require Trusted Types */\n      if (\n        trustedTypesPolicy &&\n        typeof trustedTypes === 'object' &&\n        typeof trustedTypes.getAttributeType === 'function'\n      ) {\n        if (namespaceURI) {\n          /* Namespaces are not yet supported, see https://bugs.chromium.org/p/chromium/issues/detail?id=1305293 */\n        } else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML': {\n              value = trustedTypesPolicy.createHTML(value);\n              break;\n            }\n\n            case 'TrustedScriptURL': {\n              value = trustedTypesPolicy.createScriptURL(value);\n              break;\n            }\n\n            default: {\n              break;\n            }\n          }\n        }\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} cfg object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg = {}) {\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate(\n            'root node is forbidden and cannot be sanitized in-place'\n          );\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n    }\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (\n      WHOLE_DOCUMENT &&\n      ALLOWED_TAGS['!doctype'] &&\n      body.ownerDocument &&\n      body.ownerDocument.doctype &&\n      body.ownerDocument.doctype.name &&\n      regExpTest(EXPRESSIONS.DOCTYPE_NAME, body.ownerDocument.doctype.name)\n    ) {\n      serializedHTML =\n        '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr) => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg = {}) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {String} tag Tag name of containing element.\n   * @param  {String} attr Attribute name.\n   * @param  {String} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { CategoryRow } from \"./Northwind.CategoryRow\";\n\nexport interface CategoryColumns {\n    CategoryID: Column<CategoryRow>;\n    CategoryName: Column<CategoryRow>;\n    Description: Column<CategoryRow>;\n}\n\nexport class CategoryColumns extends ColumnsBase<CategoryRow> {\n    static readonly columnsKey = 'Northwind.Category';\n    static readonly Fields = fieldsProxy<CategoryColumns>();\n}", "\uFEFFimport { StringEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface CategoryForm {\n    CategoryName: StringEditor;\n    Description: StringEditor;\n}\n\nexport class CategoryForm extends PrefixedContext {\n    static readonly formKey = 'Northwind.Category';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!CategoryForm.init)  {\n            CategoryForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(CategoryForm, [\n                'CategoryName', w0,\n                'Description', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface CategoryLangRow {\n    Id?: number;\n    CategoryId?: number;\n    LanguageId?: number;\n    CategoryName?: string;\n    Description?: string;\n}\n\nexport abstract class CategoryLangRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'CategoryName';\n    static readonly localTextPrefix = 'Northwind.CategoryLang';\n    static readonly deletePermission = 'Northwind:General';\n    static readonly insertPermission = 'Northwind:General';\n    static readonly readPermission = 'Northwind:General';\n    static readonly updatePermission = 'Northwind:General';\n\n    static readonly Fields = fieldsProxy<CategoryLangRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { CategoryLangRow } from \"./Northwind.CategoryLangRow\";\n\nexport namespace CategoryLangService {\n    export const baseUrl = 'Serenity.Demo.Northwind/CategoryLang';\n\n    export declare function Create(request: SaveRequest<CategoryLangRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<CategoryLangRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CategoryLangRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<CategoryLangRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CategoryLangRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<CategoryLangRow>>;\n\n    export const Methods = {\n        Create: \"Serenity.Demo.Northwind/CategoryLang/Create\",\n        Update: \"Serenity.Demo.Northwind/CategoryLang/Update\",\n        Delete: \"Serenity.Demo.Northwind/CategoryLang/Delete\",\n        Retrieve: \"Serenity.Demo.Northwind/CategoryLang/Retrieve\",\n        List: \"Serenity.Demo.Northwind/CategoryLang/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>CategoryLangService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface CategoryRow {\n    CategoryID?: number;\n    CategoryName?: string;\n    Description?: string;\n    Picture?: number[];\n}\n\nexport abstract class CategoryRow {\n    static readonly idProperty = 'CategoryID';\n    static readonly nameProperty = 'CategoryName';\n    static readonly localTextPrefix = 'Northwind.Category';\n    static readonly lookupKey = 'Northwind.Category';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<CategoryRow>('Northwind.Category') }\n    static async getLookupAsync() { return getLookupAsync<CategoryRow>('Northwind.Category') }\n\n    static readonly deletePermission = 'Northwind:General';\n    static readonly insertPermission = 'Northwind:General';\n    static readonly readPermission = 'Northwind:General';\n    static readonly updatePermission = 'Northwind:General';\n\n    static readonly Fields = fieldsProxy<CategoryRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { CategoryRow } from \"./Northwind.CategoryRow\";\n\nexport namespace CategoryService {\n    export const baseUrl = 'Serenity.Demo.Northwind/Category';\n\n    export declare function Create(request: SaveRequest<CategoryRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<CategoryRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CategoryRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<CategoryRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CategoryRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<CategoryRow>>;\n\n    export const Methods = {\n        Create: \"Serenity.Demo.Northwind/Category/Create\",\n        Update: \"Serenity.Demo.Northwind/Category/Update\",\n        Delete: \"Serenity.Demo.Northwind/Category/Delete\",\n        Retrieve: \"Serenity.Demo.Northwind/Category/Retrieve\",\n        List: \"Serenity.Demo.Northwind/Category/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>CategoryService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { EmployeeListFormatter } from \"../../Customer/EmployeeListFormatter\";\nimport { CustomerRow } from \"./Northwind.CustomerRow\";\n\nexport interface CustomerColumns {\n    CustomerID: Column<CustomerRow>;\n    CompanyName: Column<CustomerRow>;\n    ContactName: Column<CustomerRow>;\n    ContactTitle: Column<CustomerRow>;\n    Region: Column<CustomerRow>;\n    PostalCode: Column<CustomerRow>;\n    Country: Column<CustomerRow>;\n    City: Column<CustomerRow>;\n    Phone: Column<CustomerRow>;\n    Fax: Column<CustomerRow>;\n    Representatives: Column<CustomerRow>;\n}\n\nexport class CustomerColumns extends ColumnsBase<CustomerRow> {\n    static readonly columnsKey = 'Northwind.Customer';\n    static readonly Fields = fieldsProxy<CustomerColumns>();\n}\n\n[EmployeeListFormatter]; // referenced types", "import { Decorators, Formatter, faIcon } from \"@serenity-is/corelib\";\nimport { Lookup } from \"@serenity-is/corelib\";\nimport { FormatterContext } from \"@serenity-is/sleekgrid\";\nimport { EmployeeRow } from \"../ServerTypes/Demo\";\n\nlet lookup: Lookup<EmployeeRow>;\nlet promise: Promise<Lookup<EmployeeRow>>;\n\n@Decorators.registerFormatter('Serenity.Demo.Northwind.EmployeeListFormatter')\nexport class EmployeeListFormatter implements Formatter {\n\n    format(ctx: FormatterContext) {\n\n        let idList = ctx.value as string[];\n        if (!idList || !idList.length)\n            return \"\";\n\n        let byId = lookup?.itemById;\n        if (byId) {\n            return idList.map(x => {\n                var z = byId[x];\n                return ctx.escape(z == null ? x : z.FullName);\n            }).join(\", \");\n        }\n\n        promise ??= EmployeeRow.getLookupAsync().then(l => {\n            lookup = l;\n            try {\n                ctx.grid?.invalidate();\n            }\n            finally {\n                lookup = null;\n                promise = null;\n            }\n        }).catch(() => promise = null);\n\n        return `<i class=\"${faIcon(\"spinner\")}\"></i>`;\n    }\n}\n", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface CustomerCustomerDemoRow {\n    ID?: number;\n    CustomerID?: string;\n    CustomerTypeID?: string;\n    CustomerCompanyName?: string;\n}\n\nexport abstract class CustomerCustomerDemoRow {\n    static readonly idProperty = 'ID';\n    static readonly nameProperty = 'CustomerID';\n    static readonly localTextPrefix = 'Northwind.CustomerCustomerDemo';\n    static readonly deletePermission = 'Northwind:General';\n    static readonly insertPermission = 'Northwind:General';\n    static readonly readPermission = 'Northwind:General';\n    static readonly updatePermission = 'Northwind:General';\n\n    static readonly Fields = fieldsProxy<CustomerCustomerDemoRow>();\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface CustomerDemographicRow {\n    ID?: number;\n    CustomerTypeID?: string;\n    CustomerDesc?: string;\n}\n\nexport abstract class CustomerDemographicRow {\n    static readonly idProperty = 'ID';\n    static readonly nameProperty = 'CustomerTypeID';\n    static readonly localTextPrefix = 'Northwind.CustomerDemographic';\n    static readonly deletePermission = 'Northwind:General';\n    static readonly insertPermission = 'Northwind:General';\n    static readonly readPermission = 'Northwind:General';\n    static readonly updatePermission = 'Northwind:General';\n\n    static readonly Fields = fieldsProxy<CustomerDemographicRow>();\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface CustomerDetailsRow {\n    Id?: number;\n    LastContactDate?: string;\n    LastContactedBy?: number;\n    Email?: string;\n    SendBulletin?: boolean;\n    LastContactedByFullName?: string;\n}\n\nexport abstract class CustomerDetailsRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'Email';\n    static readonly localTextPrefix = 'Northwind.CustomerDetails';\n    static readonly deletePermission = 'Northwind:General';\n    static readonly insertPermission = 'Northwind:General';\n    static readonly readPermission = 'Northwind:General';\n    static readonly updatePermission = 'Northwind:General';\n\n    static readonly Fields = fieldsProxy<CustomerDetailsRow>();\n}", "\uFEFFimport { StringEditor, LookupEditor, DateEditor, EmailAddressEditor, BooleanEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\nimport { NotesEditor } from \"../../Note/NotesEditor\";\n\nexport interface CustomerForm {\n    CustomerID: StringEditor;\n    CompanyName: StringEditor;\n    ContactName: StringEditor;\n    ContactTitle: StringEditor;\n    Representatives: LookupEditor;\n    Address: StringEditor;\n    Country: LookupEditor;\n    City: LookupEditor;\n    Region: StringEditor;\n    PostalCode: StringEditor;\n    Phone: StringEditor;\n    Fax: StringEditor;\n    NoteList: NotesEditor;\n    LastContactDate: DateEditor;\n    LastContactedBy: LookupEditor;\n    Email: EmailAddressEditor;\n    SendBulletin: BooleanEditor;\n}\n\nexport class CustomerForm extends PrefixedContext {\n    static readonly formKey = 'Northwind.Customer';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!CustomerForm.init)  {\n            CustomerForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = LookupEditor;\n            var w2 = NotesEditor;\n            var w3 = DateEditor;\n            var w4 = EmailAddressEditor;\n            var w5 = BooleanEditor;\n\n            initFormType(CustomerForm, [\n                'CustomerID', w0,\n                'CompanyName', w0,\n                'ContactName', w0,\n                'ContactTitle', w0,\n                'Representatives', w1,\n                'Address', w0,\n                'Country', w1,\n                'City', w1,\n                'Region', w0,\n                'PostalCode', w0,\n                'Phone', w0,\n                'Fax', w0,\n                'NoteList', w2,\n                'LastContactDate', w3,\n                'LastContactedBy', w1,\n                'Email', w4,\n                'SendBulletin', w5\n            ]);\n        }\n    }\n}", "import { NoteRow } from \"../ServerTypes/Demo\";\nimport { Authorization, Decorators, EditorWidget, IGetEditValue, ISetEditValue, PropertyItem, Toolbar, confirmDialog, formatDate, formatISODateTimeUTC, insert } from \"@serenity-is/corelib\";\nimport * as DOMPurify from 'dompurify';\nimport { NoteDialog } from \"./NoteDialog\";\n\n@Decorators.registerEditor('Serenity.Demo.Northwind.NotesEditor', [IGetEditValue, ISetEditValue])\n@Decorators.element(\"<div/>\")\nexport class NotesEditor<P = {}> extends EditorWidget<P>\n    implements IGetEditValue, ISetEditValue {\n\n    private isDirty: boolean;\n    private items: NoteRow[];\n    private noteList: HTMLUListElement;\n\n    protected renderContents(): any {\n        let id = this.useIdPrefix();\n        return (<div>\n            <Toolbar id={id.Toolbar} buttons={[{\n                title: 'Add Note',\n                cssClass: 'add-button',\n                onClick: (e: Event) => {\n                    e.preventDefault();\n                    this.addClick();\n                }\n            }]} />\n            <ul id={id.NoteList} ref={el => this.noteList = el}></ul>\n        </div>);\n    }\n\n    protected updateContent() {\n        this.noteList.innerHTML = '';\n        this.noteList.append(<>{(this.items || []).map((item, index) => \n            <li>\n                <div class=\"note-text\" dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(item.Text ?? '') }}></div>\n                <a href=\"#\" class=\"note-date\" data-index={index} onClick={this.editClick.bind(this)}>\n                    {item.InsertUserDisplayName + ' - ' + formatDate(item.InsertDate, 'g')}\n                </a>\n                <a href=\"#\" class=\"note-delete\" data-index={index} title=\"delete note\" onClick={this.deleteClick.bind(this)} />\n            </li>\n        )}</>);\n    }\n\n    protected addClick() {\n        var dlg = new NoteDialog({});\n        dlg.dialogTitle = 'Add Note';\n        dlg.okClick = () => {\n            var text = dlg.text?.trim();\n            if (!text)\n                return;\n\n            this.items = this.items || [];\n            insert(this.items, 0, {\n                Text: text,\n                InsertUserDisplayName: Authorization.userDefinition.DisplayName,\n                InsertDate: formatISODateTimeUTC(new Date())\n            });\n\n            this.updateContent();\n            dlg.dialogClose(\"ok\");\n            this.set_isDirty(true);\n            this.onChange && this.onChange();\n        };\n        dlg.dialogOpen();\n    }\n\n    protected editClick(e) {\n        e.preventDefault();\n        var index = e.target.dataset.index;\n        var old = this.items[index];\n        var dlg = new NoteDialog({});\n        dlg.dialogTitle = 'Edit Note';\n        dlg.text = old.Text;\n        dlg.okClick = () => {\n            var text = dlg.text?.trim();;\n            if (!text)\n                return;\n\n            this.items[index].Text = text;\n            this.updateContent();\n            dlg.dialogClose(\"ok\");\n            this.set_isDirty(true);\n            this.onChange && this.onChange();\n        };\n        dlg.dialogOpen();\n    }\n\n    public deleteClick(e) {\n        e.preventDefault();\n        var index = e.target.dataset.index;\n        confirmDialog('Delete this note?', () => {\n            this.items.splice(index, 1);\n            this.updateContent();\n            this.set_isDirty(true);\n            this.onChange && this.onChange();\n        });\n    }\n\n    public get value() {\n        return this.items;\n    }\n\n    public set value(value: NoteRow[]) {\n        this.items = value || [];\n        this.set_isDirty(false);\n        this.updateContent();\n    }\n\n    public getEditValue(prop: PropertyItem, target) {\n        target[prop.name] = this.value;\n    }\n\n    public setEditValue(source, prop: PropertyItem) {\n        this.value = source[prop.name] || [];\n    }\n\n    public get_isDirty(): boolean {\n        return this.isDirty;\n    }\n\n    public set_isDirty(value): void {\n        this.isDirty = value;\n    }\n\n    public onChange: () => void;\n}\n", "import { Decorators, DialogButton, BaseDialog, HtmlContentEditor, HtmlNoteContentEditor, cancelDialogButton, okDialogButton } from \"@serenity-is/corelib\";\n\n@Decorators.registerClass('Serenity.Demo.Northwind.NoteDialog')\nexport class NoteDialog<P = {}> extends BaseDialog<P> {\n\n    private textEditor: HtmlContentEditor;\n\n    protected renderContents(): any {\n        const id = this.useIdPrefix();\n        return (\n            <form id={id.Form} class=\"s-Form\">\n                <textarea id={id.Text} class=\"required\" ref={el => queueMicrotask(() =>\n                    this.textEditor = new HtmlNoteContentEditor({ element: el }))} />\n            </form>\n        );\n    }\n\n    protected getDialogButtons(): DialogButton[] {\n        return [\n            okDialogButton({\n                click: (e: Event) => {\n                    if (!this.validateForm()) {\n                        e.preventDefault();\n                        return;\n                    }\n                    this.okClick && this.okClick();\n                }\n            }),\n            cancelDialogButton()\n        ];\n    }\n\n    get text(): string {\n        return this.textEditor.value;\n    }\n\n    set text(value: string) {\n        this.textEditor.value = value;\n    }\n\n    public okClick: () => void;\n}\n", "/* eslint-disable */\nconst keys = Object.keys;\nfunction identity(value) {\n  return value;\n}\nfunction isBoolean(val) {\n  return typeof val === \"boolean\";\n}\nfunction isElement(val) {\n  return val && typeof val.nodeType === \"number\";\n}\nfunction isString(val) {\n  return typeof val === \"string\";\n}\nfunction isNumber(val) {\n  return typeof val === \"number\";\n}\nfunction isObject(val) {\n  return typeof val === \"object\" ? val !== null : isFunction(val);\n}\nfunction isFunction(val) {\n  return typeof val === \"function\";\n}\nfunction isComponentClass(Component) {\n  const { prototype } = Component;\n  return !!(prototype && prototype.isReactComponent);\n}\nfunction isArrayLike(obj) {\n  return (\n    isObject(obj) &&\n    typeof obj.length === \"number\" &&\n    typeof obj.nodeType !== \"number\"\n  );\n}\nfunction forEach(value, fn) {\n  if (!value) return;\n  for (const key of keys(value)) {\n    fn(value[key], key);\n  }\n}\n\nfunction createRef() {\n  return Object.seal({\n    current: null,\n  });\n}\nfunction isRef(maybeRef) {\n  return isObject(maybeRef) && \"current\" in maybeRef;\n}\n\nconst jsxDomType = Symbol.for(\"jsx-dom:type\");\nvar JsxDomType = /*#__PURE__*/ (function (JsxDomType) {\n  JsxDomType[\"ShadowRoot\"] = \"ShadowRoot\";\n  return JsxDomType;\n})(JsxDomType || {});\nfunction ShadowRoot(_ref) {\n  let { children, ref, ...attr } = _ref;\n  return {\n    [jsxDomType]: JsxDomType.ShadowRoot,\n    ref,\n    attr,\n    children,\n  };\n}\nfunction isShadowRoot(el) {\n  return el != null && el[jsxDomType] === JsxDomType.ShadowRoot;\n}\n\nconst SVGNamespace = \"http://www.w3.org/2000/svg\";\n\n// https://facebook.github.io/react/docs/jsx-in-depth.html#booleans-null-and-undefined-are-ignored\n// Emulate JSX Expression logic to ignore certain type of children or className.\nfunction isVisibleChild(value) {\n  return !isBoolean(value) && value != null;\n}\n\n/**\n * Convert a `value` to a className string.\n * `value` can be a string, an array or a `Dictionary<boolean>`.\n */\nfunction className(value) {\n  if (Array.isArray(value)) {\n    return value.map(className).filter(Boolean).join(\" \");\n  } else if (isObject(value)) {\n    if (Symbol.iterator in value) {\n      return className(Array.from(value));\n    }\n    return keys(value)\n      .filter((k) => value[k])\n      .join(\" \");\n  } else if (isVisibleChild(value)) {\n    return \"\" + value;\n  } else {\n    return \"\";\n  }\n}\nfunction createFactory(tag) {\n  return createElement.bind(null, tag);\n}\nfunction Fragment(attr) {\n  const fragment = document.createDocumentFragment();\n  appendChild(attr.children, fragment);\n  return fragment;\n}\nclass Component {\n  constructor(props) {\n    this.props = props;\n  }\n  render() {\n    return null;\n  }\n}\n\n/* @__PURE__ */\nObject.defineProperties(Component.prototype, {\n  isReactComponent: {\n    value: true,\n  },\n});\nfunction initComponentClass(Class, attr, children) {\n  attr = {\n    ...attr,\n    children,\n  };\n  const instance = new Class(attr);\n  const node = instance.render();\n  if (\"ref\" in attr) {\n    attachRef(attr.ref, instance);\n  }\n  return node;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction jsx(tag, _ref) {\n  let { children, ...attr } = _ref;\n  let node;\n  if (isString(tag)) {\n    node = attr.namespaceURI\n      ? document.createElementNS(attr.namespaceURI, tag)\n      : document.createElement(tag);\n    attributes(attr, node);\n    appendChild(children, node);\n\n    // Select `option` elements in `select`\n    if (node instanceof window.HTMLSelectElement && attr.value != null) {\n      if (attr.multiple === true && Array.isArray(attr.value)) {\n        const values = attr.value.map((value) => String(value));\n        node\n          .querySelectorAll(\"option\")\n          .forEach(\n            (option) => (option.selected = values.includes(option.value)),\n          );\n      } else {\n        node.value = attr.value;\n      }\n    }\n    attachRef(attr.ref, node);\n  } else if (isFunction(tag)) {\n    // Custom elements.\n    if (isObject(tag.defaultProps)) {\n      attr = {\n        ...tag.defaultProps,\n        ...attr,\n      };\n    }\n    node = isComponentClass(tag)\n      ? initComponentClass(tag, attr, children)\n      : tag({\n          ...attr,\n          children,\n        });\n  } else {\n    throw new TypeError(`Invalid JSX element type: ${tag}`);\n  }\n  return node;\n}\nfunction createElement(tag, attr) {\n  for (\n    var _len = arguments.length,\n      children = new Array(_len > 2 ? _len - 2 : 0),\n      _key2 = 2;\n    _key2 < _len;\n    _key2++\n  ) {\n    children[_key2 - 2] = arguments[_key2];\n  }\n  if (isString(attr) || Array.isArray(attr)) {\n    children.unshift(attr);\n    attr = {};\n  }\n  attr = attr || {};\n  if (attr.children != null && !children.length) {\n    ({ children, ...attr } = attr);\n  }\n  return jsx(\n    tag,\n    {\n      ...attr,\n      children,\n    },\n    attr.key,\n  );\n}\nfunction attachRef(ref, node) {\n  if (isRef(ref)) {\n    ref.current = node;\n  } else if (isFunction(ref)) {\n    ref(node);\n  }\n}\nfunction appendChild(child, node) {\n  if (isArrayLike(child)) {\n    appendChildren(child, node);\n  } else if (isString(child) || isNumber(child)) {\n    appendChildToNode(document.createTextNode(child), node);\n  } else if (child === null) {\n    appendChildToNode(document.createComment(\"\"), node);\n  } else if (isElement(child)) {\n    appendChildToNode(child, node);\n  } else if (isShadowRoot(child)) {\n    const shadowRoot = node.attachShadow(child.attr);\n    appendChild(child.children, shadowRoot);\n    attachRef(child.ref, shadowRoot);\n  }\n}\nfunction appendChildren(children, node) {\n  for (const child of [...children]) {\n    appendChild(child, node);\n  }\n  return node;\n}\nfunction appendChildToNode(child, node) {\n  if (node instanceof window.HTMLTemplateElement) {\n    node.content.appendChild(child);\n  } else {\n    node.appendChild(child);\n  }\n}\nfunction style(node, value) {\n  if (value == null || value === false);\n  else if (Array.isArray(value)) {\n    value.forEach((v) => style(node, v));\n  } else if (isString(value)) {\n    node.setAttribute(\"style\", value);\n  } else if (isObject(value)) {\n    forEach(value, (val, key) => {\n      if (key.indexOf(\"-\") === 0) {\n        // CSS custom properties (variables) start with `-` (e.g. `--my-variable`)\n        // and must be assigned via `setProperty`.\n        node.style.setProperty(key, val);\n      } else {\n        node.style[key] = val;\n      }\n    });\n  }\n}\nfunction attribute(key, value, node) {\n  switch (key) {\n    case \"htmlFor\":\n      attr(node, \"for\", value);\n      return;\n    case \"dataset\":\n      forEach(value, (dataValue, dataKey) => {\n        if (dataValue != null) {\n          node.dataset[dataKey] = dataValue;\n        }\n      });\n      return;\n    case \"innerHTML\":\n    case \"innerText\":\n    case \"textContent\":\n      if (isVisibleChild(value)) {\n        node[key] = value;\n      }\n      return;\n    case \"dangerouslySetInnerHTML\":\n      if (isObject(value)) {\n        node.innerHTML = value[\"__html\"];\n      }\n      return;\n    case \"value\":\n      if (value == null || node instanceof window.HTMLSelectElement) {\n        // skip nullish values\n        // for `<select>` apply value after appending `<option>` elements\n        return;\n      } else if (node instanceof window.HTMLTextAreaElement) {\n        node.value = value;\n        return;\n      }\n      // use attribute for other elements\n      break;\n    case \"spellCheck\":\n      node.spellcheck = value;\n      return;\n    case \"class\":\n    case \"className\":\n      if (isFunction(value)) {\n        value(node);\n      } else {\n        attr(node, \"class\", className(value));\n      }\n      return;\n    case \"ref\":\n    case \"namespaceURI\":\n      return;\n    case \"style\":\n      style(node, value);\n      return;\n    case \"on\":\n    case \"onCapture\":\n      forEach(value, (eventHandler, eventName) => {\n        node.addEventListener(eventName, eventHandler, key === \"onCapture\");\n      });\n      return;\n    // fallthrough\n  }\n  if (isFunction(value)) {\n    if (key[0] === \"o\" && key[1] === \"n\") {\n      let attribute = key.toLowerCase();\n      const useCapture = attribute.endsWith(\"capture\");\n      if (attribute === \"ondoubleclick\") {\n        attribute = \"ondblclick\";\n      } else if (useCapture && attribute === \"ondoubleclickcapture\") {\n        attribute = \"ondblclickcapture\";\n      }\n      if (!useCapture && node[attribute] === null) {\n        // use property when possible PR #17\n        node[attribute] = value;\n      } else if (useCapture) {\n        node.addEventListener(\n          attribute.substring(2, attribute.length - 7),\n          value,\n          true,\n        );\n      } else {\n        let eventName;\n        if (attribute in window) {\n          // standard event\n          // the JSX attribute could have been \"onMouseOver\" and the\n          // member name \"onmouseover\" is on the window's prototype\n          // so let's add the listener \"mouseover\", which is all lowercased\n          const standardEventName = attribute.substring(2);\n          eventName = standardEventName;\n        } else {\n          // custom event\n          // the JSX attribute could have been \"onMyCustomEvent\"\n          // so let's trim off the \"on\" prefix and lowercase the first character\n          // and add the listener \"myCustomEvent\"\n          // except for the first character, we keep the event name case\n          const customEventName = attribute[2] + key.slice(3);\n          eventName = customEventName;\n        }\n        node.addEventListener(eventName, value);\n      }\n    }\n  } else if (isObject(value)) {\n    node[key] = value;\n  } else if (value === true) {\n    attr(node, key, \"\");\n  } else if (value !== false && value != null) {\n    attr(node, key, value);\n  }\n}\nfunction attr(node, key, value) {\n  node.setAttribute(key, value);\n}\nfunction attributes(attr, node) {\n  for (const key of keys(attr)) {\n    attribute(key, attr[key], node);\n  }\n  return node;\n}\n\nfunction useText(initialValue) {\n  const text = new Text();\n  Object.defineProperty(text, \"toString\", {\n    value() {\n      return this.textContent;\n    },\n  });\n  function setText(value) {\n    text.textContent = value;\n  }\n  if (initialValue != null) {\n    setText(initialValue);\n  }\n  return [text, setText];\n}\nfunction useClassList(initialValue) {\n  const div = document.createElement(\"div\");\n  if (initialValue != null) {\n    div.className = className(initialValue);\n  }\n  let list = div.classList;\n  function ClassList(value) {\n    value.setAttribute(\"class\", list.value);\n    list = value.classList;\n  }\n  Object.defineProperties(\n    ClassList,\n    Object.getOwnPropertyDescriptors({\n      get size() {\n        return list.length;\n      },\n      get value() {\n        return list.value;\n      },\n      add() {\n        list.add(...arguments);\n      },\n      remove() {\n        list.remove(...arguments);\n      },\n      toggle(token, force) {\n        list.toggle(token, force);\n      },\n      contains(token) {\n        return list.contains(token);\n      },\n    }),\n  );\n  return ClassList;\n}\n\nfunction useMemo(factory) {\n  return factory();\n}\nfunction forwardRef(render) {\n  return (_ref) => {\n    let { ref, ...props } = _ref;\n    return render(props, ref ?? createRef());\n  };\n}\nfunction useImperativeHandle(ref, init) {\n  attachRef(ref, init());\n}\n\nconst cache = /* @__PURE__ */ new Map();\nconst createStyledComponent = (name) =>\n  function (list) {\n    for (\n      var _len = arguments.length,\n        interpolations = new Array(_len > 1 ? _len - 1 : 0),\n        _key = 1;\n      _key < _len;\n      _key++\n    ) {\n      interpolations[_key - 1] = arguments[_key];\n    }\n    return (_ref) => {\n      let { style, ...props } = _ref;\n      const lastIndex = list.length - 1;\n      const css =\n        list.slice(0, lastIndex).reduce((p, s, i) => {\n          const interpolation = interpolations[i];\n          const current =\n            typeof interpolation === \"function\"\n              ? interpolation(props)\n              : interpolation;\n          return p + s + current;\n        }, \"\") + list[lastIndex];\n      return createElement(name, {\n        style: [css, style],\n        ...props,\n      });\n    };\n  };\nconst baseStyled = (customComponent) => createStyledComponent(customComponent);\nconst styled = /* @__PURE__ */ new Proxy(baseStyled, {\n  get(_, name) {\n    return setIfAbsent(cache, name, () => createStyledComponent(name));\n  },\n});\nfunction setIfAbsent(map, key, getValue) {\n  if (map.has(key)) {\n    return map.get(key);\n  } else {\n    const value = getValue(key);\n    map.set(key, value);\n    return value;\n  }\n}\n\nvar index = {\n  Component,\n  PureComponent: Component,\n  createElement,\n  Fragment,\n  ShadowRoot,\n};\nfunction preventDefault(event) {\n  event.preventDefault();\n  return event;\n}\nfunction stopPropagation(event) {\n  event.stopPropagation();\n  return event;\n}\n\nexport {\n  Component,\n  Fragment,\n  Component as PureComponent,\n  SVGNamespace,\n  ShadowRoot,\n  Fragment as StrictMode,\n  className,\n  createElement,\n  createFactory,\n  createRef,\n  index as default,\n  forwardRef,\n  createElement as h,\n  isRef,\n  jsx,\n  jsx as jsxs,\n  identity as memo,\n  preventDefault,\n  stopPropagation,\n  styled,\n  identity as useCallback,\n  useClassList,\n  useImperativeHandle,\n  useMemo,\n  createRef as useRef,\n  useText,\n};\n", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface CustomerGrossSalesRow {\n    CustomerId?: string;\n    ContactName?: string;\n    ProductId?: number;\n    ProductName?: string;\n    GrossAmount?: number;\n}\n\nexport abstract class CustomerGrossSalesRow {\n    static readonly nameProperty = 'ContactName';\n    static readonly localTextPrefix = 'Northwind.CustomerGrossSales';\n    static readonly deletePermission = 'Northwind:General';\n    static readonly insertPermission = 'Northwind:General';\n    static readonly readPermission = 'Northwind:General';\n    static readonly updatePermission = 'Northwind:General';\n\n    static readonly Fields = fieldsProxy<CustomerGrossSalesRow>();\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface CustomerRepresentativesRow {\n    RepresentativeId?: number;\n    CustomerId?: number;\n    EmployeeId?: number;\n}\n\nexport abstract class CustomerRepresentativesRow {\n    static readonly idProperty = 'RepresentativeId';\n    static readonly localTextPrefix = 'Northwind.CustomerRepresentatives';\n    static readonly deletePermission = 'Northwind:Customer:View';\n    static readonly insertPermission = 'Northwind:Customer:View';\n    static readonly readPermission = 'Northwind:Customer:View';\n    static readonly updatePermission = 'Northwind:Customer:View';\n\n    static readonly Fields = fieldsProxy<CustomerRepresentativesRow>();\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib\";\nimport { NoteRow } from \"./Northwind.NoteRow\";\n\nexport interface CustomerRow {\n    ID?: number;\n    CustomerID?: string;\n    CompanyName?: string;\n    ContactName?: string;\n    ContactTitle?: string;\n    Address?: string;\n    City?: string;\n    Region?: string;\n    PostalCode?: string;\n    Country?: string;\n    Phone?: string;\n    Fax?: string;\n    NoteList?: NoteRow[];\n    Representatives?: number[];\n    LastContactDate?: string;\n    LastContactedBy?: number;\n    Email?: string;\n    SendBulletin?: boolean;\n}\n\nexport abstract class CustomerRow {\n    static readonly idProperty = 'ID';\n    static readonly nameProperty = 'CompanyName';\n    static readonly localTextPrefix = 'Northwind.Customer';\n    static readonly lookupKey = 'Northwind.Customer';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<CustomerRow>('Northwind.Customer') }\n    static async getLookupAsync() { return getLookupAsync<CustomerRow>('Northwind.Customer') }\n\n    static readonly deletePermission = 'Northwind:Customer:Delete';\n    static readonly insertPermission = 'Northwind:Customer:Modify';\n    static readonly readPermission = 'Northwind:Customer:View';\n    static readonly updatePermission = 'Northwind:Customer:Modify';\n\n    static readonly Fields = fieldsProxy<CustomerRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { GetNextNumberRequest, GetNextNumberResponse } from \"@serenity-is/extensions\";\nimport { CustomerRow } from \"./Northwind.CustomerRow\";\n\nexport namespace CustomerService {\n    export const baseUrl = 'Serenity.Demo.Northwind/Customer';\n\n    export declare function Create(request: SaveRequest<CustomerRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<CustomerRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function GetNextNumber(request: GetNextNumberRequest, onSuccess?: (response: GetNextNumberResponse) => void, opt?: ServiceOptions<any>): PromiseLike<GetNextNumberResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CustomerRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<CustomerRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CustomerRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<CustomerRow>>;\n\n    export const Methods = {\n        Create: \"Serenity.Demo.Northwind/Customer/Create\",\n        Update: \"Serenity.Demo.Northwind/Customer/Update\",\n        Delete: \"Serenity.Demo.Northwind/Customer/Delete\",\n        GetNextNumber: \"Serenity.Demo.Northwind/Customer/GetNextNumber\",\n        Retrieve: \"Serenity.Demo.Northwind/Customer/Retrieve\",\n        List: \"Serenity.Demo.Northwind/Customer/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'GetNextNumber', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>CustomerService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Gender } from \"./Northwind.Gender\";\n\nexport interface EmployeeRow {\n    EmployeeID?: number;\n    LastName?: string;\n    FirstName?: string;\n    FullName?: string;\n    Title?: string;\n    TitleOfCourtesy?: string;\n    BirthDate?: string;\n    HireDate?: string;\n    Address?: string;\n    City?: string;\n    Region?: string;\n    PostalCode?: string;\n    Country?: string;\n    HomePhone?: string;\n    Extension?: string;\n    Photo?: number[];\n    Notes?: string;\n    ReportsTo?: number;\n    PhotoPath?: string;\n    ReportsToFullName?: string;\n    Gender?: Gender;\n}\n\nexport abstract class EmployeeRow {\n    static readonly idProperty = 'EmployeeID';\n    static readonly nameProperty = 'FullName';\n    static readonly localTextPrefix = 'Northwind.Employee';\n    static readonly lookupKey = 'Northwind.Employee';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<EmployeeRow>('Northwind.Employee') }\n    static async getLookupAsync() { return getLookupAsync<EmployeeRow>('Northwind.Employee') }\n\n    static readonly deletePermission = 'Northwind:General';\n    static readonly insertPermission = 'Northwind:General';\n    static readonly readPermission = 'Northwind:General';\n    static readonly updatePermission = 'Northwind:General';\n\n    static readonly Fields = fieldsProxy<EmployeeRow>();\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface EmployeeTerritoryRow {\n    EmployeeID?: number;\n    TerritoryID?: string;\n    EmployeeFullName?: string;\n    TerritoryDescription?: string;\n}\n\nexport abstract class EmployeeTerritoryRow {\n    static readonly idProperty = 'EmployeeID';\n    static readonly nameProperty = 'TerritoryID';\n    static readonly localTextPrefix = 'Northwind.EmployeeTerritory';\n    static readonly deletePermission = 'Northwind:General';\n    static readonly insertPermission = 'Northwind:General';\n    static readonly readPermission = 'Northwind:General';\n    static readonly updatePermission = 'Northwind:General';\n\n    static readonly Fields = fieldsProxy<EmployeeTerritoryRow>();\n}", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\n\nexport enum Gender {\n    Male = 1,\n    Female = 2\n}\nDecorators.registerEnumType(Gender, 'Serenity.Demo.Northwind.Gender');\n", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface NoteRow {\n    NoteId?: number;\n    EntityType?: string;\n    EntityId?: number;\n    Text?: string;\n    InsertUserId?: number;\n    InsertDate?: string;\n    InsertUserDisplayName?: string;\n}\n\nexport abstract class NoteRow {\n    static readonly idProperty = 'NoteId';\n    static readonly nameProperty = 'EntityType';\n    static readonly localTextPrefix = 'Northwind.Note';\n    static readonly deletePermission = 'Northwind:General';\n    static readonly insertPermission = 'Northwind:General';\n    static readonly readPermission = 'Northwind:General';\n    static readonly updatePermission = 'Northwind:General';\n\n    static readonly Fields = fieldsProxy<NoteRow>();\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { EmployeeFormatter } from \"../../Employee/EmployeeFormatter\";\nimport { FreightFormatter } from \"../../Order/FreightFormatter\";\nimport { ShipperFormatter } from \"../../Shipper/ShipperFormatter\";\nimport { OrderRow } from \"./Northwind.OrderRow\";\nimport { OrderShippingState } from \"./Northwind.OrderShippingState\";\n\nexport interface OrderColumns {\n    OrderID: Column<OrderRow>;\n    CustomerCompanyName: Column<OrderRow>;\n    OrderDate: Column<OrderRow>;\n    EmployeeFullName: Column<OrderRow>;\n    RequiredDate: Column<OrderRow>;\n    ShippingState: Column<OrderRow>;\n    ShippedDate: Column<OrderRow>;\n    ShipViaCompanyName: Column<OrderRow>;\n    ShipCountry: Column<OrderRow>;\n    ShipCity: Column<OrderRow>;\n    Freight: Column<OrderRow>;\n}\n\nexport class OrderColumns extends ColumnsBase<OrderRow> {\n    static readonly columnsKey = 'Northwind.Order';\n    static readonly Fields = fieldsProxy<OrderColumns>();\n}\n\n[EmployeeFormatter, OrderShippingState, ShipperFormatter, FreightFormatter]; // referenced types", "import { Decorators, Formatter, IInitializeColumn, ISlickFormatter, faIcon } from \"@serenity-is/corelib\";\nimport { htmlEncode, isTrimmedEmpty } from \"@serenity-is/corelib\";\nimport { Column, FormatterContext } from \"@serenity-is/sleekgrid\";\nimport { Gender } from \"../ServerTypes/Demo\";\n\n@Decorators.registerFormatter('Serenity.Demo.Northwind.EmployeeFormatter', [IInitializeColumn])\nexport class EmployeeFormatter implements Formatter {\n    constructor(public readonly props: { genderProperty?: string } = {}) {\n        this.props ??= {};\n    }\n\n    format(ctx: FormatterContext) {\n        let text = htmlEncode(ctx.value);\n\n        if (!this.props.genderProperty || isTrimmedEmpty(ctx.value))\n            return text;\n\n        let female = ctx.item[this.props.genderProperty] === Gender.Female;\n        return `<i class=\"${faIcon(female ? \"female\" : \"male\", female ? \"danger\" : \"primary\")} + ' text-opacity-75\"></i>` + text;\n    }\n\n    public initializeColumn(column: Column) {\n        column.referencedFields = column.referencedFields || [];\n        if (this.props.genderProperty)\n            column.referencedFields.push(this.props.genderProperty);\n    }\n}\n", "import { Decorators, Formatter, faIcon, htmlEncode } from \"@serenity-is/corelib\";\nimport { FormatterContext } from \"@serenity-is/sleekgrid\";\n\n@Decorators.registerFormatter('Serenity.Demo.Northwind.FreightFormatter')\nexport class FreightFormatter implements Formatter {\n    format(ctx: FormatterContext) {\n        if (ctx.value == null)\n            return \"\";\n\n        return `${htmlEncode(ctx.value)} <i class=\"${faIcon(\"balance-scale\", \"secondary\")} text-opacity-75\"></i>`;\n    }\n}\n", "import { Decorators, Formatter, faIcon } from \"@serenity-is/corelib\";\nimport { FormatterContext } from \"@serenity-is/sleekgrid\";\n\n@Decorators.registerFormatter('Serenity.Demo.Northwind.ShipperFormatter')\nexport class ShipperFormatter implements Formatter {\n    format(ctx: FormatterContext) {\n\n        if (!ctx.value)\n            return ctx.escape();\n\n        return `<i class=\"text-info ${faIcon(ctx.value == \"Speedy Express\" ? \"plane\" :\n            (ctx.value == \"Federal Shipping\" ? \"ship\" : \"truck\"))}  text-opacity-75\"></i> ${ctx.escape()}`;\n    }\n}\n", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\n\nexport enum OrderShippingState {\n    NotShipped = 0,\n    Shipped = 1\n}\nDecorators.registerEnumType(OrderShippingState, 'Serenity.Demo.Northwind.OrderShippingState', 'Northwind.OrderShippingState');\n", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { OrderDetailRow } from \"./Northwind.OrderDetailRow\";\n\nexport interface OrderDetailColumns {\n    ProductName: Column<OrderDetailRow>;\n    UnitPrice: Column<OrderDetailRow>;\n    Quantity: Column<OrderDetailRow>;\n    Discount: Column<OrderDetailRow>;\n    LineTotal: Column<OrderDetailRow>;\n}\n\nexport class OrderDetailColumns extends ColumnsBase<OrderDetailRow> {\n    static readonly columnsKey = 'Northwind.OrderDetail';\n    static readonly Fields = fieldsProxy<OrderDetailColumns>();\n}", "\uFEFFimport { LookupEditor, DecimalEditor, IntegerEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface OrderDetailForm {\n    ProductID: LookupEditor;\n    UnitPrice: DecimalEditor;\n    Quantity: IntegerEditor;\n    Discount: DecimalEditor;\n}\n\nexport class OrderDetailForm extends PrefixedContext {\n    static readonly formKey = 'Northwind.OrderDetail';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!OrderDetailForm.init)  {\n            OrderDetailForm.init = true;\n\n            var w0 = LookupEditor;\n            var w1 = DecimalEditor;\n            var w2 = IntegerEditor;\n\n            initFormType(OrderDetailForm, [\n                'ProductID', w0,\n                'UnitPrice', w1,\n                'Quantity', w2,\n                'Discount', w1\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface OrderDetailRow {\n    DetailID?: number;\n    OrderID?: number;\n    ProductID?: number;\n    UnitPrice?: number;\n    Quantity?: number;\n    Discount?: number;\n    OrderCustomerID?: string;\n    OrderEmployeeID?: number;\n    OrderDate?: string;\n    ProductName?: string;\n    LineTotal?: number;\n}\n\nexport abstract class OrderDetailRow {\n    static readonly idProperty = 'DetailID';\n    static readonly localTextPrefix = 'Northwind.OrderDetail';\n    static readonly deletePermission = 'Northwind:General';\n    static readonly insertPermission = 'Northwind:General';\n    static readonly readPermission = 'Northwind:General';\n    static readonly updatePermission = 'Northwind:General';\n\n    static readonly Fields = fieldsProxy<OrderDetailRow>();\n}", "\uFEFFimport { RetrieveRequest, RetrieveResponse, ServiceOptions, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { OrderDetailRow } from \"./Northwind.OrderDetailRow\";\n\nexport namespace OrderDetailService {\n    export const baseUrl = 'Serenity.Demo.Northwind/OrderDetail';\n\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<OrderDetailRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<OrderDetailRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<OrderDetailRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<OrderDetailRow>>;\n\n    export const Methods = {\n        Retrieve: \"Serenity.Demo.Northwind/OrderDetail/Retrieve\",\n        List: \"Serenity.Demo.Northwind/OrderDetail/List\"\n    } as const;\n\n    [\n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>OrderDetailService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { DateEditor, LookupEditor, DecimalEditor, StringEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\nimport { CustomerEditor } from \"../../Customer/CustomerEditor\";\nimport { OrderDetailsEditor } from \"../../OrderDetail/OrderDetailsEditor\";\n\nexport interface OrderForm {\n    CustomerID: CustomerEditor;\n    OrderDate: DateEditor;\n    RequiredDate: DateEditor;\n    EmployeeID: LookupEditor;\n    DetailList: OrderDetailsEditor;\n    ShippedDate: DateEditor;\n    ShipVia: LookupEditor;\n    Freight: DecimalEditor;\n    ShipName: StringEditor;\n    ShipAddress: StringEditor;\n    ShipCity: StringEditor;\n    ShipRegion: StringEditor;\n    ShipPostalCode: StringEditor;\n    ShipCountry: StringEditor;\n}\n\nexport class OrderForm extends PrefixedContext {\n    static readonly formKey = 'Northwind.Order';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!OrderForm.init)  {\n            OrderForm.init = true;\n\n            var w0 = CustomerEditor;\n            var w1 = DateEditor;\n            var w2 = LookupEditor;\n            var w3 = OrderDetailsEditor;\n            var w4 = DecimalEditor;\n            var w5 = StringEditor;\n\n            initFormType(OrderForm, [\n                'CustomerID', w0,\n                'OrderDate', w1,\n                'RequiredDate', w1,\n                'EmployeeID', w2,\n                'DetailList', w3,\n                'ShippedDate', w1,\n                'ShipVia', w2,\n                'Freight', w4,\n                'ShipName', w5,\n                'ShipAddress', w5,\n                'ShipCity', w5,\n                'ShipRegion', w5,\n                'ShipPostalCode', w5,\n                'ShipCountry', w5\n            ]);\n        }\n    }\n}", "import { CustomerRow } from \"../ServerTypes/Demo\";\nimport { Decorators, EditorProps, LookupEditorBase, LookupEditorOptions } from \"@serenity-is/corelib\";\n\n@Decorators.registerEditor('Serenity.Demo.Northwind.CustomerEditor')\nexport class CustomerEditor<P extends LookupEditorOptions = LookupEditorOptions> extends LookupEditorBase<P, CustomerRow> {\n\n    constructor(props: EditorProps<P>) {\n        super({ async: true, ...props });\n    }\n\n    protected getLookupKey() {\n        return 'Northwind.Customer';\n    }\n\n    protected getItemText(item, lookup) {\n        return super.getItemText(item, lookup) + ' [' + item.CustomerID + ']';\n    }\n}\n", "import { OrderDetailColumns, OrderDetailRow, ProductRow } from \"../ServerTypes/Demo\";\nimport { Decorators, alertDialog, toId } from \"@serenity-is/corelib\";\nimport { GridEditorBase } from \"@serenity-is/extensions\";\nimport { OrderDetailDialog } from \"./OrderDetailDialog\";\n\n@Decorators.registerEditor('Serenity.Demo.Northwind.OrderDetailsEditor')\nexport class OrderDetailsEditor<P = {}> extends GridEditorBase<OrderDetailRow, P> {\n    protected getColumnsKey() { return OrderDetailColumns.columnsKey; }\n    protected getDialogType() { return OrderDetailDialog; }\n    protected getLocalTextPrefix() { return OrderDetailRow.localTextPrefix; }\n\n    validateEntity(row, id) {\n        row.ProductID = toId(row.ProductID);\n\n        var sameProduct = this.view.getItems().find(x => x.ProductID === row.ProductID);\n        if (sameProduct && this.id(sameProduct) !== id) {\n            alertDialog('This product is already in order details!');\n            return false;\n        }\n\n        id ??= row[this.getIdProperty()];\n\n        ProductRow.getLookupAsync().then(lookup => {\n            var item = this.view?.getItemById?.(id);\n            if (item) {\n                item.ProductName = lookup.itemById[row.ProductID].ProductName;\n                this.view.updateItem(id, item);\n            }\n        });\n\n        row.LineTotal = (row.Quantity || 0) * (row.UnitPrice || 0) - (row.Discount || 0);\n        return true;\n    }\n}\n", "import { Decorators, WidgetProps } from \"@serenity-is/corelib\";\nimport { toId } from \"@serenity-is/corelib\";\nimport { GridEditorDialog } from \"@serenity-is/extensions\";\nimport { OrderDetailForm, OrderDetailRow, ProductRow } from \"../ServerTypes/Demo\";\n\n@Decorators.registerClass()\nexport class OrderDetailDialog extends GridEditorDialog<OrderDetailRow> {\n    protected getFormKey() { return OrderDetailForm.formKey; }\n    protected getLocalTextPrefix() { return OrderDetailRow.localTextPrefix; }\n\n    protected form: OrderDetailForm;\n\n    constructor(props: WidgetProps<any>) {\n        super(props);\n\n        this.form = new OrderDetailForm(this.idPrefix);\n\n        this.form.ProductID.changeSelect2(async e => {\n            var productID = toId(this.form.ProductID.value);\n            if (productID != null) {\n                this.form.UnitPrice.value = (await ProductRow.getLookupAsync()).itemById[productID].UnitPrice;\n            }\n        });\n\n        this.form.Discount.addValidationRule(this.uniqueName, e => {\n            var price = this.form.UnitPrice.value;\n            var quantity = this.form.Quantity.value;\n            var discount = this.form.Discount.value;\n            if (price != null && quantity != null && discount != null &&\n                discount > 0 && discount >= price * quantity) {\n                return \"Discount can't be higher than total price!\";\n            }\n        });\n    }\n}\n", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\nimport { Gender } from \"./Northwind.Gender\";\nimport { OrderDetailRow } from \"./Northwind.OrderDetailRow\";\nimport { OrderShippingState } from \"./Northwind.OrderShippingState\";\n\nexport interface OrderRow {\n    OrderID?: number;\n    CustomerID?: string;\n    EmployeeID?: number;\n    OrderDate?: string;\n    RequiredDate?: string;\n    ShippedDate?: string;\n    ShipVia?: number;\n    Freight?: number;\n    ShipName?: string;\n    ShipAddress?: string;\n    ShipCity?: string;\n    ShipRegion?: string;\n    ShipPostalCode?: string;\n    ShipCountry?: string;\n    CustomerCompanyName?: string;\n    CustomerContactName?: string;\n    CustomerContactTitle?: string;\n    CustomerCity?: string;\n    CustomerRegion?: string;\n    CustomerCountry?: string;\n    CustomerPhone?: string;\n    CustomerFax?: string;\n    EmployeeFullName?: string;\n    EmployeeGender?: Gender;\n    ShipViaCompanyName?: string;\n    ShippingState?: OrderShippingState;\n    DetailList?: OrderDetailRow[];\n}\n\nexport abstract class OrderRow {\n    static readonly idProperty = 'OrderID';\n    static readonly nameProperty = 'CustomerID';\n    static readonly localTextPrefix = 'Northwind.Order';\n    static readonly deletePermission = 'Northwind:General';\n    static readonly insertPermission = 'Northwind:General';\n    static readonly readPermission = 'Northwind:General';\n    static readonly updatePermission = 'Northwind:General';\n\n    static readonly Fields = fieldsProxy<OrderRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { OrderListRequest } from \"./Northwind.OrderListRequest\";\nimport { OrderRow } from \"./Northwind.OrderRow\";\n\nexport namespace OrderService {\n    export const baseUrl = 'Serenity.Demo.Northwind/Order';\n\n    export declare function Create(request: SaveRequest<OrderRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<OrderRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<OrderRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<OrderRow>>;\n    export declare function List(request: OrderListRequest, onSuccess?: (response: ListResponse<OrderRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<OrderRow>>;\n\n    export const Methods = {\n        Create: \"Serenity.Demo.Northwind/Order/Create\",\n        Update: \"Serenity.Demo.Northwind/Order/Update\",\n        Delete: \"Serenity.Demo.Northwind/Order/Delete\",\n        Retrieve: \"Serenity.Demo.Northwind/Order/Retrieve\",\n        List: \"Serenity.Demo.Northwind/Order/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>OrderService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport namespace PermissionKeys {\n    export const General = \"Northwind:General\";\n\n    export namespace Customer {\n        export const Delete = \"Northwind:Customer:Delete\";\n        export const Modify = \"Northwind:Customer:Modify\";\n        export const View = \"Northwind:Customer:View\";\n    }\n}\n", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { ProductRow } from \"./Northwind.ProductRow\";\n\nexport interface ProductColumns {\n    ProductID: Column<ProductRow>;\n    ProductName: Column<ProductRow>;\n    Discontinued: Column<ProductRow>;\n    SupplierCompanyName: Column<ProductRow>;\n    CategoryName: Column<ProductRow>;\n    QuantityPerUnit: Column<ProductRow>;\n    UnitPrice: Column<ProductRow>;\n    UnitsInStock: Column<ProductRow>;\n    UnitsOnOrder: Column<ProductRow>;\n    ReorderLevel: Column<ProductRow>;\n}\n\nexport class ProductColumns extends ColumnsBase<ProductRow> {\n    static readonly columnsKey = 'Northwind.Product';\n    static readonly Fields = fieldsProxy<ProductColumns>();\n}", "\uFEFFimport { StringEditor, ImageUploadEditor, BooleanEditor, LookupEditor, DecimalEditor, IntegerEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\nimport { CategoryDialog } from \"../../Category/CategoryDialog\";\nimport { SupplierDialog } from \"../../Supplier/SupplierDialog\";\n\nexport interface ProductForm {\n    ProductName: StringEditor;\n    ProductImage: ImageUploadEditor;\n    Discontinued: BooleanEditor;\n    SupplierID: LookupEditor;\n    CategoryID: LookupEditor;\n    QuantityPerUnit: StringEditor;\n    UnitPrice: DecimalEditor;\n    UnitsInStock: IntegerEditor;\n    UnitsOnOrder: IntegerEditor;\n    ReorderLevel: IntegerEditor;\n}\n\nexport class ProductForm extends PrefixedContext {\n    static readonly formKey = 'Northwind.Product';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!ProductForm.init)  {\n            ProductForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = ImageUploadEditor;\n            var w2 = BooleanEditor;\n            var w3 = LookupEditor;\n            var w4 = DecimalEditor;\n            var w5 = IntegerEditor;\n\n            initFormType(ProductForm, [\n                'ProductName', w0,\n                'ProductImage', w1,\n                'Discontinued', w2,\n                'SupplierID', w3,\n                'CategoryID', w3,\n                'QuantityPerUnit', w0,\n                'UnitPrice', w4,\n                'UnitsInStock', w5,\n                'UnitsOnOrder', w5,\n                'ReorderLevel', w5\n            ]);\n        }\n    }\n}\n\n[SupplierDialog, CategoryDialog]; // referenced types", "import { Decorators, EntityDialog } from \"@serenity-is/corelib\";\nimport { SupplierForm, SupplierRow, SupplierService } from \"../ServerTypes/Demo\";\n\n@Decorators.registerClass('Serenity.Demo.Northwind.SupplierDialog')\nexport class SupplierDialog<P = {}> extends EntityDialog<SupplierRow, P> {\n    protected getFormKey() { return SupplierForm.formKey; }\n    protected getRowDefinition() { return SupplierRow; }\n    protected getService() { return SupplierService.baseUrl; }\n\n    protected form = new SupplierForm(this.idPrefix);\n}\n", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface ProductLangRow {\n    Id?: number;\n    ProductId?: number;\n    LanguageId?: number;\n    ProductName?: string;\n}\n\nexport abstract class ProductLangRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'ProductName';\n    static readonly localTextPrefix = 'Northwind.ProductLang';\n    static readonly deletePermission = 'Northwind:General';\n    static readonly insertPermission = 'Northwind:General';\n    static readonly readPermission = 'Northwind:General';\n    static readonly updatePermission = 'Northwind:General';\n\n    static readonly Fields = fieldsProxy<ProductLangRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { ProductLangRow } from \"./Northwind.ProductLangRow\";\n\nexport namespace ProductLangService {\n    export const baseUrl = 'Serenity.Demo.Northwind/ProductLang';\n\n    export declare function Create(request: SaveRequest<ProductLangRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<ProductLangRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<ProductLangRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<ProductLangRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<ProductLangRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<ProductLangRow>>;\n\n    export const Methods = {\n        Create: \"Serenity.Demo.Northwind/ProductLang/Create\",\n        Update: \"Serenity.Demo.Northwind/ProductLang/Update\",\n        Delete: \"Serenity.Demo.Northwind/ProductLang/Delete\",\n        Retrieve: \"Serenity.Demo.Northwind/ProductLang/Retrieve\",\n        List: \"Serenity.Demo.Northwind/ProductLang/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>ProductLangService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { CaptureOperationType, fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface ProductLogRow {\n    ProductLogID?: number;\n    OperationType?: CaptureOperationType;\n    ChangingUserId?: number;\n    ValidFrom?: string;\n    ValidUntil?: string;\n    ProductID?: number;\n    ProductName?: string;\n    ProductImage?: string;\n    Discontinued?: boolean;\n    SupplierID?: number;\n    CategoryID?: number;\n    QuantityPerUnit?: string;\n    UnitPrice?: number;\n    UnitsInStock?: number;\n    UnitsOnOrder?: number;\n    ReorderLevel?: number;\n}\n\nexport abstract class ProductLogRow {\n    static readonly idProperty = 'ProductLogID';\n    static readonly localTextPrefix = 'Northwind.ProductLog';\n    static readonly deletePermission = null;\n    static readonly insertPermission = null;\n    static readonly readPermission = '';\n    static readonly updatePermission = null;\n\n    static readonly Fields = fieldsProxy<ProductLogRow>();\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface ProductRow {\n    ProductID?: number;\n    ProductName?: string;\n    ProductImage?: string;\n    Discontinued?: boolean;\n    SupplierID?: number;\n    CategoryID?: number;\n    QuantityPerUnit?: string;\n    UnitPrice?: number;\n    UnitsInStock?: number;\n    UnitsOnOrder?: number;\n    ReorderLevel?: number;\n    SupplierCompanyName?: string;\n    SupplierCountry?: string;\n    CategoryName?: string;\n}\n\nexport abstract class ProductRow {\n    static readonly idProperty = 'ProductID';\n    static readonly nameProperty = 'ProductName';\n    static readonly localTextPrefix = 'Northwind.Product';\n    static readonly lookupKey = 'Northwind.Product';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<ProductRow>('Northwind.Product') }\n    static async getLookupAsync() { return getLookupAsync<ProductRow>('Northwind.Product') }\n\n    static readonly deletePermission = 'Northwind:General';\n    static readonly insertPermission = 'Northwind:General';\n    static readonly readPermission = 'Northwind:General';\n    static readonly updatePermission = 'Northwind:General';\n\n    static readonly Fields = fieldsProxy<ProductRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { ProductRow } from \"./Northwind.ProductRow\";\n\nexport namespace ProductService {\n    export const baseUrl = 'Serenity.Demo.Northwind/Product';\n\n    export declare function Create(request: SaveRequest<ProductRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<ProductRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<ProductRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<ProductRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<ProductRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<ProductRow>>;\n\n    export const Methods = {\n        Create: \"Serenity.Demo.Northwind/Product/Create\",\n        Update: \"Serenity.Demo.Northwind/Product/Update\",\n        Delete: \"Serenity.Demo.Northwind/Product/Delete\",\n        Retrieve: \"Serenity.Demo.Northwind/Product/Retrieve\",\n        List: \"Serenity.Demo.Northwind/Product/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>ProductService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { RegionRow } from \"./Northwind.RegionRow\";\n\nexport interface RegionColumns {\n    RegionID: Column<RegionRow>;\n    RegionDescription: Column<RegionRow>;\n}\n\nexport class RegionColumns extends ColumnsBase<RegionRow> {\n    static readonly columnsKey = 'Northwind.Region';\n    static readonly Fields = fieldsProxy<RegionColumns>();\n}", "\uFEFFimport { IntegerEditor, StringEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface RegionForm {\n    RegionID: IntegerEditor;\n    RegionDescription: StringEditor;\n}\n\nexport class RegionForm extends PrefixedContext {\n    static readonly formKey = 'Northwind.Region';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!RegionForm.init)  {\n            RegionForm.init = true;\n\n            var w0 = IntegerEditor;\n            var w1 = StringEditor;\n\n            initFormType(RegionForm, [\n                'RegionID', w0,\n                'RegionDescription', w1\n            ]);\n        }\n    }\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface RegionRow {\n    RegionID?: number;\n    RegionDescription?: string;\n}\n\nexport abstract class RegionRow {\n    static readonly idProperty = 'RegionID';\n    static readonly nameProperty = 'RegionDescription';\n    static readonly localTextPrefix = 'Northwind.Region';\n    static readonly lookupKey = 'Northwind.Region';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<RegionRow>('Northwind.Region') }\n    static async getLookupAsync() { return getLookupAsync<RegionRow>('Northwind.Region') }\n\n    static readonly deletePermission = 'Northwind:General';\n    static readonly insertPermission = 'Northwind:General';\n    static readonly readPermission = 'Northwind:General';\n    static readonly updatePermission = 'Northwind:General';\n\n    static readonly Fields = fieldsProxy<RegionRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { RegionRow } from \"./Northwind.RegionRow\";\n\nexport namespace RegionService {\n    export const baseUrl = 'Serenity.Demo.Northwind/Region';\n\n    export declare function Create(request: SaveRequest<RegionRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<RegionRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<RegionRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<RegionRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<RegionRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<RegionRow>>;\n\n    export const Methods = {\n        Create: \"Serenity.Demo.Northwind/Region/Create\",\n        Update: \"Serenity.Demo.Northwind/Region/Update\",\n        Delete: \"Serenity.Demo.Northwind/Region/Delete\",\n        Retrieve: \"Serenity.Demo.Northwind/Region/Retrieve\",\n        List: \"Serenity.Demo.Northwind/Region/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>RegionService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { SalesByCategoryRow } from \"./Northwind.SalesByCategoryRow\";\n\nexport interface SalesByCategoryColumns {\n    CategoryName: Column<SalesByCategoryRow>;\n    ProductName: Column<SalesByCategoryRow>;\n    ProductSales: Column<SalesByCategoryRow>;\n}\n\nexport class SalesByCategoryColumns extends ColumnsBase<SalesByCategoryRow> {\n    static readonly columnsKey = 'Northwind.SalesByCategory';\n    static readonly Fields = fieldsProxy<SalesByCategoryColumns>();\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface SalesByCategoryRow {\n    CategoryId?: number;\n    CategoryName?: string;\n    ProductName?: string;\n    ProductSales?: number;\n}\n\nexport abstract class SalesByCategoryRow {\n    static readonly nameProperty = 'CategoryName';\n    static readonly localTextPrefix = 'Northwind.SalesByCategory';\n    static readonly deletePermission = 'Northwind:General';\n    static readonly insertPermission = 'Northwind:General';\n    static readonly readPermission = 'Northwind:General';\n    static readonly updatePermission = 'Northwind:General';\n\n    static readonly Fields = fieldsProxy<SalesByCategoryRow>();\n}", "\uFEFFimport { ListRequest, ListResponse, ServiceOptions, serviceRequest } from \"@serenity-is/corelib\";\nimport { SalesByCategoryRow } from \"./Northwind.SalesByCategoryRow\";\n\nexport namespace SalesByCategoryService {\n    export const baseUrl = 'Serenity.Demo.Northwind/SalesByCategory';\n\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<SalesByCategoryRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<SalesByCategoryRow>>;\n\n    export const Methods = {\n        List: \"Serenity.Demo.Northwind/SalesByCategory/List\"\n    } as const;\n\n    [\n        'List'\n    ].forEach(x => {\n        (<any>SalesByCategoryService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { ShipperRow } from \"./Northwind.ShipperRow\";\n\nexport interface ShipperColumns {\n    ShipperID: Column<ShipperRow>;\n    CompanyName: Column<ShipperRow>;\n    Phone: Column<ShipperRow>;\n}\n\nexport class ShipperColumns extends ColumnsBase<ShipperRow> {\n    static readonly columnsKey = 'Northwind.Shipper';\n    static readonly Fields = fieldsProxy<ShipperColumns>();\n}", "\uFEFFimport { StringEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\nimport { PhoneEditor } from \"../../Shared/PhoneEditor\";\n\nexport interface ShipperForm {\n    CompanyName: StringEditor;\n    Phone: PhoneEditor;\n}\n\nexport class ShipperForm extends PrefixedContext {\n    static readonly formKey = 'Northwind.Shipper';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!ShipperForm.init)  {\n            ShipperForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = PhoneEditor;\n\n            initFormType(ShipperForm, [\n                'CompanyName', w0,\n                'Phone', w1\n            ]);\n        }\n    }\n}", "import { Decorators, StringEditor, WidgetProps, localText, replaceAll } from \"@serenity-is/corelib\";\n\nexport interface PhoneEditorOptions {\n    multiple?: boolean;\n}\n\n@Decorators.registerEditor('Serenity.Demo.Northwind.PhoneEditor')\nexport class PhoneEditor<P extends PhoneEditorOptions = PhoneEditorOptions> extends StringEditor<P> {\n\n    constructor(props: WidgetProps<P>) {\n        super(props);\n\n        this.addValidationRule(this.uniqueName, e => {\n            var value = this.get_value()?.trim();\n            if (!value)\n                return null;\n            return PhoneEditor.validate(value, this.props?.multiple);\n        });\n\n        let input = this.domNode as HTMLInputElement;\n        input.addEventListener('change', e => {\n            this.formatValue();\n        });\n\n        input.addEventListener('blur', e => {\n            if (this.domNode.classList.contains('valid')) {\n                this.formatValue();\n            }\n        });\n    }\n\n    protected formatValue(): void {\n        (this.domNode as HTMLInputElement).value = this.getFormattedValue();\n    }\n\n    protected getFormattedValue(): string {\n        var value = (this.domNode as HTMLInputElement).value;\n        if (this.props?.multiple) {\n            return PhoneEditor.formatMulti(value, PhoneEditor.formatPhone);\n        }\n        return PhoneEditor.formatPhone(value);\n    }\n\n    get_value() {\n        return this.getFormattedValue();\n    }\n\n    set_value(value: string) {\n        (this.domNode as HTMLInputElement).value = value;\n    }\n\n    static validate(phone: string, isMultiple: boolean) {\n        var valid = (isMultiple ? PhoneEditor.isValidMulti(phone, PhoneEditor.isValidPhone) : PhoneEditor.isValidPhone(phone));\n        if (valid) {\n            return null;\n        }\n        return localText((isMultiple ? 'Validation.NorthwindPhoneMultiple' : 'Validation.NorthwindPhone'));\n    }\n\n    static isValidPhone(phone: string) {\n        if (!phone) {\n            return false;\n        }\n        phone = replaceAll(replaceAll(phone, ' ', ''), '-', '');\n        if (phone.length < 10) {\n            return false;\n        }\n\n        if (phone.startsWith('0')) {\n            phone = phone.substring(1);\n        }\n\n        if (phone.startsWith('(') && phone.charAt(4) === ')') {\n            phone = phone.substr(1, 3) + phone.substring(5);\n        }\n\n        if (phone.length !== 10) {\n            return false;\n        }\n\n        if (phone.startsWith('0')) {\n            return false;\n        }\n\n        for (var i = 0; i < phone.length; i++) {\n            var c = phone.charAt(i);\n            if (c < '0' || c > '9') {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static formatPhone(phone) {\n        if (!PhoneEditor.isValidPhone(phone)) {\n            return phone;\n        }\n        phone = replaceAll(replaceAll(replaceAll(replaceAll(phone, ' ', ''), '-', ''), '(', ''), ')', '');\n        if (phone.startsWith('0')) {\n            phone = phone.substring(1);\n        }\n        phone = '(' + phone.substr(0, 3) + ') ' + phone.substr(3, 3) + '-' + phone.substr(6, 2) + phone.substr(8, 2);\n        return phone;\n    }\n\n    static formatMulti(phone: string, format: (s: string) => string) {\n        var phones = replaceAll(phone, String.fromCharCode(59), String.fromCharCode(44)).split(String.fromCharCode(44));\n        var result = '';\n        for (var x of phones) {\n            var s = x?.trim();\n            if (!s)\n                continue;\n            if (result.length > 0)\n                result += ', ';\n            result += format(s);\n        }\n        return result;\n    }\n\n    static isValidMulti(phone: string, check: (s: string) => boolean) {\n        if (!phone)\n            return false;\n        var phones = replaceAll(phone, String.fromCharCode(59), String.fromCharCode(44)).split(String.fromCharCode(44));\n        var anyValid = false;\n        for (var $t1 = 0; $t1 < phones.length; $t1++) {\n            var x = phones[$t1];\n            var s = x?.trim();\n            if (!s)\n                continue;\n            if (!check(s))\n                return false;\n            anyValid = true;\n        }\n        if (!anyValid)\n            return false;\n        return true;\n    }\n}\n", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface ShipperRow {\n    ShipperID?: number;\n    CompanyName?: string;\n    Phone?: string;\n}\n\nexport abstract class ShipperRow {\n    static readonly idProperty = 'ShipperID';\n    static readonly nameProperty = 'CompanyName';\n    static readonly localTextPrefix = 'Northwind.Shipper';\n    static readonly lookupKey = 'Northwind.Shipper';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<ShipperRow>('Northwind.Shipper') }\n    static async getLookupAsync() { return getLookupAsync<ShipperRow>('Northwind.Shipper') }\n\n    static readonly deletePermission = 'Northwind:General';\n    static readonly insertPermission = 'Northwind:General';\n    static readonly readPermission = 'Northwind:General';\n    static readonly updatePermission = 'Northwind:General';\n\n    static readonly Fields = fieldsProxy<ShipperRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { ShipperRow } from \"./Northwind.ShipperRow\";\n\nexport namespace ShipperService {\n    export const baseUrl = 'Serenity.Demo.Northwind/Shipper';\n\n    export declare function Create(request: SaveRequest<ShipperRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<ShipperRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<ShipperRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<ShipperRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<ShipperRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<ShipperRow>>;\n\n    export const Methods = {\n        Create: \"Serenity.Demo.Northwind/Shipper/Create\",\n        Update: \"Serenity.Demo.Northwind/Shipper/Update\",\n        Delete: \"Serenity.Demo.Northwind/Shipper/Delete\",\n        Retrieve: \"Serenity.Demo.Northwind/Shipper/Retrieve\",\n        List: \"Serenity.Demo.Northwind/Shipper/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>ShipperService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { SupplierRow } from \"./Northwind.SupplierRow\";\n\nexport interface SupplierColumns {\n    SupplierID: Column<SupplierRow>;\n    CompanyName: Column<SupplierRow>;\n    ContactName: Column<SupplierRow>;\n    ContactTitle: Column<SupplierRow>;\n    Phone: Column<SupplierRow>;\n    Region: Column<SupplierRow>;\n    Country: Column<SupplierRow>;\n    City: Column<SupplierRow>;\n}\n\nexport class SupplierColumns extends ColumnsBase<SupplierRow> {\n    static readonly columnsKey = 'Northwind.Supplier';\n    static readonly Fields = fieldsProxy<SupplierColumns>();\n}", "\uFEFFimport { StringEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface SupplierForm {\n    CompanyName: StringEditor;\n    ContactName: StringEditor;\n    ContactTitle: StringEditor;\n    Address: StringEditor;\n    Region: StringEditor;\n    PostalCode: StringEditor;\n    Country: StringEditor;\n    City: StringEditor;\n    Phone: StringEditor;\n    Fax: StringEditor;\n    HomePage: StringEditor;\n}\n\nexport class SupplierForm extends PrefixedContext {\n    static readonly formKey = 'Northwind.Supplier';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!SupplierForm.init)  {\n            SupplierForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(SupplierForm, [\n                'CompanyName', w0,\n                'ContactName', w0,\n                'ContactTitle', w0,\n                'Address', w0,\n                'Region', w0,\n                'PostalCode', w0,\n                'Country', w0,\n                'City', w0,\n                'Phone', w0,\n                'Fax', w0,\n                'HomePage', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface SupplierRow {\n    SupplierID?: number;\n    CompanyName?: string;\n    ContactName?: string;\n    ContactTitle?: string;\n    Address?: string;\n    City?: string;\n    Region?: string;\n    PostalCode?: string;\n    Country?: string;\n    Phone?: string;\n    Fax?: string;\n    HomePage?: string;\n}\n\nexport abstract class SupplierRow {\n    static readonly idProperty = 'SupplierID';\n    static readonly nameProperty = 'CompanyName';\n    static readonly localTextPrefix = 'Northwind.Supplier';\n    static readonly lookupKey = 'Northwind.Supplier';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<SupplierRow>('Northwind.Supplier') }\n    static async getLookupAsync() { return getLookupAsync<SupplierRow>('Northwind.Supplier') }\n\n    static readonly deletePermission = 'Northwind:General';\n    static readonly insertPermission = 'Northwind:General';\n    static readonly readPermission = 'Northwind:General';\n    static readonly updatePermission = 'Northwind:General';\n\n    static readonly Fields = fieldsProxy<SupplierRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { SupplierRow } from \"./Northwind.SupplierRow\";\n\nexport namespace SupplierService {\n    export const baseUrl = 'Serenity.Demo.Northwind/Supplier';\n\n    export declare function Create(request: SaveRequest<SupplierRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<SupplierRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<SupplierRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<SupplierRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<SupplierRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<SupplierRow>>;\n\n    export const Methods = {\n        Create: \"Serenity.Demo.Northwind/Supplier/Create\",\n        Update: \"Serenity.Demo.Northwind/Supplier/Update\",\n        Delete: \"Serenity.Demo.Northwind/Supplier/Delete\",\n        Retrieve: \"Serenity.Demo.Northwind/Supplier/Retrieve\",\n        List: \"Serenity.Demo.Northwind/Supplier/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>SupplierService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { TerritoryRow } from \"./Northwind.TerritoryRow\";\n\nexport interface TerritoryColumns {\n    TerritoryID: Column<TerritoryRow>;\n    TerritoryDescription: Column<TerritoryRow>;\n    RegionDescription: Column<TerritoryRow>;\n}\n\nexport class TerritoryColumns extends ColumnsBase<TerritoryRow> {\n    static readonly columnsKey = 'Northwind.Territory';\n    static readonly Fields = fieldsProxy<TerritoryColumns>();\n}", "\uFEFFimport { StringEditor, LookupEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface TerritoryForm {\n    TerritoryID: StringEditor;\n    TerritoryDescription: StringEditor;\n    RegionID: LookupEditor;\n}\n\nexport class TerritoryForm extends PrefixedContext {\n    static readonly formKey = 'Northwind.Territory';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!TerritoryForm.init)  {\n            TerritoryForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = LookupEditor;\n\n            initFormType(TerritoryForm, [\n                'TerritoryID', w0,\n                'TerritoryDescription', w0,\n                'RegionID', w1\n            ]);\n        }\n    }\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface TerritoryRow {\n    ID?: number;\n    TerritoryID?: string;\n    TerritoryDescription?: string;\n    RegionID?: number;\n    RegionDescription?: string;\n}\n\nexport abstract class TerritoryRow {\n    static readonly idProperty = 'ID';\n    static readonly nameProperty = 'TerritoryID';\n    static readonly localTextPrefix = 'Northwind.Territory';\n    static readonly lookupKey = 'Northwind.Territory';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<TerritoryRow>('Northwind.Territory') }\n    static async getLookupAsync() { return getLookupAsync<TerritoryRow>('Northwind.Territory') }\n\n    static readonly deletePermission = 'Northwind:General';\n    static readonly insertPermission = 'Northwind:General';\n    static readonly readPermission = 'Northwind:General';\n    static readonly updatePermission = 'Northwind:General';\n\n    static readonly Fields = fieldsProxy<TerritoryRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { TerritoryRow } from \"./Northwind.TerritoryRow\";\n\nexport namespace TerritoryService {\n    export const baseUrl = 'Serenity.Demo.Northwind/Territory';\n\n    export declare function Create(request: SaveRequest<TerritoryRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<TerritoryRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<TerritoryRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<TerritoryRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<TerritoryRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<TerritoryRow>>;\n\n    export const Methods = {\n        Create: \"Serenity.Demo.Northwind/Territory/Create\",\n        Update: \"Serenity.Demo.Northwind/Territory/Update\",\n        Delete: \"Serenity.Demo.Northwind/Territory/Delete\",\n        Retrieve: \"Serenity.Demo.Northwind/Territory/Retrieve\",\n        List: \"Serenity.Demo.Northwind/Territory/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>TerritoryService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "import { CategoryForm, CategoryRow, CategoryService } from \"../ServerTypes/Demo\";\nimport { Decorators, EntityDialog } from \"@serenity-is/corelib\";\n\n@Decorators.registerClass('Serenity.Demo.Northwind.CategoryDialog')\nexport class CategoryDialog<P = {}> extends EntityDialog<CategoryRow, P> {\n    protected getFormKey() { return CategoryForm.formKey; }\n    protected getRowDefinition() { return CategoryRow; }\n    protected getService() { return CategoryService.baseUrl; }\n\n    protected form = new CategoryForm(this.idPrefix);\n}", "import { CategoryColumns, CategoryRow, CategoryService } from \"../ServerTypes/Demo\";\nimport { Decorators, EntityGrid } from \"@serenity-is/corelib\";\nimport { CategoryDialog } from \"./CategoryDialog\";\n\n@Decorators.registerClass('Serenity.Demo.Northwind.CategoryGrid')\nexport class CategoryGrid<P = {}> extends EntityGrid<CategoryRow, P> {\n    protected getColumnsKey() { return CategoryColumns.columnsKey; }\n    protected getDialogType() { return <any>CategoryDialog; }\n    protected getRowDefinition() { return CategoryRow; }\n    protected getService() { return CategoryService.baseUrl; }\n}\n", "import { CustomerForm, CustomerRow, CustomerService } from \"../ServerTypes/Demo\";\nimport { Decorators, EntityDialog, TabsExtensions, WidgetProps, htmlEncode, localText, reloadLookup } from \"@serenity-is/corelib\";\nimport { DialogUtils } from \"@serenity-is/extensions\";\nimport { CustomerOrdersGrid } from \"./CustomerOrdersGrid\";\n\n@Decorators.registerClass('Serenity.Demo.Northwind.CustomerDialog')\nexport class CustomerDialog<P = {}> extends EntityDialog<CustomerRow, P> {\n    protected getFormKey() { return CustomerForm.formKey; }\n    protected getRowDefinition() { return CustomerRow; }\n    protected getService() { return CustomerService.baseUrl; }\n\n    protected form = new CustomerForm(this.idPrefix);\n\n    private ordersGrid: CustomerOrdersGrid;\n    private loadedState: string;\n\n    constructor(props: WidgetProps<P>) {\n        super(props);\n\n        this.byId('NoteList').closest('.field').hide();\n        this.byId('NoteList').appendTo(this.byId('TabNotes'));\n    }\n\n    override initDialog() {\n        super.initDialog();\n        DialogUtils.pendingChangesConfirmation(this.domNode, () => this.getSaveState() != this.loadedState);\n    }\n\n    getSaveState() {\n        try {\n            return JSON.stringify(this.getSaveEntity());\n        }\n        catch (e) {\n            return null;\n        }\n    }\n\n    loadResponse(data: any) {\n        super.loadResponse(data);\n        this.loadedState = this.getSaveState();\n    }\n\n    loadEntity(entity: CustomerRow) {\n        super.loadEntity(entity);\n\n        TabsExtensions.setDisabled(this.tabs, 'Orders', this.isNewOrDeleted());\n\n        this.ordersGrid.customerID = entity.CustomerID;\n    }\n\n    onSaveSuccess(response) {\n        super.onSaveSuccess(response);\n\n        reloadLookup('Northwind.Customer');\n    }\n\n    renderContents(): any {\n        const id = this.useIdPrefix();\n        return (\n            <div id={id.Tabs} class=\"s-DialogContent\">\n                <ul>\n                    <li><a href={'#' + id.TabInfo}><span>{localText(\"Db.Northwind.Customer.EntitySingular\")}</span></a></li>\n                    <li><a href={'#' + id.TabNotes}><span>{localText(\"Db.Northwind.Note.EntityPlural\")}</span></a></li>\n                    <li><a href={'#' + id.TabOrders}><span>{localText(\"Db.Northwind.Order.EntityPlural\")}</span></a></li>\n                </ul>\n                <div id={id.TabInfo} class=\"tab-pane s-TabInfo\">\n                    <div id={id.Toolbar} class=\"s-DialogToolbar\">\n                    </div>\n                    <form id={id.Form} action=\"\" class=\"s-Form\">\n                        <div id={id.PropertyGrid}></div>\n                    </form>\n                </div>\n                <div id={id.TabNotes} class=\"tab-pane s-TabNotes\">\n                </div>\n                <div id={id.TabOrders} class=\"tab-pane s-TabOrders\">\n                    <CustomerOrdersGrid id={id.OrdersGrid} ref={grid => {\n                        this.ordersGrid = grid;\n                        // force order dialog to open in Dialog mode instead of Panel mode\n                        // which is set as default on OrderDialog with @panelAttribute\n                        this.ordersGrid.openDialogsAsPanel = false;\n                    }} />\n                </div>\n            </div>\n        )\n    }\n}\n", "\nimport { Decorators, SubDialogHelper } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { OrderGrid } from \"../Order/OrderGrid\";\nimport { OrderRow } from \"../ServerTypes/Demo\";\nimport { CustomerOrderDialog } from \"./CustomerOrderDialog\";\n\nconst fld = OrderRow.Fields;\n\n@Decorators.registerClass()\nexport class CustomerOrdersGrid<P = {}> extends OrderGrid<P> {\n    protected getDialogType() { return CustomerOrderDialog; }\n\n    protected getColumns(): Column[] {\n        return super.getColumns().filter(x => x.field !== fld.CustomerCompanyName);\n    }\n\n    protected initEntityDialog(itemType, dialog) {\n        super.initEntityDialog(itemType, dialog);\n        SubDialogHelper.cascade(dialog, this.domNode.closest('.ui-dialog') as HTMLElement);\n    }\n\n    protected override getButtons() {\n        var buttons = super.getButtons();\n        var addButton = buttons.find(x => x.action === 'add');\n        if (addButton)\n            addButton.disabled = () => !this.customerID;\n        return buttons;\n    }\n\n    protected addButtonClick() {\n        if (!this.customerID)\n            return;\n        this.editItem({ CustomerID: this.customerID });\n    }\n\n    protected getInitialTitle() {\n        return null;\n    }\n\n    protected getGridCanLoad() {\n        return super.getGridCanLoad() && !!this.customerID;\n    }\n\n    private _customerID: string;\n\n    get customerID() {\n        return this._customerID;\n    }\n\n    set customerID(value: string) {\n        if (this._customerID !== value) {\n            this._customerID = value;\n            this.setEquality('CustomerID', value);\n            this.refresh();\n            this.updateInterface();\n        }\n    }\n}\n", "import { OrderColumns, OrderListRequest, OrderRow, OrderService, ProductRow } from \"../ServerTypes/Demo\";\nimport { Decorators, EntityGrid, EnumEditor, Fluent, LookupEditor, ToolButton, faIcon, toId } from \"@serenity-is/corelib\";\nimport { ExcelExportHelper, PdfExportHelper, ReportHelper } from \"@serenity-is/extensions\";\nimport { OrderDialog } from \"./OrderDialog\";\n\nconst fld = OrderRow.Fields;\n\n@Decorators.registerClass('Serenity.Demo.Northwind.OrderGrid')\n@Decorators.filterable()\nexport class OrderGrid<P={}> extends EntityGrid<OrderRow, P> {\n    protected getColumnsKey() { return OrderColumns.columnsKey; }\n    protected getDialogType() { return <any>OrderDialog; }\n    protected getRowDefinition() { return OrderRow; }\n    protected getService() { return OrderService.baseUrl; }\n\n    protected shippingStateFilter: EnumEditor;\n\n    protected getQuickFilters() {\n        var filters = super.getQuickFilters();\n\n        filters.push({\n            type: LookupEditor,\n            options: {\n                lookupKey: ProductRow.lookupKey,\n                async: true\n            },\n            field: 'ProductID',\n            title: 'Contains Product in Details',\n            handler: w => {\n                (this.view.params as OrderListRequest).ProductID = toId(w.value);\n            },\n            cssClass: 'hidden-xs'\n        });\n\n        return filters;\n    }\n\n    protected createQuickFilters() {\n        super.createQuickFilters();\n\n        this.shippingStateFilter = this.findQuickFilter(EnumEditor, fld.ShippingState);\n    }\n\n    protected getButtons(): ToolButton[] {\n        var buttons = super.getButtons();\n\n        buttons.push(ExcelExportHelper.createToolButton({\n            grid: this,\n            service: OrderService.baseUrl + '/ListExcel',\n            onViewSubmit: () => this.onViewSubmit(),\n            separator: true\n        }));\n\n        buttons.push(PdfExportHelper.createToolButton({\n            grid: this,\n            onViewSubmit: () => this.onViewSubmit()\n        }));\n\n        return buttons;\n    }\n\n    protected getColumns() {\n        var columns = super.getColumns();\n\n        columns.splice(1, 0, {\n            id: 'Print Invoice',\n            field: null,\n            name: '',\n            cssClass: 'align-center',\n            format: _ => `<a class=\"inline-action\" data-action=\"print-invoice\" title=\"invoice\"><i class=\"${faIcon(\"file-pdf\", \"red\")}\"></i></a>`,\n            width: 36,\n            minWidth: 36,\n            maxWidth: 36\n        });\n\n        return columns;\n    }\n\n    protected onClick(e: Event, row: number, cell: number) {\n        super.onClick(e, row, cell);\n\n        if (Fluent.isDefaultPrevented(e))\n            return;\n\n        var item = this.itemAt(row);\n        let action = (e.target as HTMLElement)?.closest(\".inline-action\")?.getAttribute(\"data-action\");\n        if (action) {\n            e.preventDefault();\n            if (action == \"print-invoice\") {\n                ReportHelper.execute({\n                    reportKey: 'Northwind.OrderDetail',\n                    params: {\n                        OrderID: item.OrderID\n                    }\n                });\n            }\n        }\n    }\n\n    public set_shippingState(value: number): void {\n        this.shippingStateFilter.value = value == null ? '' : value.toString();\n    }\n\n    protected addButtonClick() {\n        var eq = this.view.params.EqualityFilter;\n        this.editItem(<OrderRow>{\n            CustomerID: eq ? eq.CustomerID : null\n        });\n    }\n}\n", "import { OrderForm, OrderRow, OrderService } from \"../ServerTypes/Demo\";\nimport { Decorators, EntityDialog } from \"@serenity-is/corelib\";\nimport { ReportHelper } from \"@serenity-is/extensions\";\n\n@Decorators.registerClass('Serenity.Demo.Northwind.OrderDialog')\nexport class OrderDialog<P = {}> extends EntityDialog<OrderRow, P> {\n    protected getFormKey() { return OrderForm.formKey; }\n    protected getRowDefinition() { return OrderRow; }\n    protected getService() { return OrderService.baseUrl; }\n\n    protected form = new OrderForm(this.idPrefix);\n\n    getToolbarButtons() {\n        var buttons = super.getToolbarButtons();\n\n        buttons.push(ReportHelper.createToolButton({\n            title: 'Invoice',\n            cssClass: 'export-pdf-button',\n            reportKey: 'Northwind.OrderDetail',\n            getParams: () => ({\n                OrderID: this.entityId\n            })\n        }));\n\n        return buttons;\n    }\n\n    protected updateInterface() {\n        super.updateInterface();\n\n        this.toolbar.findButton('export-pdf-button').toggle(this.isEditMode());\n    }\n}", "import { Decorators, EditorUtils } from \"@serenity-is/corelib\";\nimport { OrderDialog } from \"../Order/OrderDialog\";\n\n@Decorators.registerClass('Serenity.Demo.Northwind.CustomerOrderDialog')\nexport class CustomerOrderDialog extends OrderDialog {\n\n    updateInterface() {\n        super.updateInterface();\n\n        EditorUtils.setReadOnly(this.form.CustomerID, true);\n    }\n}\n", "import { Decorators, EntityGrid } from \"@serenity-is/corelib\";\nimport { CustomerColumns, CustomerRow, CustomerService } from \"../ServerTypes/Demo\";\nimport { CustomerDialog } from \"./CustomerDialog\";\n\n@Decorators.registerClass('Serenity.Demo.Norhtwind.CustomerGrid')\n@Decorators.filterable()\nexport class CustomerGrid<P={}> extends EntityGrid<CustomerRow, P> {\n    protected getColumnsKey() { return CustomerColumns.columnsKey; }\n    protected getDialogType() { return <any>CustomerDialog; }\n    protected getRowDefinition() { return CustomerRow; }\n    protected getService() { return CustomerService.baseUrl; }\n}\n", "import { Decorators, EntityDialog } from \"@serenity-is/corelib\";\nimport { ProductForm, ProductRow, ProductService } from \"../ServerTypes/Demo\";\n\n@Decorators.registerClass()\n@Decorators.maximizable()\nexport class ProductDialog<P = {}> extends EntityDialog<ProductRow, P> {\n    protected getFormKey() { return ProductForm.formKey; }\n    protected getRowDefinition() { return ProductRow; }\n    protected getService() { return ProductService.baseUrl; }\n\n    protected form = new ProductForm(this.idPrefix);\n}\n", "import { Decorators, Dictionary, EntityGrid, Lookup, LookupEditor, WidgetProps, deepClone, formatNumber, htmlEncode, localText, notifyError, parseDecimal, parseInteger, parseQueryString, serviceRequest, toId } from \"@serenity-is/corelib\";\nimport { ExcelExportHelper, PdfExportHelper } from \"@serenity-is/extensions\";\nimport { Column, FormatterContext, NonDataRow } from \"@serenity-is/sleekgrid\";\nimport { CategoryRow, ProductColumns, ProductRow, ProductService, SupplierRow } from \"../ServerTypes/Demo\";\nimport { ProductDialog } from \"./ProductDialog\";\n\nconst fld = ProductRow.Fields;\n\n@Decorators.registerClass()\n@Decorators.filterable()\nexport class ProductGrid<P = {}> extends EntityGrid<ProductRow, P> {\n    protected getColumnsKey() { return ProductColumns.columnsKey; }\n    protected getDialogType() { return <any>ProductDialog; }\n    protected getRowDefinition() { return ProductRow; }\n    protected getService() { return ProductService.baseUrl; }\n\n    private pendingChanges: Dictionary<any> = {};\n\n    constructor(props: WidgetProps<P>) {\n        super(props);\n        this.slickContainer.on('change', 'input.edit, textarea.edit, select.edit', (e) => this.inputsChange(e as any));\n    }\n\n    protected getButtons() {\n        var buttons = super.getButtons();\n\n        buttons.push(ExcelExportHelper.createToolButton({\n            grid: this,\n            service: ProductService.baseUrl + '/ListExcel',\n            onViewSubmit: () => this.onViewSubmit(),\n            separator: true\n        }));\n\n        buttons.push(PdfExportHelper.createToolButton({\n            grid: this,\n            onViewSubmit: () => this.onViewSubmit(),\n            reportTitle: 'Product List',\n            columnTitles: {\n                'Discontinued': 'Dis.',\n            },\n            tableOptions: {\n                columnStyles: {\n                    ProductID: {\n                        cellWidth: 25,\n                        halign: 'right'\n                    },\n                    Discountinued: {\n                        cellWidth: 25\n                    }\n                }\n            }\n        }));\n\n        buttons.push({\n            title: 'Save Changes',\n            cssClass: 'apply-changes-button disabled',\n            onClick: e => this.saveClick(),\n            separator: true\n        });\n\n        return buttons;\n    }\n\n    protected onViewProcessData(response) {\n        this.pendingChanges = {};\n        this.setSaveButtonState();\n        return super.onViewProcessData(response);\n    }\n\n    // PLEASE NOTE! Inline editing in grids is not something Serenity supports nor recommends.\n    // SlickGrid has some set of limitations, UI is very hard to use on some devices like mobile, \n    // custom widgets and validations are not possible, and as a bonus the code can become a mess.\n    // \n    // This was just a sample how-to after much requests, and is not supported. \n    // This is all we can offer, please don't ask us to Guide you...\n\n    /**\n     * It would be nice if we could use autonumeric, Serenity editors etc. here, to control input validation,\n     * but it's not supported by SlickGrid as we are only allowed to return a string, and should attach\n     * no event handlers to rendered cell contents\n     */\n    private numericInputFormatter(ctx) {\n        if ((ctx.item as NonDataRow).__nonDataRow)\n            return htmlEncode(formatNumber(ctx.value, '#0.##'));\n\n        var klass = 'edit numeric';\n        var item = ctx.item as ProductRow;\n        var pending = this.pendingChanges[item.ProductID];\n\n        if (pending && pending[ctx.column.field] !== undefined) {\n            klass += ' dirty';\n        }\n\n        var value = this.getEffectiveValue(item, ctx.column.field) as number;\n\n        return \"<input type='text' class='\" + klass +\n            \"' data-field='\" + ctx.column.field +\n            \"' value='\" + formatNumber(value, '0.##') + \"'/>\";\n    }\n\n    private stringInputFormatter(ctx) {\n        if ((ctx.item as NonDataRow).__nonDataRow)\n            return htmlEncode(ctx.value);\n\n        var klass = 'edit string';\n        var item = ctx.item as ProductRow;\n        var pending = this.pendingChanges[item.ProductID];\n        var column = ctx.column as Column;\n\n        if (pending && pending[column.field] !== undefined) {\n            klass += ' dirty';\n        }\n\n        var value = this.getEffectiveValue(item, column.field) as string;\n\n        return \"<input type='text' class='\" + klass +\n            \"' data-field='\" + column.field +\n            \"' value='\" + htmlEncode(value) +\n            \"' maxlength='\" + column.sourceItem.maxLength + \"'/>\";\n    }\n\n    /**\n     * Sorry but you cannot use LookupEditor, e.g. Select2 here, only possible is a SELECT element\n     */\n    private selectFormatter(ctx: FormatterContext, idField: string, lookup: Lookup<any>) {\n        if ((ctx.item as NonDataRow).__nonDataRow)\n            return htmlEncode(ctx.value);\n\n        var klass = 'edit';\n        var item = ctx.item as ProductRow;\n        var pending = this.pendingChanges[item.ProductID];\n        var column = ctx.column as Column;\n\n        if (pending && pending[idField] !== undefined) {\n            klass += ' dirty';\n        }\n\n        var value = this.getEffectiveValue(item, idField);\n        var markup = \"<select class='\" + klass +\n            \"' data-field='\" + idField +\n            \"' style='width: 100%; max-width: 100%'>\" +\n            \"<option value=''>--</option>\";\n        for (var c of lookup.items) {\n            let id = c[lookup.idField];\n            markup += \"<option value='\" + htmlEncode(id) + \"'\"\n            if (id == value) {\n                markup += \" selected\";\n            }\n            markup += \">\" + htmlEncode(c[lookup.textField]) + \"</option>\";\n        }\n        return markup + \"</select>\";\n    }\n\n    private getEffectiveValue(item, field): any {\n        var pending = this.pendingChanges[item.ProductID];\n        if (pending && pending[field] !== undefined) {\n            return pending[field];\n        }\n\n        return item[field];\n    }\n\n    protected getColumns() {\n        var columns = new ProductColumns(super.getColumns());\n        var num = (ctx: FormatterContext<ProductRow>) => this.numericInputFormatter(ctx);\n        var str = (ctx: FormatterContext<ProductRow>) => this.stringInputFormatter(ctx);\n\n        columns.QuantityPerUnit && (columns.QuantityPerUnit.format = str);\n        columns.CategoryName && (columns.CategoryName.referencedFields = [fld.CategoryID]) &&\n            (columns.CategoryName.format = ctx => this.selectFormatter(ctx, fld.CategoryID, CategoryRow.getLookup()));\n\n        columns.SupplierCompanyName && (columns.SupplierCompanyName.referencedFields = [fld.SupplierID]) &&\n            (columns.SupplierCompanyName.format = ctx => this.selectFormatter(ctx, fld.SupplierID, SupplierRow.getLookup()));\n\n        columns.UnitPrice && (columns.UnitPrice.format = num);\n        columns.UnitsInStock && (columns.UnitsInStock.format = num);\n        columns.UnitsOnOrder && (columns.UnitsOnOrder.format = num);\n        columns.ReorderLevel && (columns.ReorderLevel.format = num);\n\n        return columns.valueOf();\n    }\n\n    private inputsChange(e: Event) {\n        var cell = this.slickGrid.getCellFromEvent(e);\n        var item = this.itemAt(cell.row);\n        var input = e.target as (HTMLInputElement | HTMLSelectElement);\n        var field = input.getAttribute('data-field');\n        var txt = input.value?.trim() || null;\n        var pending = this.pendingChanges[item.ProductID];\n\n        var effective = this.getEffectiveValue(item, field);\n        var oldText: string;\n        if (input.classList.contains(\"numeric\"))\n            oldText = formatNumber(effective, '0.##');\n        else\n            oldText = effective as string;\n\n        var value: any;\n        if (field === 'UnitPrice') {\n            value = parseDecimal(txt ?? '');\n            if (value == null || isNaN(value)) {\n                notifyError(localText('Validation.Decimal'), '', null);\n                input.value = oldText;\n                input.focus();\n                return;\n            }\n        }\n        else if (input.classList.contains(\"numeric\")) {\n            var i = parseInteger(txt ?? '');\n            if (isNaN(i) || i > 32767 || i < 0) {\n                notifyError(localText('Validation.Integer'), '', null);\n                input.value = oldText;\n                input.focus();\n                return;\n            }\n            value = i;\n        }\n        else if (input.tagName === 'SELECT')\n            value = toId(input.value);\n        else\n            value = txt;\n\n        if (!pending) {\n            this.pendingChanges[item.ProductID] = pending = {};\n        }\n\n        pending[field] = value;\n        item[field] = value;\n        this.view.refresh();\n\n        if (input.classList.contains(\"numeric\"))\n            value = formatNumber(value, '0.##');\n\n        input.value = value;\n        input.classList.add('dirty');\n\n        this.setSaveButtonState();\n    }\n\n    private setSaveButtonState() {\n        this.toolbar.findButton('apply-changes-button').toggleClass('disabled',\n            Object.keys(this.pendingChanges).length === 0);\n    }\n\n    private saveClick() {\n        if (Object.keys(this.pendingChanges).length === 0) {\n            return;\n        }\n\n        // this calls save service for all modified rows, one by one\n        // you could write a batch update service\n        var keys = Object.keys(this.pendingChanges);\n        var current = -1;\n        var self = this;\n\n        (function saveNext() {\n            if (++current >= keys.length) {\n                self.refresh();\n                return;\n            }\n\n            var key = keys[current];\n            var entity = deepClone(self.pendingChanges[key]);\n            entity.ProductID = key;\n            serviceRequest(ProductService.Methods.Update, {\n                EntityId: key,\n                Entity: entity\n            }, (response) => {\n                delete self.pendingChanges[key];\n                saveNext();\n            });\n        })();\n    }\n\n    protected getQuickFilters() {\n        var flt = super.getQuickFilters();\n\n        var q = parseQueryString();\n        if (q[\"cat\"]) {\n            var category = flt.find(x => x.field == ProductRow.Fields.CategoryID);\n            category && (category.init = e => {\n                e.element.getWidget(LookupEditor).value = q[\"cat\"];\n            });\n        }\n\n        return flt;\n    }\n\n}\n", "import { Decorators, EntityDialog } from \"@serenity-is/corelib\";\nimport { RegionForm, RegionRow, RegionService } from \"../ServerTypes/Demo\";\n\n@Decorators.registerClass('Serenity.Demo.Northwind.RegionDialog')\nexport class RegionDialog<P = {}> extends EntityDialog<RegionRow, P> {\n    protected getFormKey() { return RegionForm.formKey; }\n    protected getRowDefinition() { return RegionRow; }\n    protected getService() { return RegionService.baseUrl; }\n\n    protected form = new RegionForm(this.idPrefix);\n}\n", "import { Decorators, EntityGrid } from \"@serenity-is/corelib\";\nimport { RegionColumns, RegionRow, RegionService } from \"../ServerTypes/Demo\";\nimport { RegionDialog } from \"./RegionDialog\";\n\n@Decorators.registerClass('Serenity.Demo.Northwind.RegionGrid')\nexport class RegionGrid<P = {}> extends EntityGrid<RegionRow, P> {\n    protected getColumnsKey() { return RegionColumns.columnsKey; }\n    protected getDialogType() { return <any>RegionDialog; }\n    protected getRowDefinition() { return RegionRow; }\n    protected getService() { return RegionService.baseUrl; }\n}\n", "import { Decorators, EntityDialog } from \"@serenity-is/corelib\";\nimport { ShipperForm, ShipperRow, ShipperService } from \"../ServerTypes/Demo\";\n\n@Decorators.registerClass()\nexport class ShipperDialog<P = {}> extends EntityDialog<ShipperRow, P> {\n    protected getFormKey() { return ShipperForm.formKey; }\n    protected getRowDefinition() { return ShipperRow; }\n    protected getService() { return ShipperService.baseUrl; }\n\n    protected form = new ShipperForm(this.idPrefix);\n}", "import { Decorators, EntityGrid } from \"@serenity-is/corelib\";\nimport { ShipperColumns, ShipperRow, ShipperService } from \"../ServerTypes/Demo\";\nimport { ShipperDialog } from \"./ShipperDialog\";\n\n@Decorators.registerClass()\nexport class ShipperGrid<P = {}> extends EntityGrid<ShipperRow, P> {\n    protected getColumnsKey() { return ShipperColumns.columnsKey; }\n    protected getDialogType() { return <any>ShipperDialog; }\n    protected getRowDefinition() { return ShipperRow; }\n    protected getService() { return ShipperService.baseUrl; }\n}\n", "import { Decorators, EntityGrid } from \"@serenity-is/corelib\";\nimport { SupplierColumns, SupplierRow, SupplierService } from \"../ServerTypes/Demo\";\nimport { SupplierDialog } from \"./SupplierDialog\";\n\n@Decorators.registerClass('Serenity.Demo.Northwind.SupplierGrid')\nexport class SupplierGrid<P = {}> extends EntityGrid<SupplierRow, P> {\n    protected getColumnsKey() { return SupplierColumns.columnsKey; }\n    protected getDialogType() { return <any>SupplierDialog; }\n    protected getRowDefinition() { return SupplierRow; }\n    protected getService() { return SupplierService.baseUrl; }\n}\n", "import { Decorators, EntityDialog } from \"@serenity-is/corelib\";\nimport { TerritoryForm, TerritoryRow, TerritoryService } from \"../ServerTypes/Demo\";\n\n@Decorators.registerClass('Serenity.Demo.Northwind.TerritoryDialog')\nexport class TerritoryDialog<P = {}> extends EntityDialog<TerritoryRow, P> {\n    protected getFormKey() { return TerritoryForm.formKey; }\n    protected getRowDefinition() { return TerritoryRow; }\n    protected getService() { return TerritoryService.baseUrl; }\n\n    protected form = new TerritoryForm(this.idPrefix);\n}\n", "import { Decorators, EntityGrid } from \"@serenity-is/corelib\";\nimport { TerritoryColumns, TerritoryRow, TerritoryService } from \"../ServerTypes/Demo\";\nimport { TerritoryDialog } from \"./TerritoryDialog\";\n\n@Decorators.registerClass('Serenity.Demo.Northwind.TerritoryGrid')\nexport class TerritoryGrid<P = {}> extends EntityGrid<TerritoryRow, P> {\n    protected getColumnsKey() { return TerritoryColumns.columnsKey; }\n    protected getDialogType() { return <any>TerritoryDialog; }\n    protected getRowDefinition() { return TerritoryRow; }\n    protected getService() { return TerritoryService.baseUrl; }\n}\n"],
  "mappings": "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C,GAAG,EAGzB,GAAI,OAAOD,EAAKL,OAAU,WACxB,OAAOnD,EAAQwD,EAAKL,KAAK,CAE7B,CAEAH,EAAShE,EAAegE,CAAM,CAChC,CAEA,SAASU,GAAgB,CACvB,OAAO,IACT,CAFSA,OAAAA,EAAAA,EAAAA,iBAIFA,CACT,CAtBSJ,EAAAA,GAAAA,gBCpKF,IAAMK,GAAOxE,EAAO,CACzB,IACA,OACA,UACA,UACA,OACA,UACA,QACA,QACA,IACA,MACA,MACA,MACA,QACA,aACA,OACA,KACA,SACA,SACA,UACA,SACA,OACA,OACA,MACA,WACA,UACA,OACA,WACA,KACA,YACA,MACA,UACA,MACA,SACA,MACA,MACA,KACA,KACA,UACA,KACA,WACA,aACA,SACA,OACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,MACA,QACA,MACA,MACA,QACA,SACA,KACA,OACA,MACA,OACA,UACA,OACA,WACA,QACA,MACA,OACA,KACA,WACA,SACA,SACA,IACA,UACA,MACA,WACA,IACA,KACA,KACA,OACA,IACA,OACA,UACA,SACA,SACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,WACA,QACA,KACA,QACA,OACA,KACA,QACA,KACA,IACA,KACA,MACA,QACA,KAAK,CACN,EAGYyE,GAAMzE,EAAO,CACxB,MACA,IACA,WACA,cACA,eACA,eACA,gBACA,mBACA,SACA,WACA,OACA,OACA,UACA,SACA,OACA,IACA,QACA,WACA,QACA,QACA,OACA,iBACA,SACA,OACA,WACA,QACA,OACA,UACA,UACA,WACA,iBACA,OACA,OACA,QACA,SACA,SACA,OACA,WACA,QACA,OACA,QACA,OACA,OAAO,CACR,EAEY0E,GAAa1E,EAAO,CAC/B,UACA,gBACA,sBACA,cACA,mBACA,oBACA,oBACA,iBACA,eACA,UACA,UACA,UACA,UACA,UACA,iBACA,UACA,UACA,cACA,eACA,WACA,eACA,qBACA,cACA,SACA,cAAc,CACf,EAMY2E,GAAgB3E,EAAO,CAClC,UACA,gBACA,SACA,UACA,YACA,mBACA,iBACA,gBACA,gBACA,gBACA,QACA,YACA,OACA,eACA,YACA,UACA,gBACA,SACA,MACA,aACA,UACA,KAAK,CACN,EAEY4E,GAAS5E,EAAO,CAC3B,OACA,WACA,SACA,UACA,QACA,SACA,KACA,aACA,gBACA,KACA,KACA,QACA,UACA,WACA,QACA,OACA,KACA,SACA,QACA,SACA,OACA,OACA,UACA,SACA,MACA,QACA,MACA,SACA,aACA,aAAa,CACd,EAIY6E,GAAmB7E,EAAO,CACrC,UACA,cACA,aACA,WACA,YACA,UACA,UACA,SACA,SACA,QACA,YACA,aACA,iBACA,cACA,MAAM,CACP,EAEY8E,GAAO9E,EAAO,CAAC,OAAO,CAAC,ECrRvBwE,GAAOxE,EAAO,CACzB,SACA,SACA,QACA,MACA,iBACA,eACA,uBACA,WACA,aACA,UACA,SACA,UACA,cACA,cACA,UACA,OACA,QACA,QACA,QACA,OACA,UACA,WACA,eACA,SACA,cACA,WACA,WACA,UACA,MACA,WACA,0BACA,wBACA,WACA,YACA,UACA,eACA,OACA,MACA,UACA,SACA,SACA,OACA,OACA,WACA,KACA,YACA,YACA,QACA,OACA,QACA,OACA,OACA,UACA,OACA,MACA,MACA,YACA,QACA,SACA,MACA,YACA,WACA,QACA,OACA,QACA,UACA,aACA,SACA,OACA,UACA,UACA,cACA,cACA,SACA,UACA,UACA,aACA,WACA,MACA,WACA,MACA,WACA,OACA,OACA,UACA,aACA,QACA,WACA,QACA,OACA,QACA,OACA,UACA,QACA,MACA,SACA,OACA,QACA,UACA,WACA,QACA,YACA,OACA,SACA,SACA,QACA,QACA,QACA,MAAM,CACP,EAEYyE,GAAMzE,EAAO,CACxB,gBACA,aACA,WACA,qBACA,SACA,gBACA,gBACA,UACA,gBACA,iBACA,QACA,OACA,KACA,QACA,OACA,gBACA,YACA,YACA,QACA,sBACA,8BACA,gBACA,kBACA,KACA,KACA,IACA,KACA,KACA,kBACA,YACA,UACA,UACA,MACA,WACA,YACA,MACA,OACA,eACA,YACA,SACA,cACA,cACA,gBACA,cACA,YACA,mBACA,eACA,aACA,eACA,cACA,KACA,KACA,KACA,KACA,aACA,WACA,gBACA,oBACA,SACA,OACA,KACA,kBACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,UACA,YACA,aACA,WACA,OACA,eACA,iBACA,eACA,mBACA,iBACA,QACA,aACA,aACA,eACA,eACA,cACA,cACA,mBACA,YACA,MACA,OACA,QACA,SACA,OACA,MACA,OACA,aACA,SACA,WACA,UACA,QACA,SACA,cACA,SACA,WACA,cACA,OACA,aACA,sBACA,mBACA,eACA,SACA,gBACA,sBACA,iBACA,IACA,KACA,KACA,SACA,OACA,OACA,cACA,YACA,UACA,SACA,SACA,QACA,OACA,kBACA,mBACA,mBACA,eACA,cACA,eACA,cACA,aACA,eACA,mBACA,oBACA,iBACA,kBACA,oBACA,iBACA,SACA,eACA,QACA,eACA,iBACA,WACA,UACA,UACA,YACA,mBACA,cACA,kBACA,iBACA,aACA,OACA,KACA,KACA,UACA,SACA,UACA,aACA,UACA,aACA,gBACA,gBACA,QACA,eACA,OACA,eACA,mBACA,mBACA,IACA,KACA,KACA,QACA,IACA,KACA,KACA,IACA,YAAY,CACb,EAEY4E,GAAS5E,EAAO,CAC3B,SACA,cACA,QACA,WACA,QACA,eACA,cACA,aACA,aACA,QACA,MACA,UACA,eACA,WACA,QACA,QACA,SACA,OACA,KACA,UACA,SACA,gBACA,SACA,SACA,iBACA,YACA,WACA,cACA,UACA,UACA,gBACA,WACA,WACA,OACA,WACA,WACA,aACA,UACA,SACA,SACA,cACA,gBACA,uBACA,YACA,YACA,aACA,WACA,iBACA,iBACA,YACA,UACA,QACA,OAAO,CACR,EAEY+E,GAAM/E,EAAO,CACxB,aACA,SACA,cACA,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",
  "names": ["entries", "setPrototypeOf", "isFrozen", "getPrototypeOf", "getOwnPropertyDescriptor", "Object", "freeze", "seal", "create", "apply", "construct", "Reflect", "__name", "x", "fun", "thisValue", "args", "Func", "arrayForEach", "unapply", "Array", "prototype", "forEach", "arrayPop", "pop", "arrayPush", "push", "stringToLowerCase", "String", "toLowerCase", "stringToString", "toString", "stringMatch", "match", "stringReplace", "replace", "stringIndexOf", "indexOf", "stringTrim", "trim", "objectHasOwnProperty", "hasOwnProperty", "regExpTest", "RegExp", "test", "typeErrorCreate", "unconstruct", "TypeError", "func", "thisArg", "_len", "arguments", "length", "_key", "_len2", "_key2", "addToSet", "set", "array", "transformCaseFunc", "undefined", "l", "element", "lcElement", "cleanArray", "index", "clone", "object", "newObject", "property", "value", "isArray", "constructor", "lookupGetter", "prop", "desc", "get", "fallbackValue", "html", "svg", "svgFilters", "svgDisallowed", "mathMl", "mathMlDisallowed", "text", "xml", "MUSTACHE_EXPR", "ERB_EXPR", "TMPLIT_EXPR", "DATA_ATTR", "ARIA_ATTR", "IS_ALLOWED_URI", "IS_SCRIPT_OR_DATA", "ATTR_WHITESPACE", "DOCTYPE_NAME", "CUSTOM_ELEMENT", "getGlobal", "window", "_createTrustedTypesPolicy", "trustedTypes", "purifyHostElement", "createPolicy", "suffix", "ATTR_NAME", "hasAttribute", "getAttribute", "policyName", "createHTML", "createScriptURL", "scriptUrl", "_", "console", "warn", "createDOMPurify", "DOMPurify", "root", "version", "VERSION", "removed", "document", "nodeType", "isSupported", "originalDocument", "currentScript", "DocumentFragment", "HTMLTemplateElement", "Node", "Element", "NodeFilter", "NamedNodeMap", "MozNamedAttrMap", "HTMLFormElement", "DOMParser", "ElementPrototype", "cloneNode", "getNextSibling", "getChildNodes", "getParentNode", "template", "createElement", "content", "ownerDocument", "trustedTypesPolicy", "emptyHTML", "implementation", "createNodeIterator", "createDocumentFragment", "getElementsByTagName", "importNode", "hooks", "createHTMLDocument", "EXPRESSIONS", "ALLOWED_TAGS", "DEFAULT_ALLOWED_TAGS", "TAGS", "ALLOWED_ATTR", "DEFAULT_ALLOWED_ATTR", "ATTRS", "CUSTOM_ELEMENT_HANDLING", "tagNameCheck", "writable", "configurable", "enumerable", "attributeNameCheck", "allowCustomizedBuiltInElements", "FORBID_TAGS", "FORBID_ATTR", "ALLOW_ARIA_ATTR", "ALLOW_DATA_ATTR", "ALLOW_UNKNOWN_PROTOCOLS", "ALLOW_SELF_CLOSE_IN_ATTR", "SAFE_FOR_TEMPLATES", "WHOLE_DOCUMENT", "SET_CONFIG", "FORCE_BODY", "RETURN_DOM", "RETURN_DOM_FRAGMENT", "RETURN_TRUSTED_TYPE", "SANITIZE_DOM", "SANITIZE_NAMED_PROPS", "SANITIZE_NAMED_PROPS_PREFIX", "KEEP_CONTENT", "IN_PLACE", "USE_PROFILES", "FORBID_CONTENTS", "DEFAULT_FORBID_CONTENTS", "DATA_URI_TAGS", "DEFAULT_DATA_URI_TAGS", "URI_SAFE_ATTRIBUTES", "DEFAULT_URI_SAFE_ATTRIBUTES", "MATHML_NAMESPACE", "SVG_NAMESPACE", "HTML_NAMESPACE", "NAMESPACE", "IS_EMPTY_INPUT", "ALLOWED_NAMESPACES", "DEFAULT_ALLOWED_NAMESPACES", "PARSER_MEDIA_TYPE", "SUPPORTED_PARSER_MEDIA_TYPES", "DEFAULT_PARSER_MEDIA_TYPE", "CONFIG", "formElement", "isRegexOrFunction", "testValue", "Function", "_parseConfig", "cfg", "ADD_URI_SAFE_ATTR", "ADD_DATA_URI_TAGS", "ALLOWED_URI_REGEXP", "ADD_TAGS", "ADD_ATTR", "table", "tbody", "TRUSTED_TYPES_POLICY", "MATHML_TEXT_INTEGRATION_POINTS", "HTML_INTEGRATION_POINTS", "COMMON_SVG_AND_HTML_ELEMENTS", "ALL_SVG_TAGS", "ALL_MATHML_TAGS", "_checkValidNamespace", "parent", "tagName", "namespaceURI", "parentTagName", "Boolean", "_forceRemove", "node", "parentNode", "removeChild", "remove", "_removeAttribute", "name", "attribute", "getAttributeNode", "from", "removeAttribute", "setAttribute", "_initDocument", "dirty", "doc", "leadingWhitespace", "matches", "dirtyPayload", "parseFromString", "documentElement", "createDocument", "innerHTML", "body", "insertBefore", "createTextNode", "childNodes", "call", "_createNodeIterator", "SHOW_ELEMENT", "SHOW_COMMENT", "SHOW_TEXT", "SHOW_PROCESSING_INSTRUCTION", "SHOW_CDATA_SECTION", "_isClobbered", "elm", "nodeName", "textContent", "attributes", "hasChildNodes", "_isNode", "_executeHook", "entryPoint", "currentNode", "data", "hook", "_sanitizeElements", "allowedTags", "firstElementChild", "_isBasicCustomElement", "childCount", "i", "expr", "_isValidAttribute", "lcTag", "lcName", "_sanitizeAttributes", "hookEvent", "attrName", "attrValue", "keepAttr", "allowedAttributes", "attr", "forceKeepAttr", "getAttributeType", "setAttributeNS", "_sanitizeShadowDOM", "fragment", "shadowNode", "shadowIterator", "nextNode", "sanitize", "importedNode", "returnNode", "appendChild", "firstChild", "nodeIterator", "shadowroot", "shadowrootmode", "serializedHTML", "outerHTML", "doctype", "setConfig", "clearConfig", "isValidAttribute", "tag", "addHook", "hookFunction", "removeHook", "removeHooks", "removeAllHooks", "purify", "ColumnsBase", "fieldsProxy", "_CategoryColumns", "ColumnsBase", "__name", "fieldsProxy", "CategoryColumns", "StringEditor", "PrefixedContext", "initFormType", "_CategoryForm", "PrefixedContext", "prefix", "w0", "StringEditor", "initFormType", "__name", "CategoryForm", "fieldsProxy", "_CategoryLangRow", "__name", "fieldsProxy", "CategoryLangRow", "serviceRequest", "CategoryLangService", "x", "r", "s", "o", "getLookup", "getLookupAsync", "fieldsProxy", "_CategoryRow", "getLookup", "getLookupAsync", "__name", "fieldsProxy", "CategoryRow", "serviceRequest", "CategoryService", "x", "r", "s", "o", "ColumnsBase", "fieldsProxy", "Decorators", "faIcon", "lookup", "promise", "_EmployeeListFormatter_decorators", "_init", "Decorators", "_EmployeeListFormatter", "ctx", "idList", "byId", "x", "z", "EmployeeRow", "l", "_a", "faIcon", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "EmployeeListFormatter", "_CustomerColumns", "ColumnsBase", "__name", "fieldsProxy", "CustomerColumns", "fieldsProxy", "_CustomerCustomerDemoRow", "__name", "fieldsProxy", "CustomerCustomerDemoRow", "fieldsProxy", "_CustomerDemographicRow", "__name", "fieldsProxy", "CustomerDemographicRow", "fieldsProxy", "_CustomerDetailsRow", "__name", "fieldsProxy", "CustomerDetailsRow", "StringEditor", "LookupEditor", "DateEditor", "EmailAddressEditor", "BooleanEditor", "PrefixedContext", "initFormType", "DOMPurify", "Authorization", "Decorators", "EditorWidget", "IGetEditValue", "ISetEditValue", "Toolbar", "confirmDialog", "formatDate", "formatISODateTimeUTC", "insert", "Decorators", "BaseDialog", "HtmlNoteContentEditor", "cancelDialogButton", "okDialogButton", "keys", "isBoolean", "val", "__name", "isElement", "isString", "isNumber", "isObject", "isFunction", "isComponentClass", "Component", "prototype", "isArrayLike", "obj", "forEach", "value", "fn", "key", "keys", "isRef", "maybeRef", "isObject", "__name", "jsxDomType", "JsxDomType", "isShadowRoot", "el", "jsxDomType", "JsxDomType", "__name", "isVisibleChild", "value", "isBoolean", "__name", "className", "isObject", "keys", "k", "Fragment", "attr", "fragment", "appendChild", "__name", "_Component", "props", "Component", "initComponentClass", "Class", "children", "__spreadProps", "__spreadValues", "instance", "node", "attachRef", "jsx", "tag", "_ref", "_a", "__objRest", "isString", "attributes", "values", "value", "option", "isFunction", "isObject", "isComponentClass", "attachRef", "ref", "node", "isRef", "isFunction", "__name", "appendChild", "child", "isArrayLike", "appendChildren", "isString", "isNumber", "appendChildToNode", "isElement", "isShadowRoot", "shadowRoot", "children", "style", "value", "v", "isObject", "forEach", "val", "key", "attribute", "attr", "dataValue", "dataKey", "isVisibleChild", "className", "eventHandler", "eventName", "useCapture", "attributes", "keys", "_NoteDialog_decorators", "_init", "_a", "Decorators", "_NoteDialog", "BaseDialog", "id", "jsx", "el", "HtmlNoteContentEditor", "okDialogButton", "__name", "e", "cancelDialogButton", "value", "__decoratorStart", "__decorateElement", "__runInitializers", "NoteDialog", "_NotesEditor_decorators", "_init", "_a", "Decorators", "IGetEditValue", "ISetEditValue", "_NotesEditor", "EditorWidget", "id", "jsx", "Toolbar", "__name", "el", "Fragment", "item", "index", "formatDate", "dlg", "NoteDialog", "text", "insert", "Authorization", "formatISODateTimeUTC", "e", "old", "confirmDialog", "value", "prop", "target", "source", "__decoratorStart", "__decorateElement", "__runInitializers", "NotesEditor", "_CustomerForm", "PrefixedContext", "prefix", "w0", "StringEditor", "w1", "LookupEditor", "w2", "NotesEditor", "w3", "DateEditor", "w4", "EmailAddressEditor", "w5", "BooleanEditor", "initFormType", "__name", "CustomerForm", "fieldsProxy", "_CustomerGrossSalesRow", "__name", "fieldsProxy", "CustomerGrossSalesRow", "fieldsProxy", "_CustomerRepresentativesRow", "__name", "fieldsProxy", "CustomerRepresentativesRow", "getLookup", "getLookupAsync", "fieldsProxy", "_CustomerRow", "getLookup", "getLookupAsync", "__name", "fieldsProxy", "CustomerRow", "serviceRequest", "CustomerService", "x", "r", "s", "o", "getLookup", "getLookupAsync", "fieldsProxy", "_EmployeeRow", "getLookup", "getLookupAsync", "__name", "fieldsProxy", "EmployeeRow", "fieldsProxy", "_EmployeeTerritoryRow", "__name", "fieldsProxy", "EmployeeTerritoryRow", "Decorators", "Gender", "fieldsProxy", "_NoteRow", "__name", "fieldsProxy", "NoteRow", "ColumnsBase", "fieldsProxy", "Decorators", "IInitializeColumn", "faIcon", "htmlEncode", "isTrimmedEmpty", "_EmployeeFormatter_decorators", "_init", "Decorators", "IInitializeColumn", "_EmployeeFormatter", "props", "_a", "ctx", "text", "htmlEncode", "isTrimmedEmpty", "female", "faIcon", "column", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "EmployeeFormatter", "Decorators", "faIcon", "htmlEncode", "_FreightFormatter_decorators", "_init", "Decorators", "_FreightFormatter", "ctx", "htmlEncode", "faIcon", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "FreightFormatter", "Decorators", "faIcon", "_ShipperFormatter_decorators", "_init", "Decorators", "_ShipperFormatter", "ctx", "faIcon", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "ShipperFormatter", "Decorators", "OrderShippingState", "_OrderColumns", "ColumnsBase", "__name", "fieldsProxy", "OrderColumns", "ColumnsBase", "fieldsProxy", "_OrderDetailColumns", "ColumnsBase", "__name", "fieldsProxy", "OrderDetailColumns", "LookupEditor", "DecimalEditor", "IntegerEditor", "PrefixedContext", "initFormType", "_OrderDetailForm", "PrefixedContext", "prefix", "w0", "LookupEditor", "w1", "DecimalEditor", "w2", "IntegerEditor", "initFormType", "__name", "OrderDetailForm", "fieldsProxy", "_OrderDetailRow", "__name", "fieldsProxy", "OrderDetailRow", "serviceRequest", "OrderDetailService", "x", "r", "s", "o", "DateEditor", "LookupEditor", "DecimalEditor", "StringEditor", "PrefixedContext", "initFormType", "Decorators", "LookupEditorBase", "_CustomerEditor_decorators", "_init", "_a", "Decorators", "_CustomerEditor", "LookupEditorBase", "props", "__spreadValues", "item", "lookup", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "CustomerEditor", "Decorators", "alertDialog", "toId", "GridEditorBase", "Decorators", "toId", "GridEditorDialog", "_OrderDetailDialog_decorators", "_init", "_a", "Decorators", "_OrderDetailDialog", "GridEditorDialog", "OrderDetailForm", "OrderDetailRow", "props", "productID", "toId", "ProductRow", "price", "quantity", "discount", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "OrderDetailDialog", "_OrderDetailsEditor_decorators", "_init", "_a", "Decorators", "_OrderDetailsEditor", "GridEditorBase", "OrderDetailColumns", "OrderDetailDialog", "OrderDetailRow", "row", "id", "toId", "sameProduct", "x", "alertDialog", "ProductRow", "lookup", "_b", "item", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "OrderDetailsEditor", "_OrderForm", "PrefixedContext", "prefix", "w0", "CustomerEditor", "w1", "DateEditor", "w2", "LookupEditor", "w3", "OrderDetailsEditor", "w4", "DecimalEditor", "w5", "StringEditor", "initFormType", "__name", "OrderForm", "fieldsProxy", "_OrderRow", "__name", "fieldsProxy", "OrderRow", "serviceRequest", "OrderService", "x", "r", "s", "o", "PermissionKeys", "Customer", "ColumnsBase", "fieldsProxy", "_ProductColumns", "ColumnsBase", "__name", "fieldsProxy", "ProductColumns", "StringEditor", "ImageUploadEditor", "BooleanEditor", "LookupEditor", "DecimalEditor", "IntegerEditor", "PrefixedContext", "initFormType", "Decorators", "EntityDialog", "_SupplierDialog_decorators", "_init", "_a", "Decorators", "_SupplierDialog", "EntityDialog", "SupplierForm", "SupplierRow", "SupplierService", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "SupplierDialog", "_ProductForm", "PrefixedContext", "prefix", "w0", "StringEditor", "w1", "ImageUploadEditor", "w2", "BooleanEditor", "w3", "LookupEditor", "w4", "DecimalEditor", "w5", "IntegerEditor", "initFormType", "__name", "ProductForm", "fieldsProxy", "_ProductLangRow", "__name", "fieldsProxy", "ProductLangRow", "serviceRequest", "ProductLangService", "x", "r", "s", "o", "fieldsProxy", "_ProductLogRow", "__name", "fieldsProxy", "ProductLogRow", "getLookup", "getLookupAsync", "fieldsProxy", "_ProductRow", "getLookup", "getLookupAsync", "__name", "fieldsProxy", "ProductRow", "serviceRequest", "ProductService", "x", "r", "s", "o", "ColumnsBase", "fieldsProxy", "_RegionColumns", "ColumnsBase", "__name", "fieldsProxy", "RegionColumns", "IntegerEditor", "StringEditor", "PrefixedContext", "initFormType", "_RegionForm", "PrefixedContext", "prefix", "w0", "IntegerEditor", "w1", "StringEditor", "initFormType", "__name", "RegionForm", "getLookup", "getLookupAsync", "fieldsProxy", "_RegionRow", "getLookup", "getLookupAsync", "__name", "fieldsProxy", "RegionRow", "serviceRequest", "RegionService", "x", "r", "s", "o", "ColumnsBase", "fieldsProxy", "_SalesByCategoryColumns", "ColumnsBase", "__name", "fieldsProxy", "SalesByCategoryColumns", "fieldsProxy", "_SalesByCategoryRow", "__name", "fieldsProxy", "SalesByCategoryRow", "serviceRequest", "SalesByCategoryService", "x", "r", "s", "o", "ColumnsBase", "fieldsProxy", "_ShipperColumns", "ColumnsBase", "__name", "fieldsProxy", "ShipperColumns", "StringEditor", "PrefixedContext", "initFormType", "Decorators", "StringEditor", "localText", "replaceAll", "_PhoneEditor_decorators", "_init", "_a", "Decorators", "_PhoneEditor", "StringEditor", "props", "e", "_b", "value", "input", "phone", "isMultiple", "valid", "localText", "replaceAll", "i", "c", "format", "phones", "result", "x", "s", "check", "anyValid", "$t1", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "PhoneEditor", "_ShipperForm", "PrefixedContext", "prefix", "w0", "StringEditor", "w1", "PhoneEditor", "initFormType", "__name", "ShipperForm", "getLookup", "getLookupAsync", "fieldsProxy", "_ShipperRow", "getLookup", "getLookupAsync", "__name", "fieldsProxy", "ShipperRow", "serviceRequest", "ShipperService", "x", "r", "s", "o", "ColumnsBase", "fieldsProxy", "_SupplierColumns", "ColumnsBase", "__name", "fieldsProxy", "SupplierColumns", "StringEditor", "PrefixedContext", "initFormType", "_SupplierForm", "PrefixedContext", "prefix", "w0", "StringEditor", "initFormType", "__name", "SupplierForm", "getLookup", "getLookupAsync", "fieldsProxy", "_SupplierRow", "getLookup", "getLookupAsync", "__name", "fieldsProxy", "SupplierRow", "serviceRequest", "SupplierService", "x", "r", "s", "o", "ColumnsBase", "fieldsProxy", "_TerritoryColumns", "ColumnsBase", "__name", "fieldsProxy", "TerritoryColumns", "StringEditor", "LookupEditor", "PrefixedContext", "initFormType", "_TerritoryForm", "PrefixedContext", "prefix", "w0", "StringEditor", "w1", "LookupEditor", "initFormType", "__name", "TerritoryForm", "getLookup", "getLookupAsync", "fieldsProxy", "_TerritoryRow", "getLookup", "getLookupAsync", "__name", "fieldsProxy", "TerritoryRow", "serviceRequest", "TerritoryService", "x", "r", "s", "o", "Decorators", "EntityDialog", "_CategoryDialog_decorators", "_init", "_a", "Decorators", "_CategoryDialog", "EntityDialog", "CategoryForm", "CategoryRow", "CategoryService", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "CategoryDialog", "Decorators", "EntityGrid", "_CategoryGrid_decorators", "_init", "_a", "Decorators", "_CategoryGrid", "EntityGrid", "CategoryColumns", "CategoryDialog", "CategoryRow", "CategoryService", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "CategoryGrid", "Decorators", "EntityDialog", "TabsExtensions", "localText", "reloadLookup", "DialogUtils", "Decorators", "SubDialogHelper", "Decorators", "EntityGrid", "EnumEditor", "Fluent", "LookupEditor", "faIcon", "toId", "ExcelExportHelper", "PdfExportHelper", "ReportHelper", "Decorators", "EntityDialog", "ReportHelper", "_OrderDialog_decorators", "_init", "_a", "Decorators", "_OrderDialog", "EntityDialog", "OrderForm", "OrderRow", "OrderService", "buttons", "ReportHelper", "__name", "__decoratorStart", "__decorateElement", "__runInitializers", "OrderDialog", "fld", "OrderRow", "_OrderGrid_decorators", "_init", "_a", "Decorators", "_OrderGrid", "EntityGrid", "OrderColumns", "OrderDialog", "OrderService", "filters", "LookupEditor", "ProductRow", "__name", "w", "toId", "EnumEditor", "buttons", "ExcelExportHelper", "PdfExportHelper", "columns", "_", "faIcon", "e", "row", "cell", "_b", "Fluent", "item", "action", "ReportHelper", "value", "eq", "__decoratorStart", "__decorateElement", "__runInitializers", "OrderGrid", "Decorators", "EditorUtils", "_CustomerOrderDialog_decorators", "_init", "_a", "Decorators", "_CustomerOrderDialog", "OrderDialog", "EditorUtils", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "CustomerOrderDialog", "fld", "OrderRow", "_CustomerOrdersGrid_decorators", "_init", "_a", "Decorators", "_CustomerOrdersGrid", "OrderGrid", "CustomerOrderDialog", "x", "itemType", "dialog", "SubDialogHelper", "buttons", "addButton", "value", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "CustomerOrdersGrid", "_CustomerDialog_decorators", "_init", "_a", "Decorators", "_CustomerDialog", "EntityDialog", "props", "CustomerForm", "CustomerRow", "CustomerService", "DialogUtils", "data", "entity", "TabsExtensions", "response", "reloadLookup", "id", "jsx", "localText", "CustomerOrdersGrid", "grid", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "CustomerDialog", "Decorators", "EntityGrid", "_CustomerGrid_decorators", "_init", "_a", "Decorators", "_CustomerGrid", "EntityGrid", "CustomerColumns", "CustomerDialog", "CustomerRow", "CustomerService", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "CustomerGrid", "Decorators", "EntityDialog", "_ProductDialog_decorators", "_init", "_a", "Decorators", "_ProductDialog", "EntityDialog", "ProductForm", "ProductRow", "ProductService", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "ProductDialog", "Decorators", "EntityGrid", "LookupEditor", "deepClone", "formatNumber", "htmlEncode", "localText", "notifyError", "parseDecimal", "parseInteger", "parseQueryString", "serviceRequest", "toId", "ExcelExportHelper", "PdfExportHelper", "fld", "ProductRow", "_ProductGrid_decorators", "_init", "_a", "Decorators", "_ProductGrid", "EntityGrid", "props", "e", "ProductColumns", "ProductDialog", "ProductService", "buttons", "ExcelExportHelper", "__name", "PdfExportHelper", "response", "ctx", "htmlEncode", "formatNumber", "klass", "item", "pending", "value", "column", "idField", "lookup", "markup", "c", "id", "field", "columns", "num", "str", "CategoryRow", "SupplierRow", "cell", "input", "txt", "effective", "oldText", "parseDecimal", "notifyError", "localText", "i", "parseInteger", "toId", "keys", "current", "self", "saveNext", "key", "entity", "deepClone", "serviceRequest", "flt", "q", "parseQueryString", "category", "x", "LookupEditor", "__decoratorStart", "__decorateElement", "__runInitializers", "ProductGrid", "Decorators", "EntityDialog", "_RegionDialog_decorators", "_init", "_a", "Decorators", "_RegionDialog", "EntityDialog", "RegionForm", "RegionRow", "RegionService", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "RegionDialog", "Decorators", "EntityGrid", "_RegionGrid_decorators", "_init", "_a", "Decorators", "_RegionGrid", "EntityGrid", "RegionColumns", "RegionDialog", "RegionRow", "RegionService", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "RegionGrid", "Decorators", "EntityDialog", "_ShipperDialog_decorators", "_init", "_a", "Decorators", "_ShipperDialog", "EntityDialog", "ShipperForm", "ShipperRow", "ShipperService", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "ShipperDialog", "Decorators", "EntityGrid", "_ShipperGrid_decorators", "_init", "_a", "Decorators", "_ShipperGrid", "EntityGrid", "ShipperColumns", "ShipperDialog", "ShipperRow", "ShipperService", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "ShipperGrid", "Decorators", "EntityGrid", "_SupplierGrid_decorators", "_init", "_a", "Decorators", "_SupplierGrid", "EntityGrid", "SupplierColumns", "SupplierDialog", "SupplierRow", "SupplierService", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "SupplierGrid", "Decorators", "EntityDialog", "_TerritoryDialog_decorators", "_init", "_a", "Decorators", "_TerritoryDialog", "EntityDialog", "TerritoryForm", "TerritoryRow", "TerritoryService", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "TerritoryDialog", "Decorators", "EntityGrid", "_TerritoryGrid_decorators", "_init", "_a", "Decorators", "_TerritoryGrid", "EntityGrid", "TerritoryColumns", "TerritoryDialog", "TerritoryRow", "TerritoryService", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "TerritoryGrid"]
}
